

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Tue Dec 07 11:53:41 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1
    72                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=1
    73                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=1
    74                           	psect	text58,global,reloc=2,class=CODE,delta=1
    75                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    76                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    77                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    78                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    79  0000                     
    80                           ; Version 2.32
    81                           ; Generated 02/02/2021 GMT
    82                           ; 
    83                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    84                           ; All rights reserved.
    85                           ; 
    86                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    87                           ; 
    88                           ; Redistribution and use in source and binary forms, with or without modification, are
    89                           ; permitted provided that the following conditions are met:
    90                           ; 
    91                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    92                           ;        conditions and the following disclaimer.
    93                           ; 
    94                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    95                           ;        of conditions and the following disclaimer in the documentation and/or other
    96                           ;        materials provided with the distribution. Publication is not required when
    97                           ;        this file is used in an embedded application.
    98                           ; 
    99                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   100                           ;        software without specific prior written permission.
   101                           ; 
   102                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   103                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   104                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   105                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   106                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   107                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   108                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   109                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   110                           ; 
   111                           ; 
   112                           ; Code-generator required, PIC18F4520 Definitions
   113                           ; 
   114                           ; SFR Addresses
   115  0000                     
   116                           	psect	idataBANK0
   117  00283C                     __pidataBANK0:
   118                           	callstack 0
   119                           
   120                           ;initializer for apostaTxt@F2791
   121  00283C  41                 	db	65
   122  00283D  47                 	db	71
   123  00283E  55                 	db	85
   124  00283F  45                 	db	69
   125  002840  4E                 	db	78
   126  002841  54                 	db	84
   127  002842  41                 	db	65
   128  002843  7C                 	db	124
   129  002844  21                 	db	33
   130  002845  00                 	db	0
   131  002846  00                 	db	0
   132  002847  00                 	db	0
   133  002848  00                 	db	0
   134  002849  00                 	db	0
   135  00284A  00                 	db	0
   136                           
   137                           ;initializer for apostaTxt@F2789
   138  00284B  56                 	db	86
   139  00284C  6F                 	db	111
   140  00284D  63                 	db	99
   141  00284E  65                 	db	101
   142  00284F  20                 	db	32
   143  002850  61                 	db	97
   144  002851  63                 	db	99
   145  002852  68                 	db	104
   146  002853  61                 	db	97
   147  002854  20                 	db	32
   148  002855  71                 	db	113
   149  002856  75                 	db	117
   150  002857  65                 	db	101
   151  002858  00                 	db	0
   152  002859  00                 	db	0
   153                           
   154                           ;initializer for textInit@F2776
   155  00285A  57                 	db	87
   156  00285B  65                 	db	101
   157  00285C  6C                 	db	108
   158  00285D  63                 	db	99
   159  00285E  6F                 	db	111
   160  00285F  6D                 	db	109
   161  002860  65                 	db	101
   162  002861  20                 	db	32
   163  002862  74                 	db	116
   164  002863  6F                 	db	111
   165  002864  00                 	db	0
   166  002865  00                 	db	0
   167                           
   168                           ;initializer for saldoTxt@F2794
   169  002866  53                 	db	83
   170  002867  61                 	db	97
   171  002868  6C                 	db	108
   172  002869  64                 	db	100
   173  00286A  6F                 	db	111
   174  00286B  3A                 	db	58
   175  00286C  20                 	db	32
   176                           
   177                           ;initializer for _saldo
   178  00286D  028A               	dw	650
   179                           
   180                           	psect	idataBANK1
   181  001A54                     __pidataBANK1:
   182                           	callstack 0
   183                           
   184                           ;initializer for Win2x@F2819
   185  001A54  48                 	db	72
   186  001A55  4F                 	db	79
   187  001A56  4C                 	db	76
   188  001A57  59                 	db	89
   189  001A58  20                 	db	32
   190  001A59  4D                 	db	77
   191  001A5A  4F                 	db	79
   192  001A5B  4C                 	db	76
   193  001A5C  59                 	db	89
   194  001A5D  20                 	db	32
   195  001A5E  59                 	db	89
   196  001A5F  4F                 	db	79
   197  001A60  55                 	db	85
   198  001A61  20                 	db	32
   199  001A62  57                 	db	87
   200  001A63  49                 	db	73
   201  001A64  4E                 	db	78
   202  001A65  20                 	db	32
   203  001A66  32                 	db	50
   204  001A67  58                 	db	88
   205  001A68  00                 	db	0
   206                           
   207                           ;initializer for GameOver@F2806
   208  001A69  59                 	db	89
   209  001A6A  4F                 	db	79
   210  001A6B  55                 	db	85
   211  001A6C  20                 	db	32
   212  001A6D  4C                 	db	76
   213  001A6E  4F                 	db	79
   214  001A6F  53                 	db	83
   215  001A70  45                 	db	69
   216  001A71  2E                 	db	46
   217  001A72  2E                 	db	46
   218  001A73  2E                 	db	46
   219  001A74  00                 	db	0
   220  001A75  00                 	db	0
   221  001A76  00                 	db	0
   222  001A77  00                 	db	0
   223  001A78  00                 	db	0
   224  001A79  00                 	db	0
   225  001A7A  00                 	db	0
   226  001A7B  00                 	db	0
   227  001A7C  00                 	db	0
   228                           
   229                           ;initializer for textInit@F2778
   230  001A7D  54                 	db	84
   231  001A7E  48                 	db	72
   232  001A7F  45                 	db	69
   233  001A80  20                 	db	32
   234  001A81  47                 	db	71
   235  001A82  41                 	db	65
   236  001A83  4D                 	db	77
   237  001A84  45                 	db	69
   238  001A85  21                 	db	33
   239  001A86  00                 	db	0
   240  001A87  00                 	db	0
   241  001A88  00                 	db	0
   242  001A89  00                 	db	0
   243  001A8A  00                 	db	0
   244  001A8B  00                 	db	0
   245  001A8C  00                 	db	0
   246  001A8D  00                 	db	0
   247                           
   248                           ;initializer for apostandoTxtProgress@F2835
   249  001A8E  41                 	db	65
   250  001A8F  70                 	db	112
   251  001A90  6F                 	db	111
   252  001A91  73                 	db	115
   253  001A92  74                 	db	116
   254  001A93  61                 	db	97
   255  001A94  6E                 	db	110
   256  001A95  64                 	db	100
   257  001A96  6F                 	db	111
   258  001A97  3A                 	db	58
   259  001A98  20                 	db	32
   260  001A99  2D                 	db	45
   261  001A9A  31                 	db	49
   262  001A9B  30                 	db	48
   263  001A9C  30                 	db	48
   264                           
   265                           ;initializer for apostandoTxtProgress@F2833
   266  001A9D  3A                 	db	58
   267  001A9E  4F                 	db	79
   268  001A9F  20                 	db	32
   269  001AA0  00                 	db	0
   270  001AA1  00                 	db	0
   271  001AA2  00                 	db	0
   272  001AA3  00                 	db	0
   273  001AA4  00                 	db	0
   274  001AA5  00                 	db	0
   275  001AA6  00                 	db	0
   276  001AA7  00                 	db	0
   277  001AA8  00                 	db	0
   278  001AA9  00                 	db	0
   279  001AAA  00                 	db	0
   280  001AAB  00                 	db	0
   281                           
   282                           ;initializer for Win1x@F2826
   283  001AAC  72                 	db	114
   284  001AAD  65                 	db	101
   285  001AAE  63                 	db	99
   286  001AAF  65                 	db	101
   287  001AB0  62                 	db	98
   288  001AB1  65                 	db	101
   289  001AB2  75                 	db	117
   290  001AB3  3A                 	db	58
   291  001AB4  20                 	db	32
   292  001AB5  2B                 	db	43
   293  001AB6  31                 	db	49
   294  001AB7  30                 	db	48
   295  001AB8  30                 	db	48
   296  001AB9  20                 	db	32
   297  001ABA  00                 	db	0
   298                           
   299                           ;initializer for Win1x@F2824
   300  001ABB  4F                 	db	79
   301  001ABC  4D                 	db	77
   302  001ABD  47                 	db	71
   303  001ABE  20                 	db	32
   304  001ABF  59                 	db	89
   305  001AC0  4F                 	db	79
   306  001AC1  55                 	db	85
   307  001AC2  20                 	db	32
   308  001AC3  57                 	db	87
   309  001AC4  49                 	db	73
   310  001AC5  4E                 	db	78
   311  001AC6  20                 	db	32
   312  001AC7  31                 	db	49
   313  001AC8  78                 	db	120
   314  001AC9  00                 	db	0
   315                           
   316                           ;initializer for Win2x@F2821
   317  001ACA  72                 	db	114
   318  001ACB  65                 	db	101
   319  001ACC  63                 	db	99
   320  001ACD  65                 	db	101
   321  001ACE  62                 	db	98
   322  001ACF  65                 	db	101
   323  001AD0  75                 	db	117
   324  001AD1  3A                 	db	58
   325  001AD2  20                 	db	32
   326  001AD3  2B                 	db	43
   327  001AD4  32                 	db	50
   328  001AD5  30                 	db	48
   329  001AD6  30                 	db	48
   330  001AD7  20                 	db	32
   331  001AD8  00                 	db	0
   332                           
   333                           ;initializer for WinAll@F2816
   334  001AD9  4F                 	db	79
   335  001ADA  4D                 	db	77
   336  001ADB  47                 	db	71
   337  001ADC  3A                 	db	58
   338  001ADD  2B                 	db	43
   339  001ADE  35                 	db	53
   340  001ADF  30                 	db	48
   341  001AE0  30                 	db	48
   342  001AE1  21                 	db	33
   343  001AE2  21                 	db	33
   344  001AE3  21                 	db	33
   345  001AE4  20                 	db	32
   346  001AE5  00                 	db	0
   347  001AE6  00                 	db	0
   348  001AE7  00                 	db	0
   349                           
   350                           ;initializer for WinAll@F2814
   351  001AE8  4F                 	db	79
   352  001AE9  4D                 	db	77
   353  001AEA  47                 	db	71
   354  001AEB  20                 	db	32
   355  001AEC  59                 	db	89
   356  001AED  4F                 	db	79
   357  001AEE  55                 	db	85
   358  001AEF  20                 	db	32
   359  001AF0  48                 	db	72
   360  001AF1  49                 	db	73
   361  001AF2  54                 	db	84
   362  001AF3  20                 	db	32
   363  001AF4  49                 	db	73
   364  001AF5  54                 	db	84
   365  001AF6  00                 	db	0
   366                           
   367                           ;initializer for Lose@F2811
   368  001AF7  70                 	db	112
   369  001AF8  65                 	db	101
   370  001AF9  72                 	db	114
   371  001AFA  64                 	db	100
   372  001AFB  65                 	db	101
   373  001AFC  75                 	db	117
   374  001AFD  3A                 	db	58
   375  001AFE  20                 	db	32
   376  001AFF  2D                 	db	45
   377  001B00  31                 	db	49
   378  001B01  30                 	db	48
   379  001B02  30                 	db	48
   380  001B03  00                 	db	0
   381  001B04  00                 	db	0
   382  001B05  00                 	db	0
   383                           
   384                           ;initializer for Lose@F2809
   385  001B06  59                 	db	89
   386  001B07  4F                 	db	79
   387  001B08  55                 	db	85
   388  001B09  20                 	db	32
   389  001B0A  4C                 	db	76
   390  001B0B  4F                 	db	79
   391  001B0C  53                 	db	83
   392  001B0D  45                 	db	69
   393  001B0E  00                 	db	0
   394  001B0F  00                 	db	0
   395  001B10  00                 	db	0
   396  001B11  00                 	db	0
   397  001B12  00                 	db	0
   398  001B13  00                 	db	0
   399  001B14  00                 	db	0
   400                           
   401                           ;initializer for GameOver@F2804
   402  001B15  47                 	db	71
   403  001B16  41                 	db	65
   404  001B17  4D                 	db	77
   405  001B18  45                 	db	69
   406  001B19  20                 	db	32
   407  001B1A  4F                 	db	79
   408  001B1B  56                 	db	86
   409  001B1C  45                 	db	69
   410  001B1D  52                 	db	82
   411  001B1E  00                 	db	0
   412  001B1F  00                 	db	0
   413  001B20  00                 	db	0
   414  001B21  00                 	db	0
   415  001B22  00                 	db	0
   416  001B23  00                 	db	0
   417                           
   418                           ;initializer for waitTxtProgress@F2801
   419  001B24  44                 	db	68
   420  001B25  33                 	db	51
   421  001B26  20                 	db	32
   422  001B27  65                 	db	101
   423  001B28  73                 	db	115
   424  001B29  71                 	db	113
   425  001B2A  20                 	db	32
   426  001B2B  53                 	db	83
   427  001B2C  61                 	db	97
   428  001B2D  6C                 	db	108
   429  001B2E  64                 	db	100
   430  001B2F  6F                 	db	111
   431  001B30  00                 	db	0
   432  001B31  00                 	db	0
   433  001B32  00                 	db	0
   434                           
   435                           ;initializer for waitTxtProgress@F2799
   436  001B33  44                 	db	68
   437  001B34  34                 	db	52
   438  001B35  20                 	db	32
   439  001B36  65                 	db	101
   440  001B37  73                 	db	115
   441  001B38  71                 	db	113
   442  001B39  20                 	db	32
   443  001B3A  41                 	db	65
   444  001B3B  70                 	db	112
   445  001B3C  6F                 	db	111
   446  001B3D  73                 	db	115
   447  001B3E  74                 	db	116
   448  001B3F  61                 	db	97
   449  001B40  00                 	db	0
   450  001B41  00                 	db	0
   451                           
   452                           	psect	smallconst
   453  000600                     __psmallconst:
   454                           	callstack 0
   455  000600  00                 	db	0
   456  000601                     _valor:
   457                           	callstack 0
   458  000601  3F                 	db	63
   459  000602  06                 	db	6
   460  000603  5B                 	db	91
   461  000604  4F                 	db	79
   462  000605  66                 	db	102
   463  000606  6D                 	db	109
   464  000607  7D                 	db	125
   465  000608  07                 	db	7
   466  000609  7F                 	db	127
   467  00060A  6F                 	db	111
   468  00060B  77                 	db	119
   469  00060C  7C                 	db	124
   470  00060D  39                 	db	57
   471  00060E  5E                 	db	94
   472  00060F  79                 	db	121
   473  000610  71                 	db	113
   474  000611                     __end_of_valor:
   475                           	callstack 0
   476  000611  55                 	db	85
   477  000612  4C                 	db	76
   478  000613  44                 	db	68
   479  000614  52                 	db	82
   480  000615  53                 	db	83
   481  000616  58                 	db	88
   482  000617  41                 	db	65
   483  000618  42                 	db	66
   484  000619  59                 	db	89
   485  00061A  73                 	db	115
   486  00061B                     __end_of_charKey:
   487                           	callstack 0
   488  00061B                     STR_1:
   489  00061B  7A                 	db	122	;'z'
   490  00061C  79                 	db	121	;'y'
   491  00061D  78                 	db	120	;'x'
   492  00061E  77                 	db	119	;'w'
   493  00061F  76                 	db	118	;'v'
   494  000620  75                 	db	117	;'u'
   495  000621  74                 	db	116	;'t'
   496  000622  73                 	db	115	;'s'
   497  000623  72                 	db	114	;'r'
   498  000624  71                 	db	113	;'q'
   499  000625  70                 	db	112	;'p'
   500  000626  6F                 	db	111	;'o'
   501  000627  6E                 	db	110	;'n'
   502  000628  6D                 	db	109	;'m'
   503  000629  6C                 	db	108	;'l'
   504  00062A  6B                 	db	107	;'k'
   505  00062B  6A                 	db	106	;'j'
   506  00062C  69                 	db	105	;'i'
   507  00062D  68                 	db	104	;'h'
   508  00062E  67                 	db	103	;'g'
   509  00062F  66                 	db	102	;'f'
   510  000630  65                 	db	101	;'e'
   511  000631  64                 	db	100	;'d'
   512  000632  63                 	db	99	;'c'
   513  000633  62                 	db	98	;'b'
   514  000634  61                 	db	97	;'a'
   515  000635  39                 	db	57	;'9'
   516  000636  38                 	db	56	;'8'
   517  000637  37                 	db	55	;'7'
   518  000638  36                 	db	54	;'6'
   519  000639  35                 	db	53	;'5'
   520  00063A  34                 	db	52	;'4'
   521  00063B  33                 	db	51	;'3'
   522  00063C  32                 	db	50	;'2'
   523  00063D  31                 	db	49	;'1'
   524  00063E  30                 	db	48	;'0'
   525  00063F  31                 	db	49	;'1'
   526  000640  32                 	db	50	;'2'
   527  000641  33                 	db	51	;'3'
   528  000642  34                 	db	52	;'4'
   529  000643  35                 	db	53	;'5'
   530  000644  36                 	db	54	;'6'
   531  000645  37                 	db	55	;'7'
   532  000646  38                 	db	56	;'8'
   533  000647  39                 	db	57	;'9'
   534  000648  61                 	db	97	;'a'
   535  000649  62                 	db	98	;'b'
   536  00064A  63                 	db	99	;'c'
   537  00064B  64                 	db	100	;'d'
   538  00064C  65                 	db	101	;'e'
   539  00064D  66                 	db	102	;'f'
   540  00064E  67                 	db	103	;'g'
   541  00064F  68                 	db	104	;'h'
   542  000650  69                 	db	105	;'i'
   543  000651  6A                 	db	106	;'j'
   544  000652  6B                 	db	107	;'k'
   545  000653  6C                 	db	108	;'l'
   546  000654  6D                 	db	109	;'m'
   547  000655  6E                 	db	110	;'n'
   548  000656  6F                 	db	111	;'o'
   549  000657  70                 	db	112	;'p'
   550  000658  71                 	db	113	;'q'
   551  000659  72                 	db	114	;'r'
   552  00065A  73                 	db	115	;'s'
   553  00065B  74                 	db	116	;'t'
   554  00065C  75                 	db	117	;'u'
   555  00065D  76                 	db	118	;'v'
   556  00065E  77                 	db	119	;'w'
   557  00065F  78                 	db	120	;'x'
   558  000660  79                 	db	121	;'y'
   559  000661  7A                 	db	122	;'z'
   560  000662  00                 	db	0
   561  000663  00                 	db	0	; dummy byte at the end
   562  0000                     
   563                           	psect	nvBANK0
   564  0000F2                     __pnvBANK0:
   565                           	callstack 0
   566  0000F2                     _seed:
   567                           	callstack 0
   568  0000F2                     	ds	4
   569  0000                     _ADCON1	set	4033
   570  0000                     _TRISE	set	3990
   571  0000                     _TRISD	set	3989
   572  0000                     _TRISC	set	3988
   573  0000                     _TRISB	set	3987
   574  0000                     _TRISA	set	3986
   575  0000                     _PORTE	set	3972
   576  0000                     _PORTD	set	3971
   577  0000                     _PORTC	set	3970
   578  0000                     _PORTB	set	3969
   579  0000                     _PORTA	set	3968
   580                           
   581                           ; #config settings
   582                           
   583                           	psect	cinit
   584  0023B0                     __pcinit:
   585                           	callstack 0
   586  0023B0                     start_initialization:
   587                           	callstack 0
   588  0023B0                     __initialization:
   589                           	callstack 0
   590                           
   591                           ; Initialize objects allocated to BANK1 (238 bytes)
   592                           ; load TBLPTR registers with __pidataBANK1
   593  0023B0  0E54               	movlw	low __pidataBANK1
   594  0023B2  6EF6               	movwf	tblptrl,c
   595  0023B4  0E1A               	movlw	high __pidataBANK1
   596  0023B6  6EF7               	movwf	tblptrh,c
   597  0023B8  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   598  0023BA  6EF8               	movwf	tblptru,c
   599  0023BC  EE01  F000         	lfsr	0,__pdataBANK1
   600  0023C0  EE10 F0EE          	lfsr	1,238
   601  0023C4                     copy_data0:
   602  0023C4  0009               	tblrd		*+
   603  0023C6  CFF5 FFEE          	movff	tablat,postinc0
   604  0023CA  50E5               	movf	postdec1,w,c
   605  0023CC  50E1               	movf	fsr1l,w,c
   606  0023CE  E1FA               	bnz	copy_data0
   607                           
   608                           ; Initialize objects allocated to BANK0 (51 bytes)
   609                           ; load TBLPTR registers with __pidataBANK0
   610  0023D0  0E3C               	movlw	low __pidataBANK0
   611  0023D2  6EF6               	movwf	tblptrl,c
   612  0023D4  0E28               	movlw	high __pidataBANK0
   613  0023D6  6EF7               	movwf	tblptrh,c
   614  0023D8  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   615  0023DA  6EF8               	movwf	tblptru,c
   616  0023DC  EE00  F080         	lfsr	0,__pdataBANK0
   617  0023E0  EE10 F033          	lfsr	1,51
   618  0023E4                     copy_data1:
   619  0023E4  0009               	tblrd		*+
   620  0023E6  CFF5 FFEE          	movff	tablat,postinc0
   621  0023EA  50E5               	movf	postdec1,w,c
   622  0023EC  50E1               	movf	fsr1l,w,c
   623  0023EE  E1FA               	bnz	copy_data1
   624                           
   625                           ; Clear objects allocated to BANK0 (25 bytes)
   626  0023F0  EE00  F0D9         	lfsr	0,__pbssBANK0
   627  0023F4  0E19               	movlw	25
   628  0023F6                     clear_0:
   629  0023F6  6AEE               	clrf	postinc0,c
   630  0023F8  06E8               	decf	wreg,f,c
   631  0023FA  E1FD               	bnz	clear_0
   632                           
   633                           ; Clear objects allocated to COMRAM (1 bytes)
   634  0023FC  6A7F               	clrf	__pbssCOMRAM& (0+255),c
   635  0023FE                     end_of_initialization:
   636                           	callstack 0
   637  0023FE                     __end_of__initialization:
   638                           	callstack 0
   639  0023FE  0E00               	movlw	low (__Lmediumconst shr (0+16))
   640  002400  6EF8               	movwf	tblptru,c
   641  002402  0100               	movlb	0
   642  002404  EFA1  F00D         	goto	_main	;jump to C main() function
   643                           
   644                           	psect	bssCOMRAM
   645  00007F                     __pbssCOMRAM:
   646                           	callstack 0
   647  00007F                     kpDebounce@tempo:
   648                           	callstack 0
   649  00007F                     	ds	1
   650                           
   651                           	psect	bssBANK0
   652  0000D9                     __pbssBANK0:
   653                           	callstack 0
   654  0000D9                     	ds	10
   655  0000E3                     _random:
   656                           	callstack 0
   657  0000E3                     	ds	2
   658  0000E5                     kpDebounce@oldRead:
   659                           	callstack 0
   660  0000E5                     	ds	2
   661  0000E7                     kpDebounce@newRead:
   662                           	callstack 0
   663  0000E7                     	ds	2
   664  0000E9                     _keys:
   665                           	callstack 0
   666  0000E9                     	ds	2
   667  0000EB                     _started:
   668                           	callstack 0
   669  0000EB                     	ds	1
   670  0000EC                     _i:
   671                           	callstack 0
   672  0000EC                     	ds	1
   673  0000ED                     _v3:
   674                           	callstack 0
   675  0000ED                     	ds	1
   676  0000EE                     _v2:
   677                           	callstack 0
   678  0000EE                     	ds	1
   679  0000EF                     _v1:
   680                           	callstack 0
   681  0000EF                     	ds	1
   682  0000F0                     _v0:
   683                           	callstack 0
   684  0000F0                     	ds	1
   685  0000F1                     _display:
   686                           	callstack 0
   687  0000F1                     	ds	1
   688                           
   689                           	psect	dataBANK0
   690  000080                     __pdataBANK0:
   691                           	callstack 0
   692  000080                     apostaTxt@F2791:
   693                           	callstack 0
   694  000080                     	ds	15
   695  00008F                     apostaTxt@F2789:
   696                           	callstack 0
   697  00008F                     	ds	15
   698  00009E                     textInit@F2776:
   699                           	callstack 0
   700  00009E                     	ds	12
   701  0000AA                     saldoTxt@F2794:
   702                           	callstack 0
   703  0000AA                     	ds	7
   704  0000B1                     _saldo:
   705                           	callstack 0
   706  0000B1                     	ds	2
   707                           
   708                           	psect	dataBANK1
   709  000100                     __pdataBANK1:
   710                           	callstack 0
   711  000100                     Win2x@F2819:
   712                           	callstack 0
   713  000100                     	ds	21
   714  000115                     GameOver@F2806:
   715                           	callstack 0
   716  000115                     	ds	20
   717  000129                     textInit@F2778:
   718                           	callstack 0
   719  000129                     	ds	17
   720  00013A                     apostandoTxtProgress@F2835:
   721                           	callstack 0
   722  00013A                     	ds	15
   723  000149                     apostandoTxtProgress@F2833:
   724                           	callstack 0
   725  000149                     	ds	15
   726  000158                     Win1x@F2826:
   727                           	callstack 0
   728  000158                     	ds	15
   729  000167                     Win1x@F2824:
   730                           	callstack 0
   731  000167                     	ds	15
   732  000176                     Win2x@F2821:
   733                           	callstack 0
   734  000176                     	ds	15
   735  000185                     WinAll@F2816:
   736                           	callstack 0
   737  000185                     	ds	15
   738  000194                     WinAll@F2814:
   739                           	callstack 0
   740  000194                     	ds	15
   741  0001A3                     Lose@F2811:
   742                           	callstack 0
   743  0001A3                     	ds	15
   744  0001B2                     Lose@F2809:
   745                           	callstack 0
   746  0001B2                     	ds	15
   747  0001C1                     GameOver@F2804:
   748                           	callstack 0
   749  0001C1                     	ds	15
   750  0001D0                     waitTxtProgress@F2801:
   751                           	callstack 0
   752  0001D0                     	ds	15
   753  0001DF                     waitTxtProgress@F2799:
   754                           	callstack 0
   755  0001DF                     	ds	15
   756                           
   757                           	psect	cstackBANK0
   758  0000B3                     __pcstackBANK0:
   759                           	callstack 0
   760  0000B3                     apostandoTxtProgress@text:
   761                           	callstack 0
   762                           
   763                           ; 15 bytes @ 0x0
   764  0000B3                     	ds	15
   765  0000C2                     apostandoTxtProgress@text2:
   766                           	callstack 0
   767                           
   768                           ; 15 bytes @ 0xF
   769  0000C2                     	ds	15
   770  0000D1                     ??_main:
   771                           
   772                           ; 1 bytes @ 0x1E
   773  0000D1                     	ds	8
   774                           
   775                           	psect	cstackCOMRAM
   776  000001                     __pcstackCOMRAM:
   777                           	callstack 0
   778  000001                     ?_kpRead:
   779                           	callstack 0
   780  000001                     ?_digitalRead:
   781                           	callstack 0
   782  000001                     ?___awdiv:
   783                           	callstack 0
   784  000001                     ?___fladd:
   785                           	callstack 0
   786  000001                     ?___lmul:
   787                           	callstack 0
   788  000001                     ?_time:
   789                           	callstack 0
   790  000001                     delay@i:
   791                           	callstack 0
   792  000001                     digitalWrite@pin:
   793                           	callstack 0
   794  000001                     digitalRead@pin:
   795                           	callstack 0
   796  000001                     pinMode@pin:
   797                           	callstack 0
   798  000001                     delayMicro@a:
   799                           	callstack 0
   800  000001                     delayMili@a:
   801                           	callstack 0
   802  000001                     ___awdiv@dividend:
   803                           	callstack 0
   804  000001                     time@t:
   805                           	callstack 0
   806  000001                     ___lmul@multiplier:
   807                           	callstack 0
   808  000001                     ___flge@ff1:
   809                           	callstack 0
   810  000001                     ___fladd@b:
   811                           	callstack 0
   812                           
   813                           ; 4 bytes @ 0x0
   814  000001                     	ds	1
   815  000002                     delay@j:
   816                           	callstack 0
   817                           
   818                           ; 1 bytes @ 0x1
   819  000002                     	ds	1
   820  000003                     ??_digitalRead:
   821  000003                     ??_delayMili:
   822  000003                     verso@k:
   823                           	callstack 0
   824  000003                     inverso@k:
   825                           	callstack 0
   826  000003                     digitalWrite@value:
   827                           	callstack 0
   828  000003                     pinMode@type:
   829                           	callstack 0
   830  000003                     ___awdiv@divisor:
   831                           	callstack 0
   832                           
   833                           ; 2 bytes @ 0x2
   834  000003                     	ds	1
   835  000004                     verso@x:
   836                           	callstack 0
   837  000004                     inverso@x:
   838                           	callstack 0
   839  000004                     delayMili@i:
   840                           	callstack 0
   841                           
   842                           ; 2 bytes @ 0x3
   843  000004                     	ds	1
   844  000005                     ??_digitalWrite:
   845  000005                     ??_pinMode:
   846  000005                     ___awdiv@counter:
   847                           	callstack 0
   848  000005                     ___lmul@multiplicand:
   849                           	callstack 0
   850  000005                     ___flge@ff2:
   851                           	callstack 0
   852  000005                     ___fladd@a:
   853                           	callstack 0
   854                           
   855                           ; 4 bytes @ 0x4
   856  000005                     	ds	1
   857  000006                     ___awdiv@sign:
   858                           	callstack 0
   859                           
   860                           ; 1 bytes @ 0x5
   861  000006                     	ds	1
   862  000007                     i2c_write_bit@bit:
   863                           	callstack 0
   864  000007                     i2c_read_bit@bit:
   865                           	callstack 0
   866  000007                     soWrite@value:
   867                           	callstack 0
   868  000007                     ___awdiv@quotient:
   869                           	callstack 0
   870                           
   871                           ; 2 bytes @ 0x6
   872  000007                     	ds	1
   873  000008                     i2cWriteByte@send_stop:
   874                           	callstack 0
   875  000008                     i2cReadByte@send_stop:
   876                           	callstack 0
   877                           
   878                           ; 1 bytes @ 0x7
   879  000008                     	ds	1
   880  000009                     ??___fladd:
   881  000009                     ??_i2cReadByte:
   882  000009                     ??___flge:
   883  000009                     soWrite@i:
   884                           	callstack 0
   885  000009                     i2cWriteByte@byte:
   886                           	callstack 0
   887  000009                     srand@s:
   888                           	callstack 0
   889  000009                     ___lmul@product:
   890                           	callstack 0
   891                           
   892                           ; 4 bytes @ 0x8
   893  000009                     	ds	1
   894  00000A                     ??_kpDebounce:
   895  00000A                     ??_ssdUpdate:
   896  00000A                     i2cWriteByte@send_start:
   897                           	callstack 0
   898  00000A                     i2cReadByte@nack:
   899                           	callstack 0
   900  00000A                     pushNibble@rs:
   901                           	callstack 0
   902  00000A                     pushByte@rs:
   903                           	callstack 0
   904                           
   905                           ; 2 bytes @ 0x9
   906  00000A                     	ds	1
   907  00000B                     ??_srand:
   908  00000B                     i2cWriteByte@bit:
   909                           	callstack 0
   910  00000B                     i2cReadByte@bit:
   911                           	callstack 0
   912                           
   913                           ; 2 bytes @ 0xA
   914  00000B                     	ds	1
   915  00000C                     ??_pushByte:
   916  00000C                     pushNibble@value:
   917                           	callstack 0
   918                           
   919                           ; 1 bytes @ 0xB
   920  00000C                     	ds	1
   921  00000D                     ?_rand:
   922                           	callstack 0
   923  00000D                     pushByte@value:
   924                           	callstack 0
   925  00000D                     i2cReadByte@byte:
   926                           	callstack 0
   927  00000D                     ___fladd@signs:
   928                           	callstack 0
   929  00000D                     kpDebounce@i:
   930                           	callstack 0
   931                           
   932                           ; 2 bytes @ 0xC
   933  00000D                     	ds	1
   934  00000E                     ?_dsReadData:
   935                           	callstack 0
   936  00000E                     lcdCommand@value:
   937                           	callstack 0
   938  00000E                     lcdChar@value:
   939                           	callstack 0
   940  00000E                     ___fladd@aexp:
   941                           	callstack 0
   942  00000E                     dsReadData@address:
   943                           	callstack 0
   944                           
   945                           ; 2 bytes @ 0xD
   946  00000E                     	ds	1
   947  00000F                     ??_rand:
   948  00000F                     ___fladd@bexp:
   949                           	callstack 0
   950  00000F                     printf@text:
   951                           	callstack 0
   952                           
   953                           ; 2 bytes @ 0xE
   954  00000F                     	ds	1
   955  000010                     ??_dsReadData:
   956  000010                     ___fladd@grs:
   957                           	callstack 0
   958                           
   959                           ; 1 bytes @ 0xF
   960  000010                     	ds	1
   961  000011                     printf@i:
   962                           	callstack 0
   963  000011                     dsReadData@result:
   964                           	callstack 0
   965                           
   966                           ; 2 bytes @ 0x10
   967  000011                     	ds	1
   968  000012                     waitTxtProgress@textCima:
   969                           	callstack 0
   970  000012                     textInit@textBaixo:
   971                           	callstack 0
   972                           
   973                           ; 17 bytes @ 0x11
   974  000012                     	ds	1
   975  000013                     ?___awmod:
   976                           	callstack 0
   977  000013                     ___awmod@dividend:
   978                           	callstack 0
   979                           
   980                           ; 2 bytes @ 0x12
   981  000013                     	ds	2
   982  000015                     ___awmod@divisor:
   983                           	callstack 0
   984                           
   985                           ; 2 bytes @ 0x14
   986  000015                     	ds	2
   987  000017                     ___awmod@counter:
   988                           	callstack 0
   989                           
   990                           ; 1 bytes @ 0x16
   991  000017                     	ds	1
   992  000018                     ___awmod@sign:
   993                           	callstack 0
   994                           
   995                           ; 1 bytes @ 0x17
   996  000018                     	ds	1
   997  000019                     ?___wmul:
   998                           	callstack 0
   999  000019                     ssdDigit@pos:
  1000                           	callstack 0
  1001  000019                     ___wmul@multiplier:
  1002                           	callstack 0
  1003                           
  1004                           ; 2 bytes @ 0x18
  1005  000019                     	ds	1
  1006  00001A                     ssdDigit@val:
  1007                           	callstack 0
  1008                           
  1009                           ; 1 bytes @ 0x19
  1010  00001A                     	ds	1
  1011  00001B                     ___wmul@multiplicand:
  1012                           	callstack 0
  1013                           
  1014                           ; 2 bytes @ 0x1A
  1015  00001B                     	ds	2
  1016  00001D                     ___wmul@product:
  1017                           	callstack 0
  1018                           
  1019                           ; 2 bytes @ 0x1C
  1020  00001D                     	ds	2
  1021  00001F                     ?_bcd2dec:
  1022                           	callstack 0
  1023  00001F                     itoa@value:
  1024                           	callstack 0
  1025  00001F                     bcd2dec@value:
  1026                           	callstack 0
  1027                           
  1028                           ; 2 bytes @ 0x1E
  1029  00001F                     	ds	2
  1030  000021                     ??_bcd2dec:
  1031  000021                     itoa@result:
  1032                           	callstack 0
  1033  000021                     waitTxtProgress@textBaixo:
  1034                           	callstack 0
  1035                           
  1036                           ; 15 bytes @ 0x20
  1037  000021                     	ds	2
  1038  000023                     itoa@basea:
  1039                           	callstack 0
  1040  000023                     textInit@textCima:
  1041                           	callstack 0
  1042                           
  1043                           ; 12 bytes @ 0x22
  1044  000023                     	ds	2
  1045  000025                     ??_itoa:
  1046                           
  1047                           ; 1 bytes @ 0x24
  1048  000025                     	ds	2
  1049  000027                     itoa@tmp_char:
  1050                           	callstack 0
  1051                           
  1052                           ; 1 bytes @ 0x26
  1053  000027                     	ds	1
  1054  000028                     itoa@tmp_value:
  1055                           	callstack 0
  1056                           
  1057                           ; 2 bytes @ 0x27
  1058  000028                     	ds	2
  1059  00002A                     itoa@ptr1:
  1060                           	callstack 0
  1061                           
  1062                           ; 2 bytes @ 0x29
  1063  00002A                     	ds	2
  1064  00002C                     itoa@ptr:
  1065                           	callstack 0
  1066                           
  1067                           ; 2 bytes @ 0x2B
  1068  00002C                     	ds	2
  1069  00002E                     saldoTxt@textCima:
  1070                           	callstack 0
  1071                           
  1072                           ; 7 bytes @ 0x2D
  1073  00002E                     	ds	7
  1074  000035                     saldoTxt@textBaixo:
  1075                           	callstack 0
  1076                           
  1077                           ; 10 bytes @ 0x34
  1078  000035                     	ds	10
  1079  00003F                     Lose@textCima:
  1080                           	callstack 0
  1081  00003F                     WinAll@textCima:
  1082                           	callstack 0
  1083  00003F                     Win1x@textCima:
  1084                           	callstack 0
  1085  00003F                     GameOver@textBaixo:
  1086                           	callstack 0
  1087  00003F                     Win2x@textCima:
  1088                           	callstack 0
  1089                           
  1090                           ; 21 bytes @ 0x3E
  1091  00003F                     	ds	15
  1092  00004E                     Lose@textBaixo:
  1093                           	callstack 0
  1094  00004E                     WinAll@textBaixo:
  1095                           	callstack 0
  1096  00004E                     Win1x@textBaixo:
  1097                           	callstack 0
  1098                           
  1099                           ; 15 bytes @ 0x4D
  1100  00004E                     	ds	5
  1101  000053                     GameOver@textCima:
  1102                           	callstack 0
  1103                           
  1104                           ; 15 bytes @ 0x52
  1105  000053                     	ds	1
  1106  000054                     Win2x@textBaixo:
  1107                           	callstack 0
  1108                           
  1109                           ; 15 bytes @ 0x53
  1110  000054                     	ds	15
  1111  000063                     ??_Apostando:
  1112                           
  1113                           ; 1 bytes @ 0x62
  1114  000063                     	ds	8
  1115  00006B                     _Apostando$1320:
  1116                           	callstack 0
  1117                           
  1118                           ; 2 bytes @ 0x6A
  1119  00006B                     	ds	2
  1120  00006D                     Apostando@t:
  1121                           	callstack 0
  1122                           
  1123                           ; 4 bytes @ 0x6C
  1124  00006D                     	ds	4
  1125  000071                     Apostando@tempo:
  1126                           	callstack 0
  1127                           
  1128                           ; 4 bytes @ 0x70
  1129  000071                     	ds	4
  1130  000075                     Apostando@randomChar:
  1131                           	callstack 0
  1132                           
  1133                           ; 4 bytes @ 0x74
  1134  000075                     	ds	4
  1135  000079                     ??_apostandoTxtProgress:
  1136                           
  1137                           ; 1 bytes @ 0x78
  1138  000079                     	ds	4
  1139  00007D                     main@tecla:
  1140                           	callstack 0
  1141                           
  1142                           ; 2 bytes @ 0x7C
  1143  00007D                     	ds	2
  1144                           
  1145 ;;
  1146 ;;Main: autosize = 0, tempsize = 8, incstack = 0, save=0
  1147 ;;
  1148 ;; *************** function _main *****************
  1149 ;; Defined at:
  1150 ;;		line 28 in file "main.c"
  1151 ;; Parameters:    Size  Location     Type
  1152 ;;		None
  1153 ;; Auto vars:     Size  Location     Type
  1154 ;;  tecla           2  124[COMRAM] unsigned int 
  1155 ;; Return value:  Size  Location     Type
  1156 ;;                  1    wreg      void 
  1157 ;; Registers used:
  1158 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1159 ;; Tracked objects:
  1160 ;;		On entry : 0/0
  1161 ;;		On exit  : 0/0
  1162 ;;		Unchanged: 0/0
  1163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1164 ;;      Params:         0       0       0       0       0       0       0
  1165 ;;      Locals:         2       0       0       0       0       0       0
  1166 ;;      Temps:          0       8       0       0       0       0       0
  1167 ;;      Totals:         2       8       0       0       0       0       0
  1168 ;;Total ram usage:       10 bytes
  1169 ;; Hardware stack levels required when called: 10
  1170 ;; This function calls:
  1171 ;;		_apostandoTxtProgress
  1172 ;;		_kpDebounce
  1173 ;;		_kpInit
  1174 ;;		_kpRead
  1175 ;;		_lcdCommand
  1176 ;;		_lcdInit
  1177 ;;		_saldoTxt
  1178 ;;		_srand
  1179 ;;		_ssdInit
  1180 ;;		_textInit
  1181 ;;		_time
  1182 ;;		_waitTxtProgress
  1183 ;; This function is called by:
  1184 ;;		Startup code after reset
  1185 ;; This function uses a non-reentrant model
  1186 ;;
  1187                           
  1188                           	psect	text0
  1189  001B42                     __ptext0:
  1190                           	callstack 0
  1191  001B42                     _main:
  1192                           	callstack 21
  1193  001B42                     
  1194                           ;main.c: 29:     unsigned int tecla = 16;
  1195  001B42  0E00               	movlw	0
  1196  001B44  6E7E               	movwf	(main@tecla+1)^0,c
  1197  001B46  0E10               	movlw	16
  1198  001B48  6E7D               	movwf	main@tecla^0,c
  1199  001B4A                     
  1200                           ;main.c: 31:     srand(time(((void*)0)));
  1201  001B4A  0E00               	movlw	0
  1202  001B4C  6E01               	movwf	time@t^0,c
  1203  001B4E  0E00               	movlw	0
  1204  001B50  6E02               	movwf	(time@t+1)^0,c
  1205  001B52  ECD8  F012         	call	_time	;wreg free
  1206  001B56  C001  F0D1         	movff	?_time,??_main
  1207  001B5A  C002  F0D2         	movff	?_time+1,??_main+1
  1208  001B5E  C003  F0D3         	movff	?_time+2,??_main+2
  1209  001B62  C004  F0D4         	movff	?_time+3,??_main+3
  1210  001B66  C005  F0D5         	movff	?_time+4,??_main+4
  1211  001B6A  C006  F0D6         	movff	?_time+5,??_main+5
  1212  001B6E  C007  F0D7         	movff	?_time+6,??_main+6
  1213  001B72  C008  F0D8         	movff	?_time+7,??_main+7
  1214  001B76  C0D1  F009         	movff	??_main,srand@s
  1215  001B7A  C0D3  F00A         	movff	??_main+2,srand@s+1
  1216  001B7E  EC1C  F015         	call	_srand	;wreg free
  1217  001B82                     
  1218                           ;main.c: 32:     ssdInit();
  1219  001B82  EC5C  F012         	call	_ssdInit	;wreg free
  1220  001B86                     
  1221                           ;main.c: 33:     lcdInit();
  1222  001B86  EC70  F00E         	call	_lcdInit	;wreg free
  1223  001B8A                     
  1224                           ;main.c: 34:     kpInit();
  1225  001B8A  EC38  F014         	call	_kpInit	;wreg free
  1226  001B8E                     
  1227                           ;main.c: 35:     lcdCommand(0x0F);
  1228  001B8E  0E0F               	movlw	15
  1229  001B90  EC65  F015         	call	_lcdCommand
  1230  001B94                     
  1231                           ;main.c: 36:     textInit();
  1232  001B94  ECBD  F010         	call	_textInit	;wreg free
  1233  001B98                     
  1234                           ;main.c: 37:     waitTxtProgress();
  1235  001B98  EC7D  F011         	call	_waitTxtProgress	;wreg free
  1236  001B9C                     l3588:
  1237                           
  1238                           ;main.c: 39:         kpDebounce();
  1239  001B9C  EC09  F00C         	call	_kpDebounce	;wreg free
  1240  001BA0                     
  1241                           ;main.c: 40:         if (kpRead() != tecla) {
  1242  001BA0  EC74  F015         	call	_kpRead	;wreg free
  1243  001BA4  507D               	movf	main@tecla^0,w,c
  1244  001BA6  1801               	xorwf	?_kpRead^0,w,c
  1245  001BA8  E109               	bnz	u3920
  1246  001BAA  507E               	movf	(main@tecla+1)^0,w,c
  1247  001BAC  1802               	xorwf	(?_kpRead+1)^0,w,c
  1248  001BAE  B4D8               	btfsc	status,2,c
  1249  001BB0  EFDC  F00D         	goto	u3921
  1250  001BB4  EFDE  F00D         	goto	u3920
  1251  001BB8                     u3921:
  1252  001BB8  EFCE  F00D         	goto	l3588
  1253  001BBC                     u3920:
  1254  001BBC                     
  1255                           ;main.c: 41:             tecla = kpRead();
  1256  001BBC  EC74  F015         	call	_kpRead	;wreg free
  1257  001BC0  C001  F07D         	movff	?_kpRead,main@tecla
  1258  001BC4  C002  F07E         	movff	?_kpRead+1,main@tecla+1
  1259  001BC8                     
  1260                           ;main.c: 42:             if (((tecla) & (1<<(1)))) {
  1261  001BC8  A27D               	btfss	main@tecla^0,1,c
  1262  001BCA  EFE9  F00D         	goto	u3931
  1263  001BCE  EFEB  F00D         	goto	u3930
  1264  001BD2                     u3931:
  1265  001BD2  EFF2  F00D         	goto	l3602
  1266  001BD6                     u3930:
  1267  001BD6                     
  1268                           ;main.c: 43:                 lcdCommand(0x01);
  1269  001BD6  0E01               	movlw	1
  1270  001BD8  EC65  F015         	call	_lcdCommand
  1271  001BDC                     
  1272                           ;main.c: 44:                 apostandoTxtProgress();
  1273  001BDC  EC22  F00F         	call	_apostandoTxtProgress	;wreg free
  1274  001BE0                     
  1275                           ;main.c: 45:                 waitTxtProgress();
  1276  001BE0  EC7D  F011         	call	_waitTxtProgress	;wreg free
  1277  001BE4                     l3602:
  1278                           
  1279                           ;main.c: 47:             if (((tecla) & (1<<(0)))) {
  1280  001BE4  A07D               	btfss	main@tecla^0,0,c
  1281  001BE6  EFF7  F00D         	goto	u3941
  1282  001BEA  EFF9  F00D         	goto	u3940
  1283  001BEE                     u3941:
  1284  001BEE  EF00  F00E         	goto	l3610
  1285  001BF2                     u3940:
  1286  001BF2                     
  1287                           ;main.c: 48:                 lcdCommand(0x01);
  1288  001BF2  0E01               	movlw	1
  1289  001BF4  EC65  F015         	call	_lcdCommand
  1290  001BF8                     
  1291                           ;main.c: 49:                 saldoTxt();
  1292  001BF8  EC76  F00F         	call	_saldoTxt	;wreg free
  1293  001BFC                     
  1294                           ;main.c: 50:                 waitTxtProgress();
  1295  001BFC  EC7D  F011         	call	_waitTxtProgress	;wreg free
  1296  001C00                     l3610:
  1297                           
  1298                           ;main.c: 52:             if (((tecla) & (1<<(2)))) {
  1299  001C00  A47D               	btfss	main@tecla^0,2,c
  1300  001C02  EF05  F00E         	goto	u3951
  1301  001C06  EF07  F00E         	goto	u3950
  1302  001C0A                     u3951:
  1303  001C0A  EFCE  F00D         	goto	l3588
  1304  001C0E                     u3950:
  1305  001C0E                     
  1306                           ;main.c: 53:                 lcdCommand(0x01);
  1307  001C0E  0E01               	movlw	1
  1308  001C10  EC65  F015         	call	_lcdCommand
  1309  001C14  EFCE  F00D         	goto	l3588
  1310  001C18  EF00  F000         	goto	start
  1311  001C1C                     __end_of_main:
  1312                           	callstack 0
  1313                           
  1314 ;; *************** function _waitTxtProgress *****************
  1315 ;; Defined at:
  1316 ;;		line 145 in file "controle.c"
  1317 ;; Parameters:    Size  Location     Type
  1318 ;;		None
  1319 ;; Auto vars:     Size  Location     Type
  1320 ;;  textBaixo      15   32[COMRAM] unsigned char [15]
  1321 ;;  textCima       15   17[COMRAM] unsigned char [15]
  1322 ;; Return value:  Size  Location     Type
  1323 ;;                  1    wreg      void 
  1324 ;; Registers used:
  1325 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1326 ;; Tracked objects:
  1327 ;;		On entry : 0/0
  1328 ;;		On exit  : 0/0
  1329 ;;		Unchanged: 0/0
  1330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1331 ;;      Params:         0       0       0       0       0       0       0
  1332 ;;      Locals:        30       0       0       0       0       0       0
  1333 ;;      Temps:          0       0       0       0       0       0       0
  1334 ;;      Totals:        30       0       0       0       0       0       0
  1335 ;;Total ram usage:       30 bytes
  1336 ;; Hardware stack levels used: 1
  1337 ;; Hardware stack levels required when called: 6
  1338 ;; This function calls:
  1339 ;;		_delay
  1340 ;;		_lcdCommand
  1341 ;;		_printf
  1342 ;; This function is called by:
  1343 ;;		_main
  1344 ;; This function uses a non-reentrant model
  1345 ;;
  1346                           
  1347                           	psect	text1
  1348  0022FA                     __ptext1:
  1349                           	callstack 0
  1350  0022FA                     _waitTxtProgress:
  1351                           	callstack 24
  1352  0022FA                     
  1353                           ;controle.c: 146:     lcdCommand(0x01);
  1354  0022FA  0E01               	movlw	1
  1355  0022FC  EC65  F015         	call	_lcdCommand
  1356  002300                     
  1357                           ;controle.c: 147:     char textCima[15] = "D4 esq Aposta";
  1358  002300  EE21  F0DF         	lfsr	2,waitTxtProgress@F2799
  1359  002304  EE10  F012         	lfsr	1,waitTxtProgress@textCima
  1360  002308  0E0E               	movlw	14
  1361  00230A                     u3791:
  1362  00230A  CFDB FFE3          	movff	plusw2,plusw1
  1363  00230E  06E8               	decf	wreg,f,c
  1364  002310  E2FC               	bc	u3791
  1365  002312                     
  1366                           ;controle.c: 148:     char textBaixo[15] = "D3 esq Saldo";
  1367  002312  EE21  F0D0         	lfsr	2,waitTxtProgress@F2801
  1368  002316  EE10  F021         	lfsr	1,waitTxtProgress@textBaixo
  1369  00231A  0E0E               	movlw	14
  1370  00231C                     u3801:
  1371  00231C  CFDB FFE3          	movff	plusw2,plusw1
  1372  002320  06E8               	decf	wreg,f,c
  1373  002322  E2FC               	bc	u3801
  1374                           
  1375                           ;controle.c: 149:     lcdCommand(0x80 | (0));
  1376  002324  0E80               	movlw	128
  1377  002326  EC65  F015         	call	_lcdCommand
  1378  00232A                     
  1379                           ;controle.c: 150:     printf(textCima);
  1380  00232A  0E12               	movlw	low waitTxtProgress@textCima
  1381  00232C  6E0F               	movwf	printf@text^0,c
  1382  00232E  0E00               	movlw	high waitTxtProgress@textCima
  1383  002330  6E10               	movwf	(printf@text+1)^0,c
  1384  002332  ECC9  F013         	call	_printf	;wreg free
  1385  002336                     
  1386                           ;controle.c: 151:     lcdCommand(0xC0 | (0));
  1387  002336  0EC0               	movlw	192
  1388  002338  EC65  F015         	call	_lcdCommand
  1389                           
  1390                           ;controle.c: 152:     printf(textBaixo);
  1391  00233C  0E21               	movlw	low waitTxtProgress@textBaixo
  1392  00233E  6E0F               	movwf	printf@text^0,c
  1393  002340  0E00               	movlw	high waitTxtProgress@textBaixo
  1394  002342  6E10               	movwf	(printf@text+1)^0,c
  1395  002344  ECC9  F013         	call	_printf	;wreg free
  1396  002348                     
  1397                           ;controle.c: 154:     delay();
  1398  002348  EC46  F013         	call	_delay	;wreg free
  1399  00234C                     
  1400                           ;controle.c: 155:     delay();
  1401  00234C  EC46  F013         	call	_delay	;wreg free
  1402  002350                     
  1403                           ;controle.c: 156:     delay();
  1404  002350  EC46  F013         	call	_delay	;wreg free
  1405  002354  0012               	return		;funcret
  1406  002356                     __end_of_waitTxtProgress:
  1407                           	callstack 0
  1408                           
  1409 ;; *************** function _textInit *****************
  1410 ;; Defined at:
  1411 ;;		line 65 in file "controle.c"
  1412 ;; Parameters:    Size  Location     Type
  1413 ;;		None
  1414 ;; Auto vars:     Size  Location     Type
  1415 ;;  textBaixo      17   17[COMRAM] unsigned char [17]
  1416 ;;  textCima       12   34[COMRAM] unsigned char [12]
  1417 ;; Return value:  Size  Location     Type
  1418 ;;                  1    wreg      void 
  1419 ;; Registers used:
  1420 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1421 ;; Tracked objects:
  1422 ;;		On entry : 0/0
  1423 ;;		On exit  : 0/0
  1424 ;;		Unchanged: 0/0
  1425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1426 ;;      Params:         0       0       0       0       0       0       0
  1427 ;;      Locals:        29       0       0       0       0       0       0
  1428 ;;      Temps:          0       0       0       0       0       0       0
  1429 ;;      Totals:        29       0       0       0       0       0       0
  1430 ;;Total ram usage:       29 bytes
  1431 ;; Hardware stack levels used: 1
  1432 ;; Hardware stack levels required when called: 6
  1433 ;; This function calls:
  1434 ;;		_delay
  1435 ;;		_lcdCommand
  1436 ;;		_printf
  1437 ;; This function is called by:
  1438 ;;		_main
  1439 ;; This function uses a non-reentrant model
  1440 ;;
  1441                           
  1442                           	psect	text2
  1443  00217A                     __ptext2:
  1444                           	callstack 0
  1445  00217A                     _textInit:
  1446                           	callstack 24
  1447  00217A                     
  1448                           ;controle.c: 66:     char textCima[12] = "Welcome to";
  1449  00217A  EE20  F09E         	lfsr	2,textInit@F2776
  1450  00217E  EE10  F023         	lfsr	1,textInit@textCima
  1451  002182  0E0B               	movlw	11
  1452  002184                     u3771:
  1453  002184  CFDB FFE3          	movff	plusw2,plusw1
  1454  002188  06E8               	decf	wreg,f,c
  1455  00218A  E2FC               	bc	u3771
  1456                           
  1457                           ;controle.c: 67:     char textBaixo[17] = "THE GAME!";
  1458  00218C  EE21  F029         	lfsr	2,textInit@F2778
  1459  002190  EE10  F012         	lfsr	1,textInit@textBaixo
  1460  002194  0E10               	movlw	16
  1461  002196                     u3781:
  1462  002196  CFDB FFE3          	movff	plusw2,plusw1
  1463  00219A  06E8               	decf	wreg,f,c
  1464  00219C  E2FC               	bc	u3781
  1465  00219E                     
  1466                           ;controle.c: 68:     lcdCommand(0x80 | (0));
  1467  00219E  0E80               	movlw	128
  1468  0021A0  EC65  F015         	call	_lcdCommand
  1469  0021A4                     
  1470                           ;controle.c: 69:     printf(textCima);
  1471  0021A4  0E23               	movlw	low textInit@textCima
  1472  0021A6  6E0F               	movwf	printf@text^0,c
  1473  0021A8  0E00               	movlw	high textInit@textCima
  1474  0021AA  6E10               	movwf	(printf@text+1)^0,c
  1475  0021AC  ECC9  F013         	call	_printf	;wreg free
  1476  0021B0                     
  1477                           ;controle.c: 70:     lcdCommand(0xC0 | (0));
  1478  0021B0  0EC0               	movlw	192
  1479  0021B2  EC65  F015         	call	_lcdCommand
  1480  0021B6                     
  1481                           ;controle.c: 71:     printf(textBaixo);
  1482  0021B6  0E12               	movlw	low textInit@textBaixo
  1483  0021B8  6E0F               	movwf	printf@text^0,c
  1484  0021BA  0E00               	movlw	high textInit@textBaixo
  1485  0021BC  6E10               	movwf	(printf@text+1)^0,c
  1486  0021BE  ECC9  F013         	call	_printf	;wreg free
  1487  0021C2                     
  1488                           ;controle.c: 73:     delay();
  1489  0021C2  EC46  F013         	call	_delay	;wreg free
  1490  0021C6                     
  1491                           ;controle.c: 74:     delay();
  1492  0021C6  EC46  F013         	call	_delay	;wreg free
  1493  0021CA                     
  1494                           ;controle.c: 75:     delay();
  1495  0021CA  EC46  F013         	call	_delay	;wreg free
  1496  0021CE                     
  1497                           ;controle.c: 76:     delay();
  1498  0021CE  EC46  F013         	call	_delay	;wreg free
  1499  0021D2                     
  1500                           ;controle.c: 78:     lcdCommand(0x01);
  1501  0021D2  0E01               	movlw	1
  1502  0021D4  EC65  F015         	call	_lcdCommand
  1503  0021D8  0012               	return		;funcret
  1504  0021DA                     __end_of_textInit:
  1505                           	callstack 0
  1506                           
  1507 ;; *************** function _ssdInit *****************
  1508 ;; Defined at:
  1509 ;;		line 94 in file "ssd.c"
  1510 ;; Parameters:    Size  Location     Type
  1511 ;;		None
  1512 ;; Auto vars:     Size  Location     Type
  1513 ;;		None
  1514 ;; Return value:  Size  Location     Type
  1515 ;;                  1    wreg      void 
  1516 ;; Registers used:
  1517 ;;		wreg, status,2, status,0, cstack
  1518 ;; Tracked objects:
  1519 ;;		On entry : 0/0
  1520 ;;		On exit  : 0/0
  1521 ;;		Unchanged: 0/0
  1522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1523 ;;      Params:         0       0       0       0       0       0       0
  1524 ;;      Locals:         0       0       0       0       0       0       0
  1525 ;;      Temps:          0       0       0       0       0       0       0
  1526 ;;      Totals:         0       0       0       0       0       0       0
  1527 ;;Total ram usage:        0 bytes
  1528 ;; Hardware stack levels used: 1
  1529 ;; Hardware stack levels required when called: 2
  1530 ;; This function calls:
  1531 ;;		_pinMode
  1532 ;;		_soInit
  1533 ;; This function is called by:
  1534 ;;		_main
  1535 ;; This function uses a non-reentrant model
  1536 ;;
  1537                           
  1538                           	psect	text3
  1539  0024B8                     __ptext3:
  1540                           	callstack 0
  1541  0024B8                     _ssdInit:
  1542                           	callstack 28
  1543  0024B8                     
  1544                           ;ssd.c: 96:     pinMode(PIN_D0, 0);
  1545  0024B8  0E00               	movlw	0
  1546  0024BA  6E02               	movwf	(pinMode@pin+1)^0,c
  1547  0024BC  0E18               	movlw	24
  1548  0024BE  6E01               	movwf	pinMode@pin^0,c
  1549  0024C0  0E00               	movlw	0
  1550  0024C2  6E04               	movwf	(pinMode@type+1)^0,c
  1551  0024C4  0E00               	movlw	0
  1552  0024C6  6E03               	movwf	pinMode@type^0,c
  1553  0024C8  EC9C  F007         	call	_pinMode	;wreg free
  1554                           
  1555                           ;ssd.c: 97:     pinMode(PIN_D1, 0);
  1556  0024CC  0E00               	movlw	0
  1557  0024CE  6E02               	movwf	(pinMode@pin+1)^0,c
  1558  0024D0  0E19               	movlw	25
  1559  0024D2  6E01               	movwf	pinMode@pin^0,c
  1560  0024D4  0E00               	movlw	0
  1561  0024D6  6E04               	movwf	(pinMode@type+1)^0,c
  1562  0024D8  0E00               	movlw	0
  1563  0024DA  6E03               	movwf	pinMode@type^0,c
  1564  0024DC  EC9C  F007         	call	_pinMode	;wreg free
  1565                           
  1566                           ;ssd.c: 98:     pinMode(PIN_D2, 0);
  1567  0024E0  0E00               	movlw	0
  1568  0024E2  6E02               	movwf	(pinMode@pin+1)^0,c
  1569  0024E4  0E1A               	movlw	26
  1570  0024E6  6E01               	movwf	pinMode@pin^0,c
  1571  0024E8  0E00               	movlw	0
  1572  0024EA  6E04               	movwf	(pinMode@type+1)^0,c
  1573  0024EC  0E00               	movlw	0
  1574  0024EE  6E03               	movwf	pinMode@type^0,c
  1575  0024F0  EC9C  F007         	call	_pinMode	;wreg free
  1576                           
  1577                           ;ssd.c: 99:     pinMode(PIN_D3, 0);
  1578  0024F4  0E00               	movlw	0
  1579  0024F6  6E02               	movwf	(pinMode@pin+1)^0,c
  1580  0024F8  0E1B               	movlw	27
  1581  0024FA  6E01               	movwf	pinMode@pin^0,c
  1582  0024FC  0E00               	movlw	0
  1583  0024FE  6E04               	movwf	(pinMode@type+1)^0,c
  1584  002500  0E00               	movlw	0
  1585  002502  6E03               	movwf	pinMode@type^0,c
  1586  002504  EC9C  F007         	call	_pinMode	;wreg free
  1587                           
  1588                           ;ssd.c: 102:     soInit();
  1589  002508  ECAA  F013         	call	_soInit	;wreg free
  1590  00250C  0012               	return		;funcret
  1591  00250E                     __end_of_ssdInit:
  1592                           	callstack 0
  1593                           
  1594 ;; *************** function _lcdInit *****************
  1595 ;; Defined at:
  1596 ;;		line 72 in file "lcd.c"
  1597 ;; Parameters:    Size  Location     Type
  1598 ;;		None
  1599 ;; Auto vars:     Size  Location     Type
  1600 ;;		None
  1601 ;; Return value:  Size  Location     Type
  1602 ;;                  1    wreg      void 
  1603 ;; Registers used:
  1604 ;;		wreg, status,2, status,0, cstack
  1605 ;; Tracked objects:
  1606 ;;		On entry : 0/0
  1607 ;;		On exit  : 0/0
  1608 ;;		Unchanged: 0/0
  1609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1610 ;;      Params:         0       0       0       0       0       0       0
  1611 ;;      Locals:         0       0       0       0       0       0       0
  1612 ;;      Temps:          0       0       0       0       0       0       0
  1613 ;;      Totals:         0       0       0       0       0       0       0
  1614 ;;Total ram usage:        0 bytes
  1615 ;; Hardware stack levels used: 1
  1616 ;; Hardware stack levels required when called: 5
  1617 ;; This function calls:
  1618 ;;		_delayMicro
  1619 ;;		_delayMili
  1620 ;;		_lcdCommand
  1621 ;;		_pinMode
  1622 ;;		_pushNibble
  1623 ;;		_soInit
  1624 ;; This function is called by:
  1625 ;;		_main
  1626 ;; This function uses a non-reentrant model
  1627 ;;
  1628                           
  1629                           	psect	text4
  1630  001CE0                     __ptext4:
  1631                           	callstack 0
  1632  001CE0                     _lcdInit:
  1633                           	callstack 25
  1634  001CE0                     
  1635                           ;lcd.c: 73:  pinMode(PIN_D4, 0);
  1636  001CE0  0E00               	movlw	0
  1637  001CE2  6E02               	movwf	(pinMode@pin+1)^0,c
  1638  001CE4  0E1C               	movlw	28
  1639  001CE6  6E01               	movwf	pinMode@pin^0,c
  1640  001CE8  0E00               	movlw	0
  1641  001CEA  6E04               	movwf	(pinMode@type+1)^0,c
  1642  001CEC  0E00               	movlw	0
  1643  001CEE  6E03               	movwf	pinMode@type^0,c
  1644  001CF0  EC9C  F007         	call	_pinMode	;wreg free
  1645                           
  1646                           ;lcd.c: 74:  pinMode(PIN_D5, 0);
  1647  001CF4  0E00               	movlw	0
  1648  001CF6  6E02               	movwf	(pinMode@pin+1)^0,c
  1649  001CF8  0E1D               	movlw	29
  1650  001CFA  6E01               	movwf	pinMode@pin^0,c
  1651  001CFC  0E00               	movlw	0
  1652  001CFE  6E04               	movwf	(pinMode@type+1)^0,c
  1653  001D00  0E00               	movlw	0
  1654  001D02  6E03               	movwf	pinMode@type^0,c
  1655  001D04  EC9C  F007         	call	_pinMode	;wreg free
  1656                           
  1657                           ;lcd.c: 75:  soInit();
  1658  001D08  ECAA  F013         	call	_soInit	;wreg free
  1659                           
  1660                           ;lcd.c: 76:  delayMili(15);
  1661  001D0C  0E00               	movlw	0
  1662  001D0E  6E02               	movwf	(delayMili@a+1)^0,c
  1663  001D10  0E0F               	movlw	15
  1664  001D12  6E01               	movwf	delayMili@a^0,c
  1665  001D14  EC82  F014         	call	_delayMili	;wreg free
  1666                           
  1667                           ;lcd.c: 78:  pushNibble(0x03, 0);
  1668  001D18  0E00               	movlw	0
  1669  001D1A  6E0B               	movwf	(pushNibble@rs+1)^0,c
  1670  001D1C  0E00               	movlw	0
  1671  001D1E  6E0A               	movwf	pushNibble@rs^0,c
  1672  001D20  0E03               	movlw	3
  1673  001D22  EC30  F015         	call	_pushNibble
  1674                           
  1675                           ;lcd.c: 79:  delayMili(5);
  1676  001D26  0E00               	movlw	0
  1677  001D28  6E02               	movwf	(delayMili@a+1)^0,c
  1678  001D2A  0E05               	movlw	5
  1679  001D2C  6E01               	movwf	delayMili@a^0,c
  1680  001D2E  EC82  F014         	call	_delayMili	;wreg free
  1681                           
  1682                           ;lcd.c: 80:  pushNibble(0x03, 0);
  1683  001D32  0E00               	movlw	0
  1684  001D34  6E0B               	movwf	(pushNibble@rs+1)^0,c
  1685  001D36  0E00               	movlw	0
  1686  001D38  6E0A               	movwf	pushNibble@rs^0,c
  1687  001D3A  0E03               	movlw	3
  1688  001D3C  EC30  F015         	call	_pushNibble
  1689  001D40                     
  1690                           ;lcd.c: 81:  delayMicro(160);
  1691  001D40  0E00               	movlw	0
  1692  001D42  6E02               	movwf	(delayMicro@a+1)^0,c
  1693  001D44  0EA0               	movlw	160
  1694  001D46  6E01               	movwf	delayMicro@a^0,c
  1695  001D48  EC7A  F015         	call	_delayMicro	;wreg free
  1696  001D4C                     
  1697                           ;lcd.c: 82:  pushNibble(0x03, 0);
  1698  001D4C  0E00               	movlw	0
  1699  001D4E  6E0B               	movwf	(pushNibble@rs+1)^0,c
  1700  001D50  0E00               	movlw	0
  1701  001D52  6E0A               	movwf	pushNibble@rs^0,c
  1702  001D54  0E03               	movlw	3
  1703  001D56  EC30  F015         	call	_pushNibble
  1704                           
  1705                           ;lcd.c: 83:  delayMicro(160);
  1706  001D5A  0E00               	movlw	0
  1707  001D5C  6E02               	movwf	(delayMicro@a+1)^0,c
  1708  001D5E  0EA0               	movlw	160
  1709  001D60  6E01               	movwf	delayMicro@a^0,c
  1710  001D62  EC7A  F015         	call	_delayMicro	;wreg free
  1711  001D66                     
  1712                           ;lcd.c: 85:  pushNibble(0x02, 0);
  1713  001D66  0E00               	movlw	0
  1714  001D68  6E0B               	movwf	(pushNibble@rs+1)^0,c
  1715  001D6A  0E00               	movlw	0
  1716  001D6C  6E0A               	movwf	pushNibble@rs^0,c
  1717  001D6E  0E02               	movlw	2
  1718  001D70  EC30  F015         	call	_pushNibble
  1719  001D74                     
  1720                           ;lcd.c: 86:  delayMili(10);
  1721  001D74  0E00               	movlw	0
  1722  001D76  6E02               	movwf	(delayMili@a+1)^0,c
  1723  001D78  0E0A               	movlw	10
  1724  001D7A  6E01               	movwf	delayMili@a^0,c
  1725  001D7C  EC82  F014         	call	_delayMili	;wreg free
  1726  001D80                     
  1727                           ;lcd.c: 88:  lcdCommand(0x28);
  1728  001D80  0E28               	movlw	40
  1729  001D82  EC65  F015         	call	_lcdCommand
  1730  001D86                     
  1731                           ;lcd.c: 89:  lcdCommand(0x08 + 0x04);
  1732  001D86  0E0C               	movlw	12
  1733  001D88  EC65  F015         	call	_lcdCommand
  1734  001D8C                     
  1735                           ;lcd.c: 90:  lcdCommand(0x01);
  1736  001D8C  0E01               	movlw	1
  1737  001D8E  EC65  F015         	call	_lcdCommand
  1738  001D92  0012               	return		;funcret
  1739  001D94                     __end_of_lcdInit:
  1740                           	callstack 0
  1741                           
  1742 ;; *************** function _pushNibble *****************
  1743 ;; Defined at:
  1744 ;;		line 25 in file "lcd.c"
  1745 ;; Parameters:    Size  Location     Type
  1746 ;;  value           1    wreg     unsigned char 
  1747 ;;  rs              2    9[COMRAM] int 
  1748 ;; Auto vars:     Size  Location     Type
  1749 ;;  value           1   11[COMRAM] unsigned char 
  1750 ;; Return value:  Size  Location     Type
  1751 ;;                  1    wreg      void 
  1752 ;; Registers used:
  1753 ;;		wreg, status,2, status,0, cstack
  1754 ;; Tracked objects:
  1755 ;;		On entry : 0/0
  1756 ;;		On exit  : 0/0
  1757 ;;		Unchanged: 0/0
  1758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1759 ;;      Params:         2       0       0       0       0       0       0
  1760 ;;      Locals:         1       0       0       0       0       0       0
  1761 ;;      Temps:          0       0       0       0       0       0       0
  1762 ;;      Totals:         3       0       0       0       0       0       0
  1763 ;;Total ram usage:        3 bytes
  1764 ;; Hardware stack levels used: 1
  1765 ;; Hardware stack levels required when called: 3
  1766 ;; This function calls:
  1767 ;;		_digitalWrite
  1768 ;;		_pulseEnablePin
  1769 ;;		_soWrite
  1770 ;; This function is called by:
  1771 ;;		_lcdInit
  1772 ;; This function uses a non-reentrant model
  1773 ;;
  1774                           
  1775                           	psect	text5
  1776  002A60                     __ptext5:
  1777                           	callstack 0
  1778  002A60                     _pushNibble:
  1779                           	callstack 26
  1780                           
  1781                           ;incstack = 0
  1782                           ;pushNibble@value stored from wreg
  1783  002A60  6E0C               	movwf	pushNibble@value^0,c
  1784  002A62                     
  1785                           ;lcd.c: 26:  soWrite(value);
  1786  002A62  C00C  F007         	movff	pushNibble@value,soWrite@value
  1787  002A66  6A08               	clrf	(soWrite@value+1)^0,c
  1788  002A68  ECB1  F012         	call	_soWrite	;wreg free
  1789                           
  1790                           ;lcd.c: 27:  digitalWrite(PIN_D5, rs);
  1791  002A6C  0E00               	movlw	0
  1792  002A6E  6E02               	movwf	(digitalWrite@pin+1)^0,c
  1793  002A70  0E1D               	movlw	29
  1794  002A72  6E01               	movwf	digitalWrite@pin^0,c
  1795  002A74  C00A  F003         	movff	pushNibble@rs,digitalWrite@value
  1796  002A78  C00B  F004         	movff	pushNibble@rs+1,digitalWrite@value+1
  1797  002A7C  ECC3  F008         	call	_digitalWrite	;wreg free
  1798                           
  1799                           ;lcd.c: 28:  pulseEnablePin();
  1800  002A80  EC89  F013         	call	_pulseEnablePin	;wreg free
  1801  002A84  0012               	return		;funcret
  1802  002A86                     __end_of_pushNibble:
  1803                           	callstack 0
  1804                           
  1805 ;; *************** function _kpRead *****************
  1806 ;; Defined at:
  1807 ;;		line 14 in file "keypad.c"
  1808 ;; Parameters:    Size  Location     Type
  1809 ;;		None
  1810 ;; Auto vars:     Size  Location     Type
  1811 ;;		None
  1812 ;; Return value:  Size  Location     Type
  1813 ;;                  2    0[COMRAM] unsigned int 
  1814 ;; Registers used:
  1815 ;;		None
  1816 ;; Tracked objects:
  1817 ;;		On entry : 0/0
  1818 ;;		On exit  : 0/0
  1819 ;;		Unchanged: 0/0
  1820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1821 ;;      Params:         2       0       0       0       0       0       0
  1822 ;;      Locals:         0       0       0       0       0       0       0
  1823 ;;      Temps:          0       0       0       0       0       0       0
  1824 ;;      Totals:         2       0       0       0       0       0       0
  1825 ;;Total ram usage:        2 bytes
  1826 ;; Hardware stack levels used: 1
  1827 ;; This function calls:
  1828 ;;		Nothing
  1829 ;; This function is called by:
  1830 ;;		_main
  1831 ;; This function uses a non-reentrant model
  1832 ;;
  1833                           
  1834                           	psect	text6
  1835  002AE8                     __ptext6:
  1836                           	callstack 0
  1837  002AE8                     _kpRead:
  1838                           	callstack 30
  1839  002AE8                     
  1840                           ;keypad.c: 15:     return keys;
  1841  002AE8  C0E9  F001         	movff	_keys,?_kpRead
  1842  002AEC  C0EA  F002         	movff	_keys+1,?_kpRead+1
  1843  002AF0  0012               	return		;funcret
  1844  002AF2                     __end_of_kpRead:
  1845                           	callstack 0
  1846                           
  1847 ;; *************** function _kpInit *****************
  1848 ;; Defined at:
  1849 ;;		line 54 in file "keypad.c"
  1850 ;; Parameters:    Size  Location     Type
  1851 ;;		None
  1852 ;; Auto vars:     Size  Location     Type
  1853 ;;		None
  1854 ;; Return value:  Size  Location     Type
  1855 ;;                  1    wreg      void 
  1856 ;; Registers used:
  1857 ;;		wreg, status,2, status,0, cstack
  1858 ;; Tracked objects:
  1859 ;;		On entry : 0/0
  1860 ;;		On exit  : 0/0
  1861 ;;		Unchanged: 0/0
  1862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1863 ;;      Params:         0       0       0       0       0       0       0
  1864 ;;      Locals:         0       0       0       0       0       0       0
  1865 ;;      Temps:          0       0       0       0       0       0       0
  1866 ;;      Totals:         0       0       0       0       0       0       0
  1867 ;;Total ram usage:        0 bytes
  1868 ;; Hardware stack levels used: 1
  1869 ;; Hardware stack levels required when called: 2
  1870 ;; This function calls:
  1871 ;;		_pinMode
  1872 ;;		_soInit
  1873 ;; This function is called by:
  1874 ;;		_main
  1875 ;; This function uses a non-reentrant model
  1876 ;;
  1877                           
  1878                           	psect	text7
  1879  002870                     __ptext7:
  1880                           	callstack 0
  1881  002870                     _kpInit:
  1882                           	callstack 28
  1883  002870                     
  1884                           ;keypad.c: 55:   soInit();
  1885  002870  ECAA  F013         	call	_soInit	;wreg free
  1886                           
  1887                           ;keypad.c: 56:   pinMode(PIN_B2, 1);
  1888  002874  0E00               	movlw	0
  1889  002876  6E02               	movwf	(pinMode@pin+1)^0,c
  1890  002878  0E0A               	movlw	10
  1891  00287A  6E01               	movwf	pinMode@pin^0,c
  1892  00287C  0E00               	movlw	0
  1893  00287E  6E04               	movwf	(pinMode@type+1)^0,c
  1894  002880  0E01               	movlw	1
  1895  002882  6E03               	movwf	pinMode@type^0,c
  1896  002884  EC9C  F007         	call	_pinMode	;wreg free
  1897                           
  1898                           ;keypad.c: 57:   pinMode(PIN_B1, 1);
  1899  002888  0E00               	movlw	0
  1900  00288A  6E02               	movwf	(pinMode@pin+1)^0,c
  1901  00288C  0E09               	movlw	9
  1902  00288E  6E01               	movwf	pinMode@pin^0,c
  1903  002890  0E00               	movlw	0
  1904  002892  6E04               	movwf	(pinMode@type+1)^0,c
  1905  002894  0E01               	movlw	1
  1906  002896  6E03               	movwf	pinMode@type^0,c
  1907  002898  EC9C  F007         	call	_pinMode	;wreg free
  1908  00289C                     
  1909                           ;keypad.c: 58:   ADCON1 = 0b00001100;
  1910  00289C  0E0C               	movlw	12
  1911  00289E  6EC1               	movwf	193,c	;volatile
  1912  0028A0  0012               	return		;funcret
  1913  0028A2                     __end_of_kpInit:
  1914                           	callstack 0
  1915                           
  1916 ;; *************** function _soInit *****************
  1917 ;; Defined at:
  1918 ;;		line 3 in file "so.c"
  1919 ;; Parameters:    Size  Location     Type
  1920 ;;		None
  1921 ;; Auto vars:     Size  Location     Type
  1922 ;;		None
  1923 ;; Return value:  Size  Location     Type
  1924 ;;                  1    wreg      void 
  1925 ;; Registers used:
  1926 ;;		wreg, status,2, status,0, cstack
  1927 ;; Tracked objects:
  1928 ;;		On entry : 0/0
  1929 ;;		On exit  : 0/0
  1930 ;;		Unchanged: 0/0
  1931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1932 ;;      Params:         0       0       0       0       0       0       0
  1933 ;;      Locals:         0       0       0       0       0       0       0
  1934 ;;      Temps:          0       0       0       0       0       0       0
  1935 ;;      Totals:         0       0       0       0       0       0       0
  1936 ;;Total ram usage:        0 bytes
  1937 ;; Hardware stack levels used: 1
  1938 ;; Hardware stack levels required when called: 1
  1939 ;; This function calls:
  1940 ;;		_pinMode
  1941 ;; This function is called by:
  1942 ;;		_kpInit
  1943 ;;		_lcdInit
  1944 ;;		_ssdInit
  1945 ;; This function uses a non-reentrant model
  1946 ;;
  1947                           
  1948                           	psect	text8
  1949  002754                     __ptext8:
  1950                           	callstack 0
  1951  002754                     _soInit:
  1952                           	callstack 28
  1953  002754                     
  1954                           ;so.c: 4:  pinMode(PIN_D7, 0);
  1955  002754  0E00               	movlw	0
  1956  002756  6E02               	movwf	(pinMode@pin+1)^0,c
  1957  002758  0E1F               	movlw	31
  1958  00275A  6E01               	movwf	pinMode@pin^0,c
  1959  00275C  0E00               	movlw	0
  1960  00275E  6E04               	movwf	(pinMode@type+1)^0,c
  1961  002760  0E00               	movlw	0
  1962  002762  6E03               	movwf	pinMode@type^0,c
  1963  002764  EC9C  F007         	call	_pinMode	;wreg free
  1964                           
  1965                           ;so.c: 5:  pinMode(PIN_B0, 0);
  1966  002768  0E00               	movlw	0
  1967  00276A  6E02               	movwf	(pinMode@pin+1)^0,c
  1968  00276C  0E08               	movlw	8
  1969  00276E  6E01               	movwf	pinMode@pin^0,c
  1970  002770  0E00               	movlw	0
  1971  002772  6E04               	movwf	(pinMode@type+1)^0,c
  1972  002774  0E00               	movlw	0
  1973  002776  6E03               	movwf	pinMode@type^0,c
  1974  002778  EC9C  F007         	call	_pinMode	;wreg free
  1975                           
  1976                           ;so.c: 6:  pinMode(PIN_D6, 0);
  1977  00277C  0E00               	movlw	0
  1978  00277E  6E02               	movwf	(pinMode@pin+1)^0,c
  1979  002780  0E1E               	movlw	30
  1980  002782  6E01               	movwf	pinMode@pin^0,c
  1981  002784  0E00               	movlw	0
  1982  002786  6E04               	movwf	(pinMode@type+1)^0,c
  1983  002788  0E00               	movlw	0
  1984  00278A  6E03               	movwf	pinMode@type^0,c
  1985  00278C  EC9C  F007         	call	_pinMode	;wreg free
  1986  002790  0012               	return		;funcret
  1987  002792                     __end_of_soInit:
  1988                           	callstack 0
  1989                           
  1990 ;; *************** function _kpDebounce *****************
  1991 ;; Defined at:
  1992 ;;		line 27 in file "keypad.c"
  1993 ;; Parameters:    Size  Location     Type
  1994 ;;		None
  1995 ;; Auto vars:     Size  Location     Type
  1996 ;;  i               2   12[COMRAM] int 
  1997 ;; Return value:  Size  Location     Type
  1998 ;;                  1    wreg      void 
  1999 ;; Registers used:
  2000 ;;		wreg, status,2, status,0, cstack
  2001 ;; Tracked objects:
  2002 ;;		On entry : 0/0
  2003 ;;		On exit  : 0/0
  2004 ;;		Unchanged: 0/0
  2005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2006 ;;      Params:         0       0       0       0       0       0       0
  2007 ;;      Locals:         2       0       0       0       0       0       0
  2008 ;;      Temps:          3       0       0       0       0       0       0
  2009 ;;      Totals:         5       0       0       0       0       0       0
  2010 ;;Total ram usage:        5 bytes
  2011 ;; Hardware stack levels used: 1
  2012 ;; Hardware stack levels required when called: 3
  2013 ;; This function calls:
  2014 ;;		_digitalRead
  2015 ;;		_soWrite
  2016 ;; This function is called by:
  2017 ;;		_main
  2018 ;; This function uses a non-reentrant model
  2019 ;;
  2020                           
  2021                           	psect	text9
  2022  001812                     __ptext9:
  2023                           	callstack 0
  2024  001812                     _kpDebounce:
  2025                           	callstack 27
  2026  001812                     
  2027                           ;keypad.c: 28:     int i;;keypad.c: 29:     static unsigned char tempo;;keypad.c: 30:   
      +                            static unsigned int newRead;;keypad.c: 31:     static unsigned int oldRead;;keypad.c: 
      +                          32:     newRead = 0;
  2028  001812  0E00               	movlw	0
  2029  001814  0100               	movlb	0	; () banked
  2030  001816  6FE8               	movwf	(kpDebounce@newRead+1)& (0+255),b
  2031  001818  0E00               	movlw	0
  2032  00181A  6FE7               	movwf	kpDebounce@newRead& (0+255),b
  2033                           
  2034                           ;keypad.c: 33:     for(i = 0; i<5; i++){
  2035  00181C  0E00               	movlw	0
  2036  00181E  6E0E               	movwf	(kpDebounce@i+1)^0,c
  2037  001820  0E00               	movlw	0
  2038  001822  6E0D               	movwf	kpDebounce@i^0,c
  2039  001824                     l3514:
  2040  001824  BE0E               	btfsc	(kpDebounce@i+1)^0,7,c
  2041  001826  EF1E  F00C         	goto	u3811
  2042  00182A  500E               	movf	(kpDebounce@i+1)^0,w,c
  2043  00182C  E109               	bnz	u3810
  2044  00182E  0E05               	movlw	5
  2045  001830  5C0D               	subwf	kpDebounce@i^0,w,c
  2046  001832  A0D8               	btfss	status,0,c
  2047  001834  EF1E  F00C         	goto	u3811
  2048  001838  EF20  F00C         	goto	u3810
  2049  00183C                     u3811:
  2050  00183C  EF22  F00C         	goto	l3518
  2051  001840                     u3810:
  2052  001840  EF85  F00C         	goto	l3530
  2053  001844                     l3518:
  2054                           
  2055                           ;keypad.c: 35:       soWrite(1<<(i+3));
  2056  001844  C00D  F00A         	movff	kpDebounce@i,??_kpDebounce
  2057  001848  0E03               	movlw	3
  2058  00184A  260A               	addwf	??_kpDebounce^0,f,c
  2059  00184C  0E01               	movlw	1
  2060  00184E  6E0B               	movwf	(??_kpDebounce+1)^0,c
  2061  001850  0E00               	movlw	0
  2062  001852  6E0C               	movwf	(??_kpDebounce+2)^0,c
  2063  001854  2A0A               	incf	??_kpDebounce^0,f,c
  2064  001856  EF30  F00C         	goto	u3824
  2065  00185A                     u3825:
  2066  00185A  90D8               	bcf	status,0,c
  2067  00185C  360B               	rlcf	(??_kpDebounce+1)^0,f,c
  2068  00185E  360C               	rlcf	(??_kpDebounce+2)^0,f,c
  2069  001860                     u3824:
  2070  001860  2E0A               	decfsz	??_kpDebounce^0,f,c
  2071  001862  EF2D  F00C         	goto	u3825
  2072  001866  C00B  F007         	movff	??_kpDebounce+1,soWrite@value
  2073  00186A  C00C  F008         	movff	??_kpDebounce+2,soWrite@value+1
  2074  00186E  ECB1  F012         	call	_soWrite	;wreg free
  2075                           
  2076                           ;keypad.c: 36:       if(digitalRead(PIN_B2)){
  2077  001872  0E00               	movlw	0
  2078  001874  6E02               	movwf	(digitalRead@pin+1)^0,c
  2079  001876  0E0A               	movlw	10
  2080  001878  6E01               	movwf	digitalRead@pin^0,c
  2081  00187A  ECA5  F00A         	call	_digitalRead	;wreg free
  2082  00187E  5001               	movf	?_digitalRead^0,w,c
  2083  001880  1002               	iorwf	(?_digitalRead+1)^0,w,c
  2084  001882  B4D8               	btfsc	status,2,c
  2085  001884  EF46  F00C         	goto	u3831
  2086  001888  EF48  F00C         	goto	u3830
  2087  00188C                     u3831:
  2088  00188C  EF5C  F00C         	goto	l3522
  2089  001890                     u3830:
  2090  001890                     
  2091                           ;keypad.c: 37:         ((newRead) |= (1<<(i)));
  2092  001890  C00D  F00A         	movff	kpDebounce@i,??_kpDebounce
  2093  001894  0E01               	movlw	1
  2094  001896  6E0B               	movwf	(??_kpDebounce+1)^0,c
  2095  001898  0E00               	movlw	0
  2096  00189A  6E0C               	movwf	(??_kpDebounce+2)^0,c
  2097  00189C  2A0A               	incf	??_kpDebounce^0,f,c
  2098  00189E  EF54  F00C         	goto	u3844
  2099  0018A2                     u3845:
  2100  0018A2  90D8               	bcf	status,0,c
  2101  0018A4  360B               	rlcf	(??_kpDebounce+1)^0,f,c
  2102  0018A6  360C               	rlcf	(??_kpDebounce+2)^0,f,c
  2103  0018A8                     u3844:
  2104  0018A8  2E0A               	decfsz	??_kpDebounce^0,f,c
  2105  0018AA  EF51  F00C         	goto	u3845
  2106  0018AE  500B               	movf	(??_kpDebounce+1)^0,w,c
  2107  0018B0  0100               	movlb	0	; () banked
  2108  0018B2  13E7               	iorwf	kpDebounce@newRead& (0+255),f,b
  2109  0018B4  500C               	movf	(??_kpDebounce+2)^0,w,c
  2110  0018B6  13E8               	iorwf	(kpDebounce@newRead+1)& (0+255),f,b
  2111  0018B8                     l3522:
  2112                           
  2113                           ;keypad.c: 39:       if(digitalRead(PIN_B1)){
  2114  0018B8  0E00               	movlw	0
  2115  0018BA  6E02               	movwf	(digitalRead@pin+1)^0,c
  2116  0018BC  0E09               	movlw	9
  2117  0018BE  6E01               	movwf	digitalRead@pin^0,c
  2118  0018C0  ECA5  F00A         	call	_digitalRead	;wreg free
  2119  0018C4  5001               	movf	?_digitalRead^0,w,c
  2120  0018C6  1002               	iorwf	(?_digitalRead+1)^0,w,c
  2121  0018C8  B4D8               	btfsc	status,2,c
  2122  0018CA  EF69  F00C         	goto	u3851
  2123  0018CE  EF6B  F00C         	goto	u3850
  2124  0018D2                     u3851:
  2125  0018D2  EF81  F00C         	goto	l3526
  2126  0018D6                     u3850:
  2127  0018D6                     
  2128                           ;keypad.c: 40:         ((newRead) |= (1<<((i+5))));
  2129  0018D6  C00D  F00A         	movff	kpDebounce@i,??_kpDebounce
  2130  0018DA  0E05               	movlw	5
  2131  0018DC  260A               	addwf	??_kpDebounce^0,f,c
  2132  0018DE  0E01               	movlw	1
  2133  0018E0  6E0B               	movwf	(??_kpDebounce+1)^0,c
  2134  0018E2  0E00               	movlw	0
  2135  0018E4  6E0C               	movwf	(??_kpDebounce+2)^0,c
  2136  0018E6  2A0A               	incf	??_kpDebounce^0,f,c
  2137  0018E8  EF79  F00C         	goto	u3864
  2138  0018EC                     u3865:
  2139  0018EC  90D8               	bcf	status,0,c
  2140  0018EE  360B               	rlcf	(??_kpDebounce+1)^0,f,c
  2141  0018F0  360C               	rlcf	(??_kpDebounce+2)^0,f,c
  2142  0018F2                     u3864:
  2143  0018F2  2E0A               	decfsz	??_kpDebounce^0,f,c
  2144  0018F4  EF76  F00C         	goto	u3865
  2145  0018F8  500B               	movf	(??_kpDebounce+1)^0,w,c
  2146  0018FA  0100               	movlb	0	; () banked
  2147  0018FC  13E7               	iorwf	kpDebounce@newRead& (0+255),f,b
  2148  0018FE  500C               	movf	(??_kpDebounce+2)^0,w,c
  2149  001900  13E8               	iorwf	(kpDebounce@newRead+1)& (0+255),f,b
  2150  001902                     l3526:
  2151                           
  2152                           ;keypad.c: 42:     }
  2153  001902  4A0D               	infsnz	kpDebounce@i^0,f,c
  2154  001904  2A0E               	incf	(kpDebounce@i+1)^0,f,c
  2155  001906  EF12  F00C         	goto	l3514
  2156  00190A                     l3530:
  2157                           
  2158                           ;keypad.c: 43:     if (oldRead == newRead) {
  2159  00190A  0100               	movlb	0	; () banked
  2160  00190C  51E7               	movf	kpDebounce@newRead& (0+255),w,b
  2161  00190E  19E5               	xorwf	kpDebounce@oldRead& (0+255),w,b
  2162  001910  E107               	bnz	u3871
  2163  001912  51E8               	movf	(kpDebounce@newRead+1)& (0+255),w,b
  2164  001914  19E6               	xorwf	(kpDebounce@oldRead+1)& (0+255),w,b
  2165  001916  A4D8               	btfss	status,2,c
  2166  001918  EF90  F00C         	goto	u3871
  2167  00191C  EF92  F00C         	goto	u3870
  2168  001920                     u3871:
  2169  001920  EF95  F00C         	goto	l3534
  2170  001924                     u3870:
  2171  001924                     
  2172                           ; BSR set to: 0
  2173                           ;keypad.c: 44:         tempo--;
  2174  001924  067F               	decf	kpDebounce@tempo^0,f,c
  2175                           
  2176                           ;keypad.c: 45:     } else {
  2177  001926  EF9B  F00C         	goto	l148
  2178  00192A                     l3534:
  2179                           
  2180                           ; BSR set to: 0
  2181                           ;keypad.c: 46:         tempo = 1;
  2182  00192A  0E01               	movlw	1
  2183  00192C  6E7F               	movwf	kpDebounce@tempo^0,c
  2184  00192E                     
  2185                           ; BSR set to: 0
  2186                           ;keypad.c: 47:         oldRead = newRead;
  2187  00192E  C0E7  F0E5         	movff	kpDebounce@newRead,kpDebounce@oldRead
  2188  001932  C0E8  F0E6         	movff	kpDebounce@newRead+1,kpDebounce@oldRead+1
  2189  001936                     l148:
  2190                           
  2191                           ; BSR set to: 0
  2192                           ;keypad.c: 49:     if (tempo == 0) {
  2193  001936  507F               	movf	kpDebounce@tempo^0,w,c
  2194  001938  A4D8               	btfss	status,2,c
  2195  00193A  EFA1  F00C         	goto	u3881
  2196  00193E  EFA3  F00C         	goto	u3880
  2197  001942                     u3881:
  2198  001942  EFA7  F00C         	goto	l150
  2199  001946                     u3880:
  2200  001946                     
  2201                           ; BSR set to: 0
  2202                           ;keypad.c: 50:         keys = oldRead;
  2203  001946  C0E5  F0E9         	movff	kpDebounce@oldRead,_keys
  2204  00194A  C0E6  F0EA         	movff	kpDebounce@oldRead+1,_keys+1
  2205  00194E                     l150:
  2206                           
  2207                           ; BSR set to: 0
  2208  00194E  0012               	return		;funcret
  2209  001950                     __end_of_kpDebounce:
  2210                           	callstack 0
  2211                           
  2212 ;; *************** function _apostandoTxtProgress *****************
  2213 ;; Defined at:
  2214 ;;		line 274 in file "controle.c"
  2215 ;; Parameters:    Size  Location     Type
  2216 ;;		None
  2217 ;; Auto vars:     Size  Location     Type
  2218 ;;  text2          15   15[BANK0 ] unsigned char [15]
  2219 ;;  text           15    0[BANK0 ] unsigned char [15]
  2220 ;; Return value:  Size  Location     Type
  2221 ;;                  1    wreg      void 
  2222 ;; Registers used:
  2223 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2224 ;; Tracked objects:
  2225 ;;		On entry : 0/0
  2226 ;;		On exit  : 0/0
  2227 ;;		Unchanged: 0/0
  2228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2229 ;;      Params:         0       0       0       0       0       0       0
  2230 ;;      Locals:         0      30       0       0       0       0       0
  2231 ;;      Temps:          4       0       0       0       0       0       0
  2232 ;;      Totals:         4      30       0       0       0       0       0
  2233 ;;Total ram usage:       34 bytes
  2234 ;; Hardware stack levels used: 1
  2235 ;; Hardware stack levels required when called: 9
  2236 ;; This function calls:
  2237 ;;		_Apostando
  2238 ;;		_GameOver
  2239 ;;		_inverso
  2240 ;;		_lcdCommand
  2241 ;;		_printf
  2242 ;;		_verso
  2243 ;; This function is called by:
  2244 ;;		_main
  2245 ;; This function uses a non-reentrant model
  2246 ;;
  2247                           
  2248                           	psect	text10
  2249  001E44                     __ptext10:
  2250                           	callstack 0
  2251  001E44                     _apostandoTxtProgress:
  2252                           	callstack 21
  2253  001E44                     
  2254                           ;controle.c: 275:     if (saldo - 100 <= 0) {
  2255  001E44  0E9C               	movlw	156
  2256  001E46  6E79               	movwf	??_apostandoTxtProgress^0,c
  2257  001E48  0EFF               	movlw	255
  2258  001E4A  6E7A               	movwf	(??_apostandoTxtProgress+1)^0,c
  2259  001E4C  C0B1  F07B         	movff	_saldo,??_apostandoTxtProgress+2
  2260  001E50  C0B2  F07C         	movff	_saldo+1,??_apostandoTxtProgress+3
  2261  001E54  5079               	movf	??_apostandoTxtProgress^0,w,c
  2262  001E56  267B               	addwf	(??_apostandoTxtProgress+2)^0,f,c
  2263  001E58  507A               	movf	(??_apostandoTxtProgress+1)^0,w,c
  2264  001E5A  227C               	addwfc	(??_apostandoTxtProgress+3)^0,f,c
  2265  001E5C  BE7C               	btfsc	(??_apostandoTxtProgress+3)^0,7,c
  2266  001E5E  EF3B  F00F         	goto	u3890
  2267  001E62  507C               	movf	(??_apostandoTxtProgress+3)^0,w,c
  2268  001E64  E106               	bnz	u3891
  2269  001E66  047B               	decf	(??_apostandoTxtProgress+2)^0,w,c
  2270  001E68  B0D8               	btfsc	status,0,c
  2271  001E6A  EF39  F00F         	goto	u3891
  2272  001E6E  EF3B  F00F         	goto	u3890
  2273  001E72                     u3891:
  2274  001E72  EF3F  F00F         	goto	l3546
  2275  001E76                     u3890:
  2276  001E76                     
  2277                           ;controle.c: 276:         GameOver();
  2278  001E76  ECED  F010         	call	_GameOver	;wreg free
  2279                           
  2280                           ;controle.c: 277:     } else {
  2281  001E7A  EF75  F00F         	goto	l419
  2282  001E7E                     l3546:
  2283                           
  2284                           ;controle.c: 278:         char text[15] = ":O ";
  2285  001E7E  EE21  F049         	lfsr	2,apostandoTxtProgress@F2833
  2286  001E82  EE10  F0B3         	lfsr	1,apostandoTxtProgress@text
  2287  001E86  0E0E               	movlw	14
  2288  001E88                     u3901:
  2289  001E88  CFDB FFE3          	movff	plusw2,plusw1
  2290  001E8C  06E8               	decf	wreg,f,c
  2291  001E8E  E2FC               	bc	u3901
  2292                           
  2293                           ;controle.c: 279:         char text2[15] = "Apostando: -100 ";
  2294  001E90  EE21  F03A         	lfsr	2,apostandoTxtProgress@F2835
  2295  001E94  EE10  F0C2         	lfsr	1,apostandoTxtProgress@text2
  2296  001E98  0E0E               	movlw	14
  2297  001E9A                     u3911:
  2298  001E9A  CFDB FFE3          	movff	plusw2,plusw1
  2299  001E9E  06E8               	decf	wreg,f,c
  2300  001EA0  E2FC               	bc	u3911
  2301  001EA2                     
  2302                           ;controle.c: 280:         lcdCommand(0x80 | (0));
  2303  001EA2  0E80               	movlw	128
  2304  001EA4  EC65  F015         	call	_lcdCommand
  2305  001EA8                     
  2306                           ;controle.c: 281:         printf(text);
  2307  001EA8  0EB3               	movlw	low apostandoTxtProgress@text
  2308  001EAA  6E0F               	movwf	printf@text^0,c
  2309  001EAC  0E00               	movlw	high apostandoTxtProgress@text
  2310  001EAE  6E10               	movwf	(printf@text+1)^0,c
  2311  001EB0  ECC9  F013         	call	_printf	;wreg free
  2312  001EB4                     
  2313                           ;controle.c: 282:         lcdCommand(0xC0 | (0));
  2314  001EB4  0EC0               	movlw	192
  2315  001EB6  EC65  F015         	call	_lcdCommand
  2316  001EBA                     
  2317                           ;controle.c: 283:         printf(text2);
  2318  001EBA  0EC2               	movlw	low apostandoTxtProgress@text2
  2319  001EBC  6E0F               	movwf	printf@text^0,c
  2320  001EBE  0E00               	movlw	high apostandoTxtProgress@text2
  2321  001EC0  6E10               	movwf	(printf@text+1)^0,c
  2322  001EC2  ECC9  F013         	call	_printf	;wreg free
  2323  001EC6                     
  2324                           ;controle.c: 285:         saldo -= 100;
  2325  001EC6  0100               	movlb	0	; () banked
  2326  001EC8  0E9C               	movlw	156
  2327  001ECA  27B1               	addwf	_saldo& (0+255),f,b
  2328  001ECC  0EFF               	movlw	255
  2329  001ECE  23B2               	addwfc	(_saldo+1)& (0+255),f,b
  2330  001ED0                     
  2331                           ; BSR set to: 0
  2332                           ;controle.c: 286:         TRISD = 0x00;
  2333  001ED0  0E00               	movlw	0
  2334  001ED2  6E95               	movwf	149,c	;volatile
  2335  001ED4                     
  2336                           ; BSR set to: 0
  2337                           ;controle.c: 287:         PORTD = 0x00;
  2338  001ED4  0E00               	movlw	0
  2339  001ED6  6E83               	movwf	131,c	;volatile
  2340  001ED8                     
  2341                           ; BSR set to: 0
  2342                           ;controle.c: 288:         verso();
  2343  001ED8  EC9A  F014         	call	_verso	;wreg free
  2344  001EDC                     
  2345                           ;controle.c: 289:         inverso();
  2346  001EDC  ECB1  F014         	call	_inverso	;wreg free
  2347  001EE0                     
  2348                           ;controle.c: 290:         Apostando();
  2349  001EE0  EC92  F005         	call	_Apostando	;wreg free
  2350  001EE4                     
  2351                           ;controle.c: 291:         lcdCommand(0x01);
  2352  001EE4  0E01               	movlw	1
  2353  001EE6  EC65  F015         	call	_lcdCommand
  2354  001EEA                     l419:
  2355  001EEA  0012               	return		;funcret
  2356  001EEC                     __end_of_apostandoTxtProgress:
  2357                           	callstack 0
  2358                           
  2359 ;; *************** function _verso *****************
  2360 ;; Defined at:
  2361 ;;		line 43 in file "controle.c"
  2362 ;; Parameters:    Size  Location     Type
  2363 ;;		None
  2364 ;; Auto vars:     Size  Location     Type
  2365 ;;  x               1    3[COMRAM] unsigned char 
  2366 ;;  k               1    2[COMRAM] unsigned char 
  2367 ;; Return value:  Size  Location     Type
  2368 ;;                  1    wreg      void 
  2369 ;; Registers used:
  2370 ;;		wreg, status,2, status,0, cstack
  2371 ;; Tracked objects:
  2372 ;;		On entry : 0/0
  2373 ;;		On exit  : 0/0
  2374 ;;		Unchanged: 0/0
  2375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2376 ;;      Params:         0       0       0       0       0       0       0
  2377 ;;      Locals:         2       0       0       0       0       0       0
  2378 ;;      Temps:          0       0       0       0       0       0       0
  2379 ;;      Totals:         2       0       0       0       0       0       0
  2380 ;;Total ram usage:        2 bytes
  2381 ;; Hardware stack levels used: 1
  2382 ;; Hardware stack levels required when called: 1
  2383 ;; This function calls:
  2384 ;;		_delay
  2385 ;; This function is called by:
  2386 ;;		_apostandoTxtProgress
  2387 ;; This function uses a non-reentrant model
  2388 ;;
  2389                           
  2390                           	psect	text11
  2391  002934                     __ptext11:
  2392                           	callstack 0
  2393  002934                     _verso:
  2394                           	callstack 28
  2395  002934                     
  2396                           ;controle.c: 44:     delay();
  2397  002934  EC46  F013         	call	_delay	;wreg free
  2398  002938                     
  2399                           ;controle.c: 45:     unsigned char k, x;;controle.c: 46:     x = 0b10000001;
  2400  002938  0E81               	movlw	129
  2401  00293A  6E04               	movwf	verso@x^0,c
  2402  00293C                     
  2403                           ;controle.c: 47:     for (k = 0; k < 8; k++) {
  2404  00293C  0E00               	movlw	0
  2405  00293E  6E03               	movwf	verso@k^0,c
  2406  002940                     l3336:
  2407                           
  2408                           ;controle.c: 48:         delay();
  2409  002940  EC46  F013         	call	_delay	;wreg free
  2410  002944                     
  2411                           ;controle.c: 49:         PORTD = x;
  2412  002944  C004  FF83         	movff	verso@x,3971	;volatile
  2413  002948                     
  2414                           ;controle.c: 50:         x = x << 1;
  2415  002948  5004               	movf	verso@x^0,w,c
  2416  00294A  2404               	addwf	verso@x^0,w,c
  2417  00294C  6E04               	movwf	verso@x^0,c
  2418  00294E                     
  2419                           ;controle.c: 51:     }
  2420  00294E  2A03               	incf	verso@k^0,f,c
  2421  002950  0E07               	movlw	7
  2422  002952  6403               	cpfsgt	verso@k^0,c
  2423  002954  EFAE  F014         	goto	u3561
  2424  002958  EFB0  F014         	goto	u3560
  2425  00295C                     u3561:
  2426  00295C  EFA0  F014         	goto	l3336
  2427  002960                     u3560:
  2428  002960  0012               	return		;funcret
  2429  002962                     __end_of_verso:
  2430                           	callstack 0
  2431                           
  2432 ;; *************** function _inverso *****************
  2433 ;; Defined at:
  2434 ;;		line 54 in file "controle.c"
  2435 ;; Parameters:    Size  Location     Type
  2436 ;;		None
  2437 ;; Auto vars:     Size  Location     Type
  2438 ;;  x               1    3[COMRAM] unsigned char 
  2439 ;;  k               1    2[COMRAM] unsigned char 
  2440 ;; Return value:  Size  Location     Type
  2441 ;;                  1    wreg      void 
  2442 ;; Registers used:
  2443 ;;		wreg, status,2, status,0, cstack
  2444 ;; Tracked objects:
  2445 ;;		On entry : 0/0
  2446 ;;		On exit  : 0/0
  2447 ;;		Unchanged: 0/0
  2448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2449 ;;      Params:         0       0       0       0       0       0       0
  2450 ;;      Locals:         2       0       0       0       0       0       0
  2451 ;;      Temps:          0       0       0       0       0       0       0
  2452 ;;      Totals:         2       0       0       0       0       0       0
  2453 ;;Total ram usage:        2 bytes
  2454 ;; Hardware stack levels used: 1
  2455 ;; Hardware stack levels required when called: 1
  2456 ;; This function calls:
  2457 ;;		_delay
  2458 ;; This function is called by:
  2459 ;;		_apostandoTxtProgress
  2460 ;; This function uses a non-reentrant model
  2461 ;;
  2462                           
  2463                           	psect	text12
  2464  002962                     __ptext12:
  2465                           	callstack 0
  2466  002962                     _inverso:
  2467                           	callstack 28
  2468  002962                     
  2469                           ;controle.c: 55:     delay();
  2470  002962  EC46  F013         	call	_delay	;wreg free
  2471  002966                     
  2472                           ;controle.c: 56:     unsigned char k, x;;controle.c: 57:     x = 0b10000000;
  2473  002966  0E80               	movlw	128
  2474  002968  6E04               	movwf	inverso@x^0,c
  2475  00296A                     
  2476                           ;controle.c: 58:     for (k = 0; k < 8; k++) {
  2477  00296A  0E00               	movlw	0
  2478  00296C  6E03               	movwf	inverso@k^0,c
  2479  00296E                     l3356:
  2480                           
  2481                           ;controle.c: 59:         delay();
  2482  00296E  EC46  F013         	call	_delay	;wreg free
  2483  002972                     
  2484                           ;controle.c: 60:         PORTD = x;
  2485  002972  C004  FF83         	movff	inverso@x,3971	;volatile
  2486  002976                     
  2487                           ;controle.c: 61:         x = x >> 1;
  2488  002976  90D8               	bcf	status,0,c
  2489  002978  3004               	rrcf	inverso@x^0,w,c
  2490  00297A  6E04               	movwf	inverso@x^0,c
  2491  00297C                     
  2492                           ;controle.c: 62:     }
  2493  00297C  2A03               	incf	inverso@k^0,f,c
  2494  00297E  0E07               	movlw	7
  2495  002980  6403               	cpfsgt	inverso@k^0,c
  2496  002982  EFC5  F014         	goto	u3571
  2497  002986  EFC7  F014         	goto	u3570
  2498  00298A                     u3571:
  2499  00298A  EFB7  F014         	goto	l3356
  2500  00298E                     u3570:
  2501  00298E  0012               	return		;funcret
  2502  002990                     __end_of_inverso:
  2503                           	callstack 0
  2504                           
  2505 ;; *************** function _GameOver *****************
  2506 ;; Defined at:
  2507 ;;		line 160 in file "controle.c"
  2508 ;; Parameters:    Size  Location     Type
  2509 ;;		None
  2510 ;; Auto vars:     Size  Location     Type
  2511 ;;  textBaixo      20   62[COMRAM] unsigned char [20]
  2512 ;;  textCima       15   82[COMRAM] unsigned char [15]
  2513 ;; Return value:  Size  Location     Type
  2514 ;;                  1    wreg      void 
  2515 ;; Registers used:
  2516 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2517 ;; Tracked objects:
  2518 ;;		On entry : 0/0
  2519 ;;		On exit  : 0/0
  2520 ;;		Unchanged: 0/0
  2521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2522 ;;      Params:         0       0       0       0       0       0       0
  2523 ;;      Locals:        35       0       0       0       0       0       0
  2524 ;;      Temps:          0       0       0       0       0       0       0
  2525 ;;      Totals:        35       0       0       0       0       0       0
  2526 ;;Total ram usage:       35 bytes
  2527 ;; Hardware stack levels used: 1
  2528 ;; Hardware stack levels required when called: 7
  2529 ;; This function calls:
  2530 ;;		_delay
  2531 ;;		_lcdCommand
  2532 ;;		_printf
  2533 ;;		_saldoTxt
  2534 ;; This function is called by:
  2535 ;;		_apostandoTxtProgress
  2536 ;; This function uses a non-reentrant model
  2537 ;;
  2538                           
  2539                           	psect	text13
  2540  0021DA                     __ptext13:
  2541                           	callstack 0
  2542  0021DA                     _GameOver:
  2543                           	callstack 22
  2544  0021DA                     
  2545                           ;controle.c: 161:     char textCima[15] = "GAME OVER";
  2546  0021DA  EE21  F0C1         	lfsr	2,GameOver@F2804
  2547  0021DE  EE10  F053         	lfsr	1,GameOver@textCima
  2548  0021E2  0E0E               	movlw	14
  2549  0021E4                     u3581:
  2550  0021E4  CFDB FFE3          	movff	plusw2,plusw1
  2551  0021E8  06E8               	decf	wreg,f,c
  2552  0021EA  E2FC               	bc	u3581
  2553                           
  2554                           ;controle.c: 162:     char textBaixo[20] = "YOU LOSE...";
  2555  0021EC  EE21  F015         	lfsr	2,GameOver@F2806
  2556  0021F0  EE10  F03F         	lfsr	1,GameOver@textBaixo
  2557  0021F4  0E13               	movlw	19
  2558  0021F6                     u3591:
  2559  0021F6  CFDB FFE3          	movff	plusw2,plusw1
  2560  0021FA  06E8               	decf	wreg,f,c
  2561  0021FC  E2FC               	bc	u3591
  2562  0021FE                     
  2563                           ;controle.c: 163:     lcdCommand(0x80 | (0));
  2564  0021FE  0E80               	movlw	128
  2565  002200  EC65  F015         	call	_lcdCommand
  2566  002204                     
  2567                           ;controle.c: 164:     printf(textCima);
  2568  002204  0E53               	movlw	low GameOver@textCima
  2569  002206  6E0F               	movwf	printf@text^0,c
  2570  002208  0E00               	movlw	high GameOver@textCima
  2571  00220A  6E10               	movwf	(printf@text+1)^0,c
  2572  00220C  ECC9  F013         	call	_printf	;wreg free
  2573  002210                     
  2574                           ;controle.c: 165:     lcdCommand(0xC0 | (0));
  2575  002210  0EC0               	movlw	192
  2576  002212  EC65  F015         	call	_lcdCommand
  2577  002216                     
  2578                           ;controle.c: 166:     printf(textBaixo);
  2579  002216  0E3F               	movlw	low GameOver@textBaixo
  2580  002218  6E0F               	movwf	printf@text^0,c
  2581  00221A  0E00               	movlw	high GameOver@textBaixo
  2582  00221C  6E10               	movwf	(printf@text+1)^0,c
  2583  00221E  ECC9  F013         	call	_printf	;wreg free
  2584  002222                     
  2585                           ;controle.c: 168:     delay();
  2586  002222  EC46  F013         	call	_delay	;wreg free
  2587  002226                     
  2588                           ;controle.c: 169:     delay();
  2589  002226  EC46  F013         	call	_delay	;wreg free
  2590  00222A                     
  2591                           ;controle.c: 170:     delay();
  2592  00222A  EC46  F013         	call	_delay	;wreg free
  2593  00222E                     
  2594                           ;controle.c: 171:     lcdCommand(0x01);
  2595  00222E  0E01               	movlw	1
  2596  002230  EC65  F015         	call	_lcdCommand
  2597  002234                     
  2598                           ;controle.c: 172:     saldoTxt();
  2599  002234  EC76  F00F         	call	_saldoTxt	;wreg free
  2600  002238  0012               	return		;funcret
  2601  00223A                     __end_of_GameOver:
  2602                           	callstack 0
  2603                           
  2604 ;; *************** function _Apostando *****************
  2605 ;; Defined at:
  2606 ;;		line 238 in file "controle.c"
  2607 ;; Parameters:    Size  Location     Type
  2608 ;;		None
  2609 ;; Auto vars:     Size  Location     Type
  2610 ;;  tempo           4  112[COMRAM] float 
  2611 ;;  t               4  108[COMRAM] float 
  2612 ;;  randomChar      4  116[COMRAM] unsigned char [4]
  2613 ;; Return value:  Size  Location     Type
  2614 ;;                  1    wreg      void 
  2615 ;; Registers used:
  2616 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2617 ;; Tracked objects:
  2618 ;;		On entry : 0/0
  2619 ;;		On exit  : 0/0
  2620 ;;		Unchanged: 0/0
  2621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2622 ;;      Params:         0       0       0       0       0       0       0
  2623 ;;      Locals:        14       0       0       0       0       0       0
  2624 ;;      Temps:          8       0       0       0       0       0       0
  2625 ;;      Totals:        22       0       0       0       0       0       0
  2626 ;;Total ram usage:       22 bytes
  2627 ;; Hardware stack levels used: 1
  2628 ;; Hardware stack levels required when called: 8
  2629 ;; This function calls:
  2630 ;;		_Lose
  2631 ;;		_Win1x
  2632 ;;		_Win2x
  2633 ;;		_WinAll
  2634 ;;		___awdiv
  2635 ;;		___awmod
  2636 ;;		___fladd
  2637 ;;		___flge
  2638 ;;		___wmul
  2639 ;;		_bcd2dec
  2640 ;;		_digitalWrite
  2641 ;;		_dsReadData
  2642 ;;		_itoa
  2643 ;;		_rand
  2644 ;;		_srand
  2645 ;;		_ssdDigit
  2646 ;;		_ssdUpdate
  2647 ;;		_time
  2648 ;; This function is called by:
  2649 ;;		_apostandoTxtProgress
  2650 ;; This function uses a non-reentrant model
  2651 ;;
  2652                           
  2653                           	psect	text14
  2654  000B24                     __ptext14:
  2655                           	callstack 0
  2656  000B24                     _Apostando:
  2657                           	callstack 21
  2658  000B24                     
  2659                           ;controle.c: 239:     srand(time(((void*)0)));
  2660  000B24  0E00               	movlw	0
  2661  000B26  6E01               	movwf	time@t^0,c
  2662  000B28  0E00               	movlw	0
  2663  000B2A  6E02               	movwf	(time@t+1)^0,c
  2664  000B2C  ECD8  F012         	call	_time	;wreg free
  2665  000B30  C001  F063         	movff	?_time,??_Apostando
  2666  000B34  C002  F064         	movff	?_time+1,??_Apostando+1
  2667  000B38  C003  F065         	movff	?_time+2,??_Apostando+2
  2668  000B3C  C004  F066         	movff	?_time+3,??_Apostando+3
  2669  000B40  C005  F067         	movff	?_time+4,??_Apostando+4
  2670  000B44  C006  F068         	movff	?_time+5,??_Apostando+5
  2671  000B48  C007  F069         	movff	?_time+6,??_Apostando+6
  2672  000B4C  C008  F06A         	movff	?_time+7,??_Apostando+7
  2673  000B50  C063  F009         	movff	??_Apostando,srand@s
  2674  000B54  C065  F00A         	movff	??_Apostando+2,srand@s+1
  2675  000B58  EC1C  F015         	call	_srand	;wreg free
  2676  000B5C                     
  2677                           ;controle.c: 240:     random = ((rand() % 10000) * (bcd2dec(dsReadData(0)& 0x7f)));
  2678  000B5C  0E00               	movlw	0
  2679  000B5E  6E0F               	movwf	(dsReadData@address+1)^0,c
  2680  000B60  0E00               	movlw	0
  2681  000B62  6E0E               	movwf	dsReadData@address^0,c
  2682  000B64  EC23  F013         	call	_dsReadData	;wreg free
  2683  000B68  0E7F               	movlw	127
  2684  000B6A  140E               	andwf	?_dsReadData^0,w,c
  2685  000B6C  6E1F               	movwf	bcd2dec@value^0,c
  2686  000B6E  6A20               	clrf	(bcd2dec@value+1)^0,c
  2687  000B70  EC68  F013         	call	_bcd2dec	;wreg free
  2688  000B74  C01F  F06B         	movff	?_bcd2dec,_Apostando$1320
  2689  000B78  C020  F06C         	movff	?_bcd2dec+1,_Apostando$1320+1
  2690  000B7C                     
  2691                           ;controle.c: 240:     random = ((rand() % 10000) * (bcd2dec(dsReadData(0)& 0x7f)));
  2692  000B7C  0E27               	movlw	39
  2693  000B7E  6E16               	movwf	(___awmod@divisor+1)^0,c
  2694  000B80  0E10               	movlw	16
  2695  000B82  6E15               	movwf	___awmod@divisor^0,c
  2696  000B84  ECB2  F00F         	call	_rand	;wreg free
  2697  000B88  C00D  F013         	movff	?_rand,___awmod@dividend
  2698  000B8C  C00E  F014         	movff	?_rand+1,___awmod@dividend+1
  2699  000B90  ECCA  F00E         	call	___awmod	;wreg free
  2700  000B94  C013  F019         	movff	?___awmod,___wmul@multiplier
  2701  000B98  C014  F01A         	movff	?___awmod+1,___wmul@multiplier+1
  2702  000B9C  C06B  F01B         	movff	_Apostando$1320,___wmul@multiplicand
  2703  000BA0  C06C  F01C         	movff	_Apostando$1320+1,___wmul@multiplicand+1
  2704  000BA4  EC43  F015         	call	___wmul	;wreg free
  2705  000BA8  C019  F0E3         	movff	?___wmul,_random
  2706  000BAC  C01A  F0E4         	movff	?___wmul+1,_random+1
  2707  000BB0                     
  2708                           ;controle.c: 241:     random = random % 10000;
  2709  000BB0  C0E3  F013         	movff	_random,___awmod@dividend
  2710  000BB4  C0E4  F014         	movff	_random+1,___awmod@dividend+1
  2711  000BB8  0E27               	movlw	39
  2712  000BBA  6E16               	movwf	(___awmod@divisor+1)^0,c
  2713  000BBC  0E10               	movlw	16
  2714  000BBE  6E15               	movwf	___awmod@divisor^0,c
  2715  000BC0  ECCA  F00E         	call	___awmod	;wreg free
  2716  000BC4  C013  F0E3         	movff	?___awmod,_random
  2717  000BC8  C014  F0E4         	movff	?___awmod+1,_random+1
  2718  000BCC                     
  2719                           ;controle.c: 242:     random -= 1;
  2720  000BCC  0100               	movlb	0	; () banked
  2721  000BCE  07E3               	decf	_random& (0+255),f,b
  2722  000BD0  A0D8               	btfss	status,0,c
  2723  000BD2  07E4               	decf	(_random+1)& (0+255),f,b
  2724  000BD4                     
  2725                           ; BSR set to: 0
  2726                           ;controle.c: 243:     char randomChar[4];;controle.c: 244:     itoa(random, randomChar, 
      +                          10);
  2727  000BD4  C0E3  F01F         	movff	_random,itoa@value
  2728  000BD8  C0E4  F020         	movff	_random+1,itoa@value+1
  2729  000BDC  0E75               	movlw	low Apostando@randomChar
  2730  000BDE  6E21               	movwf	itoa@result^0,c
  2731  000BE0  0E00               	movlw	high Apostando@randomChar
  2732  000BE2  6E22               	movwf	(itoa@result+1)^0,c
  2733  000BE4  0E00               	movlw	0
  2734  000BE6  6E24               	movwf	(itoa@basea+1)^0,c
  2735  000BE8  0E0A               	movlw	10
  2736  000BEA  6E23               	movwf	itoa@basea^0,c
  2737  000BEC  EC5A  F00B         	call	_itoa	;wreg free
  2738  000BF0                     
  2739                           ;controle.c: 245:     for (float t = 0; t < 200; t++) {
  2740  000BF0  0E00               	movlw	0
  2741  000BF2  6E6D               	movwf	Apostando@t^0,c
  2742  000BF4  0E00               	movlw	0
  2743  000BF6  6E6E               	movwf	(Apostando@t+1)^0,c
  2744  000BF8  0E00               	movlw	0
  2745  000BFA  6E6F               	movwf	(Apostando@t+2)^0,c
  2746  000BFC  0E00               	movlw	0
  2747  000BFE  6E70               	movwf	(Apostando@t+3)^0,c
  2748  000C00  C06D  F001         	movff	Apostando@t,___flge@ff1
  2749  000C04  C06E  F002         	movff	Apostando@t+1,___flge@ff1+1
  2750  000C08  C06F  F003         	movff	Apostando@t+2,___flge@ff1+2
  2751  000C0C  C070  F004         	movff	Apostando@t+3,___flge@ff1+3
  2752  000C10  0E00               	movlw	0
  2753  000C12  6E05               	movwf	___flge@ff2^0,c
  2754  000C14  0E00               	movlw	0
  2755  000C16  6E06               	movwf	(___flge@ff2+1)^0,c
  2756  000C18  0E48               	movlw	72
  2757  000C1A  6E07               	movwf	(___flge@ff2+2)^0,c
  2758  000C1C  0E43               	movlw	67
  2759  000C1E  6E08               	movwf	(___flge@ff2+3)^0,c
  2760  000C20  ECA8  F00C         	call	___flge	;wreg free
  2761  000C24  A0D8               	btfss	status,0,c
  2762  000C26  EF17  F006         	goto	u3601
  2763  000C2A  EF19  F006         	goto	u3600
  2764  000C2E                     u3601:
  2765  000C2E  EF1B  F006         	goto	l3404
  2766  000C32                     u3600:
  2767  000C32  EFF6  F006         	goto	l3418
  2768  000C36                     l3404:
  2769                           
  2770                           ;controle.c: 246:         ssdDigit(random / 1000, 0);
  2771  000C36  0E00               	movlw	0
  2772  000C38  6E19               	movwf	ssdDigit@pos^0,c
  2773  000C3A  C0E3  F001         	movff	_random,___awdiv@dividend
  2774  000C3E  C0E4  F002         	movff	_random+1,___awdiv@dividend+1
  2775  000C42  0E03               	movlw	3
  2776  000C44  6E04               	movwf	(___awdiv@divisor+1)^0,c
  2777  000C46  0EE8               	movlw	232
  2778  000C48  6E03               	movwf	___awdiv@divisor^0,c
  2779  000C4A  EC0E  F00E         	call	___awdiv	;wreg free
  2780  000C4E  5001               	movf	?___awdiv^0,w,c
  2781  000C50  EC04  F012         	call	_ssdDigit
  2782                           
  2783                           ;controle.c: 247:         ssdDigit((random / 100) % 10, 1);
  2784  000C54  0E01               	movlw	1
  2785  000C56  6E19               	movwf	ssdDigit@pos^0,c
  2786  000C58  0E00               	movlw	0
  2787  000C5A  6E04               	movwf	(___awdiv@divisor+1)^0,c
  2788  000C5C  0E64               	movlw	100
  2789  000C5E  6E03               	movwf	___awdiv@divisor^0,c
  2790  000C60  C0E3  F001         	movff	_random,___awdiv@dividend
  2791  000C64  C0E4  F002         	movff	_random+1,___awdiv@dividend+1
  2792  000C68  EC0E  F00E         	call	___awdiv	;wreg free
  2793  000C6C  C001  F013         	movff	?___awdiv,___awmod@dividend
  2794  000C70  C002  F014         	movff	?___awdiv+1,___awmod@dividend+1
  2795  000C74  0E00               	movlw	0
  2796  000C76  6E16               	movwf	(___awmod@divisor+1)^0,c
  2797  000C78  0E0A               	movlw	10
  2798  000C7A  6E15               	movwf	___awmod@divisor^0,c
  2799  000C7C  ECCA  F00E         	call	___awmod	;wreg free
  2800  000C80  5013               	movf	?___awmod^0,w,c
  2801  000C82  EC04  F012         	call	_ssdDigit
  2802                           
  2803                           ;controle.c: 248:         ssdDigit((random / 10) % 10, 2);
  2804  000C86  0E02               	movlw	2
  2805  000C88  6E19               	movwf	ssdDigit@pos^0,c
  2806  000C8A  0E00               	movlw	0
  2807  000C8C  6E04               	movwf	(___awdiv@divisor+1)^0,c
  2808  000C8E  0E0A               	movlw	10
  2809  000C90  6E03               	movwf	___awdiv@divisor^0,c
  2810  000C92  C0E3  F001         	movff	_random,___awdiv@dividend
  2811  000C96  C0E4  F002         	movff	_random+1,___awdiv@dividend+1
  2812  000C9A  EC0E  F00E         	call	___awdiv	;wreg free
  2813  000C9E  C001  F013         	movff	?___awdiv,___awmod@dividend
  2814  000CA2  C002  F014         	movff	?___awdiv+1,___awmod@dividend+1
  2815  000CA6  0E00               	movlw	0
  2816  000CA8  6E16               	movwf	(___awmod@divisor+1)^0,c
  2817  000CAA  0E0A               	movlw	10
  2818  000CAC  6E15               	movwf	___awmod@divisor^0,c
  2819  000CAE  ECCA  F00E         	call	___awmod	;wreg free
  2820  000CB2  5013               	movf	?___awmod^0,w,c
  2821  000CB4  EC04  F012         	call	_ssdDigit
  2822                           
  2823                           ;controle.c: 249:         ssdDigit(random % 10, 3);
  2824  000CB8  0E03               	movlw	3
  2825  000CBA  6E19               	movwf	ssdDigit@pos^0,c
  2826  000CBC  C0E3  F013         	movff	_random,___awmod@dividend
  2827  000CC0  C0E4  F014         	movff	_random+1,___awmod@dividend+1
  2828  000CC4  0E00               	movlw	0
  2829  000CC6  6E16               	movwf	(___awmod@divisor+1)^0,c
  2830  000CC8  0E0A               	movlw	10
  2831  000CCA  6E15               	movwf	___awmod@divisor^0,c
  2832  000CCC  ECCA  F00E         	call	___awmod	;wreg free
  2833  000CD0  5013               	movf	?___awmod^0,w,c
  2834  000CD2  EC04  F012         	call	_ssdDigit
  2835  000CD6                     
  2836                           ;controle.c: 250:         ssdUpdate();
  2837  000CD6  ECEA  F009         	call	_ssdUpdate	;wreg free
  2838  000CDA                     
  2839                           ;controle.c: 251:         for (float tempo = 0; tempo < 100; tempo++);
  2840  000CDA  0E00               	movlw	0
  2841  000CDC  6E71               	movwf	Apostando@tempo^0,c
  2842  000CDE  0E00               	movlw	0
  2843  000CE0  6E72               	movwf	(Apostando@tempo+1)^0,c
  2844  000CE2  0E00               	movlw	0
  2845  000CE4  6E73               	movwf	(Apostando@tempo+2)^0,c
  2846  000CE6  0E00               	movlw	0
  2847  000CE8  6E74               	movwf	(Apostando@tempo+3)^0,c
  2848  000CEA  C071  F001         	movff	Apostando@tempo,___flge@ff1
  2849  000CEE  C072  F002         	movff	Apostando@tempo+1,___flge@ff1+1
  2850  000CF2  C073  F003         	movff	Apostando@tempo+2,___flge@ff1+2
  2851  000CF6  C074  F004         	movff	Apostando@tempo+3,___flge@ff1+3
  2852  000CFA  0E00               	movlw	0
  2853  000CFC  6E05               	movwf	___flge@ff2^0,c
  2854  000CFE  0E00               	movlw	0
  2855  000D00  6E06               	movwf	(___flge@ff2+1)^0,c
  2856  000D02  0EC8               	movlw	200
  2857  000D04  6E07               	movwf	(___flge@ff2+2)^0,c
  2858  000D06  0E42               	movlw	66
  2859  000D08  6E08               	movwf	(___flge@ff2+3)^0,c
  2860  000D0A  ECA8  F00C         	call	___flge	;wreg free
  2861  000D0E  A0D8               	btfss	status,0,c
  2862  000D10  EF8C  F006         	goto	u3611
  2863  000D14  EF8E  F006         	goto	u3610
  2864  000D18                     u3611:
  2865  000D18  EF90  F006         	goto	l3414
  2866  000D1C                     u3610:
  2867  000D1C  EFC3  F006         	goto	l3416
  2868  000D20                     l3414:
  2869  000D20  C071  F001         	movff	Apostando@tempo,___fladd@b
  2870  000D24  C072  F002         	movff	Apostando@tempo+1,___fladd@b+1
  2871  000D28  C073  F003         	movff	Apostando@tempo+2,___fladd@b+2
  2872  000D2C  C074  F004         	movff	Apostando@tempo+3,___fladd@b+3
  2873  000D30  0E00               	movlw	0
  2874  000D32  6E05               	movwf	___fladd@a^0,c
  2875  000D34  0E00               	movlw	0
  2876  000D36  6E06               	movwf	(___fladd@a+1)^0,c
  2877  000D38  0E80               	movlw	128
  2878  000D3A  6E07               	movwf	(___fladd@a+2)^0,c
  2879  000D3C  0E3F               	movlw	63
  2880  000D3E  6E08               	movwf	(___fladd@a+3)^0,c
  2881  000D40  EC32  F003         	call	___fladd	;wreg free
  2882  000D44  C001  F071         	movff	?___fladd,Apostando@tempo
  2883  000D48  C002  F072         	movff	?___fladd+1,Apostando@tempo+1
  2884  000D4C  C003  F073         	movff	?___fladd+2,Apostando@tempo+2
  2885  000D50  C004  F074         	movff	?___fladd+3,Apostando@tempo+3
  2886  000D54  C071  F001         	movff	Apostando@tempo,___flge@ff1
  2887  000D58  C072  F002         	movff	Apostando@tempo+1,___flge@ff1+1
  2888  000D5C  C073  F003         	movff	Apostando@tempo+2,___flge@ff1+2
  2889  000D60  C074  F004         	movff	Apostando@tempo+3,___flge@ff1+3
  2890  000D64  0E00               	movlw	0
  2891  000D66  6E05               	movwf	___flge@ff2^0,c
  2892  000D68  0E00               	movlw	0
  2893  000D6A  6E06               	movwf	(___flge@ff2+1)^0,c
  2894  000D6C  0EC8               	movlw	200
  2895  000D6E  6E07               	movwf	(___flge@ff2+2)^0,c
  2896  000D70  0E42               	movlw	66
  2897  000D72  6E08               	movwf	(___flge@ff2+3)^0,c
  2898  000D74  ECA8  F00C         	call	___flge	;wreg free
  2899  000D78  A0D8               	btfss	status,0,c
  2900  000D7A  EFC1  F006         	goto	u3621
  2901  000D7E  EFC3  F006         	goto	u3620
  2902  000D82                     u3621:
  2903  000D82  EF90  F006         	goto	l3414
  2904  000D86                     u3620:
  2905  000D86                     l3416:
  2906                           
  2907                           ;controle.c: 252:     }
  2908  000D86  C06D  F001         	movff	Apostando@t,___fladd@b
  2909  000D8A  C06E  F002         	movff	Apostando@t+1,___fladd@b+1
  2910  000D8E  C06F  F003         	movff	Apostando@t+2,___fladd@b+2
  2911  000D92  C070  F004         	movff	Apostando@t+3,___fladd@b+3
  2912  000D96  0E00               	movlw	0
  2913  000D98  6E05               	movwf	___fladd@a^0,c
  2914  000D9A  0E00               	movlw	0
  2915  000D9C  6E06               	movwf	(___fladd@a+1)^0,c
  2916  000D9E  0E80               	movlw	128
  2917  000DA0  6E07               	movwf	(___fladd@a+2)^0,c
  2918  000DA2  0E3F               	movlw	63
  2919  000DA4  6E08               	movwf	(___fladd@a+3)^0,c
  2920  000DA6  EC32  F003         	call	___fladd	;wreg free
  2921  000DAA  C001  F06D         	movff	?___fladd,Apostando@t
  2922  000DAE  C002  F06E         	movff	?___fladd+1,Apostando@t+1
  2923  000DB2  C003  F06F         	movff	?___fladd+2,Apostando@t+2
  2924  000DB6  C004  F070         	movff	?___fladd+3,Apostando@t+3
  2925  000DBA  C06D  F001         	movff	Apostando@t,___flge@ff1
  2926  000DBE  C06E  F002         	movff	Apostando@t+1,___flge@ff1+1
  2927  000DC2  C06F  F003         	movff	Apostando@t+2,___flge@ff1+2
  2928  000DC6  C070  F004         	movff	Apostando@t+3,___flge@ff1+3
  2929  000DCA  0E00               	movlw	0
  2930  000DCC  6E05               	movwf	___flge@ff2^0,c
  2931  000DCE  0E00               	movlw	0
  2932  000DD0  6E06               	movwf	(___flge@ff2+1)^0,c
  2933  000DD2  0E48               	movlw	72
  2934  000DD4  6E07               	movwf	(___flge@ff2+2)^0,c
  2935  000DD6  0E43               	movlw	67
  2936  000DD8  6E08               	movwf	(___flge@ff2+3)^0,c
  2937  000DDA  ECA8  F00C         	call	___flge	;wreg free
  2938  000DDE  A0D8               	btfss	status,0,c
  2939  000DE0  EFF4  F006         	goto	u3631
  2940  000DE4  EFF6  F006         	goto	u3630
  2941  000DE8                     u3631:
  2942  000DE8  EF1B  F006         	goto	l3404
  2943  000DEC                     u3630:
  2944  000DEC                     l3418:
  2945                           
  2946                           ;controle.c: 254:     digitalWrite(PIN_A2, 0);
  2947  000DEC  0E00               	movlw	0
  2948  000DEE  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2949  000DF0  0E02               	movlw	2
  2950  000DF2  6E01               	movwf	digitalWrite@pin^0,c
  2951  000DF4  0E00               	movlw	0
  2952  000DF6  6E04               	movwf	(digitalWrite@value+1)^0,c
  2953  000DF8  0E00               	movlw	0
  2954  000DFA  6E03               	movwf	digitalWrite@value^0,c
  2955  000DFC  ECC3  F008         	call	_digitalWrite	;wreg free
  2956                           
  2957                           ;controle.c: 255:     digitalWrite(PIN_A3, 0);
  2958  000E00  0E00               	movlw	0
  2959  000E02  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2960  000E04  0E03               	movlw	3
  2961  000E06  6E01               	movwf	digitalWrite@pin^0,c
  2962  000E08  0E00               	movlw	0
  2963  000E0A  6E04               	movwf	(digitalWrite@value+1)^0,c
  2964  000E0C  0E00               	movlw	0
  2965  000E0E  6E03               	movwf	digitalWrite@value^0,c
  2966  000E10  ECC3  F008         	call	_digitalWrite	;wreg free
  2967                           
  2968                           ;controle.c: 256:     digitalWrite(PIN_A4, 0);
  2969  000E14  0E00               	movlw	0
  2970  000E16  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2971  000E18  0E04               	movlw	4
  2972  000E1A  6E01               	movwf	digitalWrite@pin^0,c
  2973  000E1C  0E00               	movlw	0
  2974  000E1E  6E04               	movwf	(digitalWrite@value+1)^0,c
  2975  000E20  0E00               	movlw	0
  2976  000E22  6E03               	movwf	digitalWrite@value^0,c
  2977  000E24  ECC3  F008         	call	_digitalWrite	;wreg free
  2978                           
  2979                           ;controle.c: 257:     digitalWrite(PIN_A5, 0);
  2980  000E28  0E00               	movlw	0
  2981  000E2A  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2982  000E2C  0E05               	movlw	5
  2983  000E2E  6E01               	movwf	digitalWrite@pin^0,c
  2984  000E30  0E00               	movlw	0
  2985  000E32  6E04               	movwf	(digitalWrite@value+1)^0,c
  2986  000E34  0E00               	movlw	0
  2987  000E36  6E03               	movwf	digitalWrite@value^0,c
  2988  000E38  ECC3  F008         	call	_digitalWrite	;wreg free
  2989  000E3C                     
  2990                           ;controle.c: 259:     if ((randomChar[0] == randomChar[1]) || (randomChar[1] == randomCh
      +                          ar[2]) || (randomChar[2] == randomChar[3])) {
  2991  000E3C  5075               	movf	Apostando@randomChar^0,w,c
  2992  000E3E  1876               	xorwf	(Apostando@randomChar+1)^0,w,c
  2993  000E40  B4D8               	btfsc	status,2,c
  2994  000E42  EF25  F007         	goto	u3641
  2995  000E46  EF27  F007         	goto	u3640
  2996  000E4A                     u3641:
  2997  000E4A  EF39  F007         	goto	l3426
  2998  000E4E                     u3640:
  2999  000E4E  5077               	movf	(Apostando@randomChar+2)^0,w,c
  3000  000E50  1876               	xorwf	(Apostando@randomChar+1)^0,w,c
  3001  000E52  B4D8               	btfsc	status,2,c
  3002  000E54  EF2E  F007         	goto	u3651
  3003  000E58  EF30  F007         	goto	u3650
  3004  000E5C                     u3651:
  3005  000E5C  EF39  F007         	goto	l3426
  3006  000E60                     u3650:
  3007  000E60  5078               	movf	(Apostando@randomChar+3)^0,w,c
  3008  000E62  1877               	xorwf	(Apostando@randomChar+2)^0,w,c
  3009  000E64  A4D8               	btfss	status,2,c
  3010  000E66  EF37  F007         	goto	u3661
  3011  000E6A  EF39  F007         	goto	u3660
  3012  000E6E                     u3661:
  3013  000E6E  EF3B  F007         	goto	l3428
  3014  000E72                     u3660:
  3015  000E72                     l3426:
  3016                           
  3017                           ;controle.c: 260:         Win1x();
  3018  000E72  EC88  F010         	call	_Win1x	;wreg free
  3019  000E76                     l3428:
  3020                           
  3021                           ;controle.c: 262:     if ((randomChar[0] == randomChar[1] && randomChar[1] == randomChar
      +                          [2]) || (randomChar[1] == randomChar[2])&& (randomChar[2] == randomChar[3])) {
  3022  000E76  5075               	movf	Apostando@randomChar^0,w,c
  3023  000E78  1876               	xorwf	(Apostando@randomChar+1)^0,w,c
  3024  000E7A  A4D8               	btfss	status,2,c
  3025  000E7C  EF42  F007         	goto	u3671
  3026  000E80  EF44  F007         	goto	u3670
  3027  000E84                     u3671:
  3028  000E84  EF4D  F007         	goto	l3432
  3029  000E88                     u3670:
  3030  000E88  5077               	movf	(Apostando@randomChar+2)^0,w,c
  3031  000E8A  1876               	xorwf	(Apostando@randomChar+1)^0,w,c
  3032  000E8C  B4D8               	btfsc	status,2,c
  3033  000E8E  EF4B  F007         	goto	u3681
  3034  000E92  EF4D  F007         	goto	u3680
  3035  000E96                     u3681:
  3036  000E96  EF5F  F007         	goto	l3436
  3037  000E9A                     u3680:
  3038  000E9A                     l3432:
  3039  000E9A  5077               	movf	(Apostando@randomChar+2)^0,w,c
  3040  000E9C  1876               	xorwf	(Apostando@randomChar+1)^0,w,c
  3041  000E9E  A4D8               	btfss	status,2,c
  3042  000EA0  EF54  F007         	goto	u3691
  3043  000EA4  EF56  F007         	goto	u3690
  3044  000EA8                     u3691:
  3045  000EA8  EF61  F007         	goto	l3438
  3046  000EAC                     u3690:
  3047  000EAC  5078               	movf	(Apostando@randomChar+3)^0,w,c
  3048  000EAE  1877               	xorwf	(Apostando@randomChar+2)^0,w,c
  3049  000EB0  A4D8               	btfss	status,2,c
  3050  000EB2  EF5D  F007         	goto	u3701
  3051  000EB6  EF5F  F007         	goto	u3700
  3052  000EBA                     u3701:
  3053  000EBA  EF61  F007         	goto	l3438
  3054  000EBE                     u3700:
  3055  000EBE                     l3436:
  3056                           
  3057                           ;controle.c: 263:         Win2x();
  3058  000EBE  EC53  F010         	call	_Win2x	;wreg free
  3059  000EC2                     l3438:
  3060                           
  3061                           ;controle.c: 265:     if ((randomChar[0] == randomChar[1]) && (randomChar[1] == randomCh
      +                          ar[2]) & (randomChar[2] == randomChar[3])) {
  3062  000EC2  5075               	movf	Apostando@randomChar^0,w,c
  3063  000EC4  1876               	xorwf	(Apostando@randomChar+1)^0,w,c
  3064  000EC6  A4D8               	btfss	status,2,c
  3065  000EC8  EF68  F007         	goto	u3711
  3066  000ECC  EF6A  F007         	goto	u3710
  3067  000ED0                     u3711:
  3068  000ED0  EF7E  F007         	goto	l3446
  3069  000ED4                     u3710:
  3070  000ED4  5077               	movf	(Apostando@randomChar+2)^0,w,c
  3071  000ED6  1876               	xorwf	(Apostando@randomChar+1)^0,w,c
  3072  000ED8  A4D8               	btfss	status,2,c
  3073  000EDA  EF71  F007         	goto	u3721
  3074  000EDE  EF73  F007         	goto	u3720
  3075  000EE2                     u3721:
  3076  000EE2  EF7E  F007         	goto	l3446
  3077  000EE6                     u3720:
  3078  000EE6  5078               	movf	(Apostando@randomChar+3)^0,w,c
  3079  000EE8  1877               	xorwf	(Apostando@randomChar+2)^0,w,c
  3080  000EEA  A4D8               	btfss	status,2,c
  3081  000EEC  EF7A  F007         	goto	u3731
  3082  000EF0  EF7C  F007         	goto	u3730
  3083  000EF4                     u3731:
  3084  000EF4  EF7E  F007         	goto	l3446
  3085  000EF8                     u3730:
  3086  000EF8                     
  3087                           ;controle.c: 266:         WinAll();
  3088  000EF8  EC1E  F010         	call	_WinAll	;wreg free
  3089  000EFC                     l3446:
  3090                           
  3091                           ;controle.c: 269:     if ((randomChar[0] != randomChar[1]) && (randomChar[1] != randomCh
      +                          ar[2]) & (randomChar[2] != randomChar[3])) {
  3092  000EFC  5075               	movf	Apostando@randomChar^0,w,c
  3093  000EFE  1876               	xorwf	(Apostando@randomChar+1)^0,w,c
  3094  000F00  B4D8               	btfsc	status,2,c
  3095  000F02  EF85  F007         	goto	u3741
  3096  000F06  EF87  F007         	goto	u3740
  3097  000F0A                     u3741:
  3098  000F0A  EF9B  F007         	goto	l410
  3099  000F0E                     u3740:
  3100  000F0E  5077               	movf	(Apostando@randomChar+2)^0,w,c
  3101  000F10  1876               	xorwf	(Apostando@randomChar+1)^0,w,c
  3102  000F12  B4D8               	btfsc	status,2,c
  3103  000F14  EF8E  F007         	goto	u3751
  3104  000F18  EF90  F007         	goto	u3750
  3105  000F1C                     u3751:
  3106  000F1C  EF9B  F007         	goto	l410
  3107  000F20                     u3750:
  3108  000F20  5078               	movf	(Apostando@randomChar+3)^0,w,c
  3109  000F22  1877               	xorwf	(Apostando@randomChar+2)^0,w,c
  3110  000F24  B4D8               	btfsc	status,2,c
  3111  000F26  EF97  F007         	goto	u3761
  3112  000F2A  EF99  F007         	goto	u3760
  3113  000F2E                     u3761:
  3114  000F2E  EF9B  F007         	goto	l410
  3115  000F32                     u3760:
  3116  000F32                     
  3117                           ;controle.c: 270:         Lose();
  3118  000F32  EC4D  F011         	call	_Lose	;wreg free
  3119  000F36                     l410:
  3120  000F36  0012               	return		;funcret
  3121  000F38                     __end_of_Apostando:
  3122                           	callstack 0
  3123                           
  3124 ;; *************** function _time *****************
  3125 ;; Defined at:
  3126 ;;		line 6 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\time.c"
  3127 ;; Parameters:    Size  Location     Type
  3128 ;;  t               2    0[COMRAM] PTR long long 
  3129 ;;		 -> NULL(0), 
  3130 ;; Auto vars:     Size  Location     Type
  3131 ;;		None
  3132 ;; Return value:  Size  Location     Type
  3133 ;;                  8    0[COMRAM] long long 
  3134 ;; Registers used:
  3135 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3136 ;; Tracked objects:
  3137 ;;		On entry : 0/0
  3138 ;;		On exit  : 0/0
  3139 ;;		Unchanged: 0/0
  3140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3141 ;;      Params:         8       0       0       0       0       0       0
  3142 ;;      Locals:         0       0       0       0       0       0       0
  3143 ;;      Temps:          0       0       0       0       0       0       0
  3144 ;;      Totals:         8       0       0       0       0       0       0
  3145 ;;Total ram usage:        8 bytes
  3146 ;; Hardware stack levels used: 1
  3147 ;; This function calls:
  3148 ;;		Nothing
  3149 ;; This function is called by:
  3150 ;;		_main
  3151 ;;		_Apostando
  3152 ;; This function uses a non-reentrant model
  3153 ;;
  3154                           
  3155                           	psect	text15
  3156  0025B0                     __ptext15:
  3157                           	callstack 0
  3158  0025B0                     _time:
  3159                           	callstack 30
  3160  0025B0  5001               	movf	time@t^0,w,c
  3161  0025B2  1002               	iorwf	(time@t+1)^0,w,c
  3162  0025B4  B4D8               	btfsc	status,2,c
  3163  0025B6  EFDF  F012         	goto	u2921
  3164  0025BA  EFE1  F012         	goto	u2920
  3165  0025BE                     u2921:
  3166  0025BE  EFF5  F012         	goto	l2902
  3167  0025C2                     u2920:
  3168  0025C2  C001  FFD9         	movff	time@t,fsr2l
  3169  0025C6  C002  FFDA         	movff	time@t+1,fsr2h
  3170  0025CA  0EFF               	movlw	255
  3171  0025CC  6EDE               	movwf	postinc2,c
  3172  0025CE  0EFF               	movlw	255
  3173  0025D0  6EDE               	movwf	postinc2,c
  3174  0025D2  0EFF               	movlw	255
  3175  0025D4  6EDE               	movwf	postinc2,c
  3176  0025D6  0EFF               	movlw	255
  3177  0025D8  6EDE               	movwf	postinc2,c
  3178  0025DA  0EFF               	movlw	255
  3179  0025DC  6EDE               	movwf	postinc2,c
  3180  0025DE  0EFF               	movlw	255
  3181  0025E0  6EDE               	movwf	postinc2,c
  3182  0025E2  0EFF               	movlw	255
  3183  0025E4  6EDE               	movwf	postinc2,c
  3184  0025E6  0EFF               	movlw	255
  3185  0025E8  6EDD               	movwf	postdec2,c
  3186  0025EA                     l2902:
  3187  0025EA  6801               	setf	?_time^0,c
  3188  0025EC  6802               	setf	(?_time+1)^0,c
  3189  0025EE  6803               	setf	(?_time+2)^0,c
  3190  0025F0  6804               	setf	(?_time+3)^0,c
  3191  0025F2  6805               	setf	(?_time+4)^0,c
  3192  0025F4  6806               	setf	(?_time+5)^0,c
  3193  0025F6  6807               	setf	(?_time+6)^0,c
  3194  0025F8  6808               	setf	(?_time+7)^0,c
  3195  0025FA  0012               	return		;funcret
  3196  0025FC                     __end_of_time:
  3197                           	callstack 0
  3198                           
  3199 ;; *************** function _ssdUpdate *****************
  3200 ;; Defined at:
  3201 ;;		line 50 in file "ssd.c"
  3202 ;; Parameters:    Size  Location     Type
  3203 ;;		None
  3204 ;; Auto vars:     Size  Location     Type
  3205 ;;		None
  3206 ;; Return value:  Size  Location     Type
  3207 ;;                  1    wreg      void 
  3208 ;; Registers used:
  3209 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3210 ;; Tracked objects:
  3211 ;;		On entry : 0/0
  3212 ;;		On exit  : 0/0
  3213 ;;		Unchanged: 0/0
  3214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3215 ;;      Params:         0       0       0       0       0       0       0
  3216 ;;      Locals:         0       0       0       0       0       0       0
  3217 ;;      Temps:          2       0       0       0       0       0       0
  3218 ;;      Totals:         2       0       0       0       0       0       0
  3219 ;;Total ram usage:        2 bytes
  3220 ;; Hardware stack levels used: 1
  3221 ;; Hardware stack levels required when called: 3
  3222 ;; This function calls:
  3223 ;;		_digitalWrite
  3224 ;;		_soWrite
  3225 ;; This function is called by:
  3226 ;;		_Apostando
  3227 ;; This function uses a non-reentrant model
  3228 ;;
  3229                           
  3230                           	psect	text16
  3231  0013D4                     __ptext16:
  3232                           	callstack 0
  3233  0013D4                     _ssdUpdate:
  3234                           	callstack 25
  3235  0013D4                     
  3236                           ;ssd.c: 54:     digitalWrite(PIN_D0,0);
  3237  0013D4  0E00               	movlw	0
  3238  0013D6  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3239  0013D8  0E18               	movlw	24
  3240  0013DA  6E01               	movwf	digitalWrite@pin^0,c
  3241  0013DC  0E00               	movlw	0
  3242  0013DE  6E04               	movwf	(digitalWrite@value+1)^0,c
  3243  0013E0  0E00               	movlw	0
  3244  0013E2  6E03               	movwf	digitalWrite@value^0,c
  3245  0013E4  ECC3  F008         	call	_digitalWrite	;wreg free
  3246                           
  3247                           ;ssd.c: 55:     digitalWrite(PIN_D1,0);
  3248  0013E8  0E00               	movlw	0
  3249  0013EA  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3250  0013EC  0E19               	movlw	25
  3251  0013EE  6E01               	movwf	digitalWrite@pin^0,c
  3252  0013F0  0E00               	movlw	0
  3253  0013F2  6E04               	movwf	(digitalWrite@value+1)^0,c
  3254  0013F4  0E00               	movlw	0
  3255  0013F6  6E03               	movwf	digitalWrite@value^0,c
  3256  0013F8  ECC3  F008         	call	_digitalWrite	;wreg free
  3257                           
  3258                           ;ssd.c: 56:     digitalWrite(PIN_D2,0);
  3259  0013FC  0E00               	movlw	0
  3260  0013FE  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3261  001400  0E1A               	movlw	26
  3262  001402  6E01               	movwf	digitalWrite@pin^0,c
  3263  001404  0E00               	movlw	0
  3264  001406  6E04               	movwf	(digitalWrite@value+1)^0,c
  3265  001408  0E00               	movlw	0
  3266  00140A  6E03               	movwf	digitalWrite@value^0,c
  3267  00140C  ECC3  F008         	call	_digitalWrite	;wreg free
  3268                           
  3269                           ;ssd.c: 57:     digitalWrite(PIN_D3,0);
  3270  001410  0E00               	movlw	0
  3271  001412  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3272  001414  0E1B               	movlw	27
  3273  001416  6E01               	movwf	digitalWrite@pin^0,c
  3274  001418  0E00               	movlw	0
  3275  00141A  6E04               	movwf	(digitalWrite@value+1)^0,c
  3276  00141C  0E00               	movlw	0
  3277  00141E  6E03               	movwf	digitalWrite@value^0,c
  3278  001420  ECC3  F008         	call	_digitalWrite	;wreg free
  3279                           
  3280                           ;ssd.c: 60:     soWrite(0x00);
  3281  001424  0E00               	movlw	0
  3282  001426  6E08               	movwf	(soWrite@value+1)^0,c
  3283  001428  0E00               	movlw	0
  3284  00142A  6E07               	movwf	soWrite@value^0,c
  3285  00142C  ECB1  F012         	call	_soWrite	;wreg free
  3286                           
  3287                           ;ssd.c: 62:     switch (display)
  3288  001430  EF86  F00A         	goto	l2954
  3289  001434                     l2926:
  3290                           
  3291                           ; BSR set to: 0
  3292                           ;ssd.c: 65:             soWrite(valor[v0]);
  3293  001434  0E01               	movlw	low _valor
  3294  001436  25F0               	addwf	_v0& (0+255),w,b
  3295  001438  6EF6               	movwf	tblptrl,c
  3296  00143A  6AF7               	clrf	tblptrh,c
  3297  00143C  0E06               	movlw	high _valor
  3298  00143E  22F7               	addwfc	tblptrh,f,c
  3299  001440                     	if	0	;There are less than 3 active tblptr bytes
  3300  001440                     	endif
  3301  001440  0008               	tblrd		*
  3302  001442  50F5               	movf	tablat,w,c
  3303  001444  6E07               	movwf	soWrite@value^0,c
  3304  001446  6A08               	clrf	(soWrite@value+1)^0,c
  3305  001448  ECB1  F012         	call	_soWrite	;wreg free
  3306  00144C                     
  3307                           ;ssd.c: 66:             digitalWrite(PIN_D0,1);
  3308  00144C  0E00               	movlw	0
  3309  00144E  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3310  001450  0E18               	movlw	24
  3311  001452  6E01               	movwf	digitalWrite@pin^0,c
  3312  001454  0E00               	movlw	0
  3313  001456  6E04               	movwf	(digitalWrite@value+1)^0,c
  3314  001458  0E01               	movlw	1
  3315  00145A  6E03               	movwf	digitalWrite@value^0,c
  3316  00145C  ECC3  F008         	call	_digitalWrite	;wreg free
  3317  001460                     
  3318                           ;ssd.c: 67:             display = 1;
  3319  001460  0E01               	movlw	1
  3320  001462  0100               	movlb	0	; () banked
  3321  001464  6FF1               	movwf	_display& (0+255),b
  3322                           
  3323                           ;ssd.c: 68:             break;
  3324  001466  EFA4  F00A         	goto	l260
  3325  00146A                     l2932:
  3326                           
  3327                           ; BSR set to: 0
  3328                           ;ssd.c: 71:             soWrite(valor[v1]);
  3329  00146A  0E01               	movlw	low _valor
  3330  00146C  25EF               	addwf	_v1& (0+255),w,b
  3331  00146E  6EF6               	movwf	tblptrl,c
  3332  001470  6AF7               	clrf	tblptrh,c
  3333  001472  0E06               	movlw	high _valor
  3334  001474  22F7               	addwfc	tblptrh,f,c
  3335  001476                     	if	0	;There are less than 3 active tblptr bytes
  3336  001476                     	endif
  3337  001476  0008               	tblrd		*
  3338  001478  50F5               	movf	tablat,w,c
  3339  00147A  6E07               	movwf	soWrite@value^0,c
  3340  00147C  6A08               	clrf	(soWrite@value+1)^0,c
  3341  00147E  ECB1  F012         	call	_soWrite	;wreg free
  3342  001482                     
  3343                           ;ssd.c: 72:             digitalWrite(PIN_D1,1);
  3344  001482  0E00               	movlw	0
  3345  001484  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3346  001486  0E19               	movlw	25
  3347  001488  6E01               	movwf	digitalWrite@pin^0,c
  3348  00148A  0E00               	movlw	0
  3349  00148C  6E04               	movwf	(digitalWrite@value+1)^0,c
  3350  00148E  0E01               	movlw	1
  3351  001490  6E03               	movwf	digitalWrite@value^0,c
  3352  001492  ECC3  F008         	call	_digitalWrite	;wreg free
  3353  001496                     
  3354                           ;ssd.c: 73:             display = 2;
  3355  001496  0E02               	movlw	2
  3356  001498  0100               	movlb	0	; () banked
  3357  00149A  6FF1               	movwf	_display& (0+255),b
  3358                           
  3359                           ;ssd.c: 74:             break;
  3360  00149C  EFA4  F00A         	goto	l260
  3361  0014A0                     l2938:
  3362                           
  3363                           ; BSR set to: 0
  3364                           ;ssd.c: 77:             soWrite(valor[v2]);
  3365  0014A0  0E01               	movlw	low _valor
  3366  0014A2  25EE               	addwf	_v2& (0+255),w,b
  3367  0014A4  6EF6               	movwf	tblptrl,c
  3368  0014A6  6AF7               	clrf	tblptrh,c
  3369  0014A8  0E06               	movlw	high _valor
  3370  0014AA  22F7               	addwfc	tblptrh,f,c
  3371  0014AC                     	if	0	;There are less than 3 active tblptr bytes
  3372  0014AC                     	endif
  3373  0014AC  0008               	tblrd		*
  3374  0014AE  50F5               	movf	tablat,w,c
  3375  0014B0  6E07               	movwf	soWrite@value^0,c
  3376  0014B2  6A08               	clrf	(soWrite@value+1)^0,c
  3377  0014B4  ECB1  F012         	call	_soWrite	;wreg free
  3378  0014B8                     
  3379                           ;ssd.c: 78:             digitalWrite(PIN_D2,1);
  3380  0014B8  0E00               	movlw	0
  3381  0014BA  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3382  0014BC  0E1A               	movlw	26
  3383  0014BE  6E01               	movwf	digitalWrite@pin^0,c
  3384  0014C0  0E00               	movlw	0
  3385  0014C2  6E04               	movwf	(digitalWrite@value+1)^0,c
  3386  0014C4  0E01               	movlw	1
  3387  0014C6  6E03               	movwf	digitalWrite@value^0,c
  3388  0014C8  ECC3  F008         	call	_digitalWrite	;wreg free
  3389  0014CC                     
  3390                           ;ssd.c: 79:             display = 3;
  3391  0014CC  0E03               	movlw	3
  3392  0014CE  0100               	movlb	0	; () banked
  3393  0014D0  6FF1               	movwf	_display& (0+255),b
  3394                           
  3395                           ;ssd.c: 80:             break;
  3396  0014D2  EFA4  F00A         	goto	l260
  3397  0014D6                     l2944:
  3398                           
  3399                           ; BSR set to: 0
  3400                           ;ssd.c: 83:             soWrite(valor[v3]);
  3401  0014D6  0E01               	movlw	low _valor
  3402  0014D8  25ED               	addwf	_v3& (0+255),w,b
  3403  0014DA  6EF6               	movwf	tblptrl,c
  3404  0014DC  6AF7               	clrf	tblptrh,c
  3405  0014DE  0E06               	movlw	high _valor
  3406  0014E0  22F7               	addwfc	tblptrh,f,c
  3407  0014E2                     	if	0	;There are less than 3 active tblptr bytes
  3408  0014E2                     	endif
  3409  0014E2  0008               	tblrd		*
  3410  0014E4  50F5               	movf	tablat,w,c
  3411  0014E6  6E07               	movwf	soWrite@value^0,c
  3412  0014E8  6A08               	clrf	(soWrite@value+1)^0,c
  3413  0014EA  ECB1  F012         	call	_soWrite	;wreg free
  3414  0014EE                     
  3415                           ;ssd.c: 84:             digitalWrite(PIN_D3,1);
  3416  0014EE  0E00               	movlw	0
  3417  0014F0  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3418  0014F2  0E1B               	movlw	27
  3419  0014F4  6E01               	movwf	digitalWrite@pin^0,c
  3420  0014F6  0E00               	movlw	0
  3421  0014F8  6E04               	movwf	(digitalWrite@value+1)^0,c
  3422  0014FA  0E01               	movlw	1
  3423  0014FC  6E03               	movwf	digitalWrite@value^0,c
  3424  0014FE  ECC3  F008         	call	_digitalWrite	;wreg free
  3425  001502                     l2948:
  3426                           
  3427                           ;ssd.c: 85:             display = 0;
  3428  001502  0E00               	movlw	0
  3429  001504  0100               	movlb	0	; () banked
  3430  001506  6FF1               	movwf	_display& (0+255),b
  3431                           
  3432                           ;ssd.c: 86:             break;
  3433  001508  EFA4  F00A         	goto	l260
  3434  00150C                     l2954:
  3435  00150C  0100               	movlb	0	; () banked
  3436  00150E  51F1               	movf	_display& (0+255),w,b
  3437  001510  6E0A               	movwf	??_ssdUpdate^0,c
  3438  001512  6A0B               	clrf	(??_ssdUpdate+1)^0,c
  3439                           
  3440                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3441                           ; Switch size 1, requested type "simple"
  3442                           ; Number of cases is 1, Range of values is 0 to 0
  3443                           ; switch strategies available:
  3444                           ; Name         Instructions Cycles
  3445                           ; simple_byte            4     3 (average)
  3446                           ;	Chosen strategy is simple_byte
  3447  001514  500B               	movf	(??_ssdUpdate+1)^0,w,c
  3448  001516  0A00               	xorlw	0	; case 0
  3449  001518  B4D8               	btfsc	status,2,c
  3450  00151A  EF91  F00A         	goto	l3702
  3451  00151E  EF81  F00A         	goto	l2948
  3452  001522                     l3702:
  3453                           
  3454                           ; BSR set to: 0
  3455                           ; Switch size 1, requested type "simple"
  3456                           ; Number of cases is 4, Range of values is 0 to 3
  3457                           ; switch strategies available:
  3458                           ; Name         Instructions Cycles
  3459                           ; simple_byte           13     7 (average)
  3460                           ;	Chosen strategy is simple_byte
  3461  001522  500A               	movf	??_ssdUpdate^0,w,c
  3462  001524  0A00               	xorlw	0	; case 0
  3463  001526  B4D8               	btfsc	status,2,c
  3464  001528  EF1A  F00A         	goto	l2926
  3465  00152C  0A01               	xorlw	1	; case 1
  3466  00152E  B4D8               	btfsc	status,2,c
  3467  001530  EF35  F00A         	goto	l2932
  3468  001534  0A03               	xorlw	3	; case 2
  3469  001536  B4D8               	btfsc	status,2,c
  3470  001538  EF50  F00A         	goto	l2938
  3471  00153C  0A01               	xorlw	1	; case 3
  3472  00153E  B4D8               	btfsc	status,2,c
  3473  001540  EF6B  F00A         	goto	l2944
  3474  001544  EF81  F00A         	goto	l2948
  3475  001548                     l260:
  3476                           
  3477                           ; BSR set to: 0
  3478  001548  0012               	return		;funcret
  3479  00154A                     __end_of_ssdUpdate:
  3480                           	callstack 0
  3481                           
  3482 ;; *************** function _ssdDigit *****************
  3483 ;; Defined at:
  3484 ;;		line 34 in file "ssd.c"
  3485 ;; Parameters:    Size  Location     Type
  3486 ;;  val             1    wreg     unsigned char 
  3487 ;;  pos             1   24[COMRAM] unsigned char 
  3488 ;; Auto vars:     Size  Location     Type
  3489 ;;  val             1   25[COMRAM] unsigned char 
  3490 ;; Return value:  Size  Location     Type
  3491 ;;                  1    wreg      void 
  3492 ;; Registers used:
  3493 ;;		wreg, status,2, status,0
  3494 ;; Tracked objects:
  3495 ;;		On entry : 0/0
  3496 ;;		On exit  : 0/0
  3497 ;;		Unchanged: 0/0
  3498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3499 ;;      Params:         1       0       0       0       0       0       0
  3500 ;;      Locals:         1       0       0       0       0       0       0
  3501 ;;      Temps:          0       0       0       0       0       0       0
  3502 ;;      Totals:         2       0       0       0       0       0       0
  3503 ;;Total ram usage:        2 bytes
  3504 ;; Hardware stack levels used: 1
  3505 ;; This function calls:
  3506 ;;		Nothing
  3507 ;; This function is called by:
  3508 ;;		_Apostando
  3509 ;; This function uses a non-reentrant model
  3510 ;;
  3511                           
  3512                           	psect	text17
  3513  002408                     __ptext17:
  3514                           	callstack 0
  3515  002408                     _ssdDigit:
  3516                           	callstack 28
  3517                           
  3518                           ; BSR set to: 0
  3519                           ;incstack = 0
  3520                           ;ssdDigit@val stored from wreg
  3521  002408  6E1A               	movwf	ssdDigit@val^0,c
  3522  00240A                     
  3523                           ;ssd.c: 35:     if (pos == 0) {
  3524  00240A  5019               	movf	ssdDigit@pos^0,w,c
  3525  00240C  A4D8               	btfss	status,2,c
  3526  00240E  EF0B  F012         	goto	u2931
  3527  002412  EF0D  F012         	goto	u2930
  3528  002416                     u2931:
  3529  002416  EF0F  F012         	goto	l2912
  3530  00241A                     u2930:
  3531  00241A                     
  3532                           ;ssd.c: 36:         v0 = val;
  3533  00241A  C01A  F0F0         	movff	ssdDigit@val,_v0
  3534  00241E                     l2912:
  3535                           
  3536                           ;ssd.c: 38:     if (pos == 1) {
  3537  00241E  0419               	decf	ssdDigit@pos^0,w,c
  3538  002420  A4D8               	btfss	status,2,c
  3539  002422  EF15  F012         	goto	u2941
  3540  002426  EF17  F012         	goto	u2940
  3541  00242A                     u2941:
  3542  00242A  EF19  F012         	goto	l2916
  3543  00242E                     u2940:
  3544  00242E                     
  3545                           ;ssd.c: 39:         v1 = val;
  3546  00242E  C01A  F0EF         	movff	ssdDigit@val,_v1
  3547  002432                     l2916:
  3548                           
  3549                           ;ssd.c: 41:     if (pos == 2) {
  3550  002432  0E02               	movlw	2
  3551  002434  1819               	xorwf	ssdDigit@pos^0,w,c
  3552  002436  A4D8               	btfss	status,2,c
  3553  002438  EF20  F012         	goto	u2951
  3554  00243C  EF22  F012         	goto	u2950
  3555  002440                     u2951:
  3556  002440  EF24  F012         	goto	l2920
  3557  002444                     u2950:
  3558  002444                     
  3559                           ;ssd.c: 42:         v2 = val;
  3560  002444  C01A  F0EE         	movff	ssdDigit@val,_v2
  3561  002448                     l2920:
  3562                           
  3563                           ;ssd.c: 44:     if (pos == 3) {
  3564  002448  0E03               	movlw	3
  3565  00244A  1819               	xorwf	ssdDigit@pos^0,w,c
  3566  00244C  A4D8               	btfss	status,2,c
  3567  00244E  EF2B  F012         	goto	u2961
  3568  002452  EF2D  F012         	goto	u2960
  3569  002456                     u2961:
  3570  002456  EF2F  F012         	goto	l250
  3571  00245A                     u2960:
  3572  00245A                     
  3573                           ;ssd.c: 45:         v3 = val;
  3574  00245A  C01A  F0ED         	movff	ssdDigit@val,_v3
  3575  00245E                     l250:
  3576  00245E  0012               	return		;funcret
  3577  002460                     __end_of_ssdDigit:
  3578                           	callstack 0
  3579                           
  3580 ;; *************** function _srand *****************
  3581 ;; Defined at:
  3582 ;;		line 6 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\rand.c"
  3583 ;; Parameters:    Size  Location     Type
  3584 ;;  s               2    8[COMRAM] unsigned int 
  3585 ;; Auto vars:     Size  Location     Type
  3586 ;;		None
  3587 ;; Return value:  Size  Location     Type
  3588 ;;                  1    wreg      void 
  3589 ;; Registers used:
  3590 ;;		wreg, status,2, status,0
  3591 ;; Tracked objects:
  3592 ;;		On entry : 0/0
  3593 ;;		On exit  : 0/0
  3594 ;;		Unchanged: 0/0
  3595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3596 ;;      Params:         2       0       0       0       0       0       0
  3597 ;;      Locals:         0       0       0       0       0       0       0
  3598 ;;      Temps:          4       0       0       0       0       0       0
  3599 ;;      Totals:         6       0       0       0       0       0       0
  3600 ;;Total ram usage:        6 bytes
  3601 ;; Hardware stack levels used: 1
  3602 ;; This function calls:
  3603 ;;		Nothing
  3604 ;; This function is called by:
  3605 ;;		_main
  3606 ;;		_Apostando
  3607 ;; This function uses a non-reentrant model
  3608 ;;
  3609                           
  3610                           	psect	text18
  3611  002A38                     __ptext18:
  3612                           	callstack 0
  3613  002A38                     _srand:
  3614                           	callstack 30
  3615  002A38  0EFF               	movlw	255
  3616  002A3A  6E0B               	movwf	??_srand^0,c
  3617  002A3C  0EFF               	movlw	255
  3618  002A3E  6E0C               	movwf	(??_srand+1)^0,c
  3619  002A40  C009  F00D         	movff	srand@s,??_srand+2
  3620  002A44  C00A  F00E         	movff	srand@s+1,??_srand+3
  3621  002A48  500B               	movf	??_srand^0,w,c
  3622  002A4A  260D               	addwf	(??_srand+2)^0,f,c
  3623  002A4C  500C               	movf	(??_srand+1)^0,w,c
  3624  002A4E  220E               	addwfc	(??_srand+3)^0,f,c
  3625  002A50  C00D  F0F2         	movff	??_srand+2,_seed
  3626  002A54  C00E  F0F3         	movff	??_srand+3,_seed+1
  3627  002A58  0100               	movlb	0	; () banked
  3628  002A5A  6BF4               	clrf	(_seed+2)& (0+255),b
  3629  002A5C  6BF5               	clrf	(_seed+3)& (0+255),b
  3630  002A5E                     
  3631                           ; BSR set to: 0
  3632  002A5E  0012               	return		;funcret
  3633  002A60                     __end_of_srand:
  3634                           	callstack 0
  3635                           
  3636 ;; *************** function _rand *****************
  3637 ;; Defined at:
  3638 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\rand.c"
  3639 ;; Parameters:    Size  Location     Type
  3640 ;;		None
  3641 ;; Auto vars:     Size  Location     Type
  3642 ;;		None
  3643 ;; Return value:  Size  Location     Type
  3644 ;;                  2   12[COMRAM] int 
  3645 ;; Registers used:
  3646 ;;		wreg, status,2, status,0, cstack
  3647 ;; Tracked objects:
  3648 ;;		On entry : 0/0
  3649 ;;		On exit  : 0/0
  3650 ;;		Unchanged: 0/0
  3651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3652 ;;      Params:         2       0       0       0       0       0       0
  3653 ;;      Locals:         0       0       0       0       0       0       0
  3654 ;;      Temps:          4       0       0       0       0       0       0
  3655 ;;      Totals:         6       0       0       0       0       0       0
  3656 ;;Total ram usage:        6 bytes
  3657 ;; Hardware stack levels used: 1
  3658 ;; Hardware stack levels required when called: 1
  3659 ;; This function calls:
  3660 ;;		___lmul
  3661 ;; This function is called by:
  3662 ;;		_Apostando
  3663 ;; This function uses a non-reentrant model
  3664 ;;
  3665                           
  3666                           	psect	text19
  3667  001F64                     __ptext19:
  3668                           	callstack 0
  3669  001F64                     _rand:
  3670                           	callstack 27
  3671  001F64  C0F2  F001         	movff	_seed,___lmul@multiplier
  3672  001F68  C0F3  F002         	movff	_seed+1,___lmul@multiplier+1
  3673  001F6C  C0F4  F003         	movff	_seed+2,___lmul@multiplier+2
  3674  001F70  C0F5  F004         	movff	_seed+3,___lmul@multiplier+3
  3675  001F74  0E2D               	movlw	45
  3676  001F76  6E05               	movwf	___lmul@multiplicand^0,c
  3677  001F78  0E7F               	movlw	127
  3678  001F7A  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  3679  001F7C  0E95               	movlw	149
  3680  001F7E  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  3681  001F80  0E4C               	movlw	76
  3682  001F82  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  3683  001F84  ECE9  F00F         	call	___lmul	;wreg free
  3684  001F88  0E01               	movlw	1
  3685  001F8A  2401               	addwf	?___lmul^0,w,c
  3686  001F8C  0100               	movlb	0	; () banked
  3687  001F8E  6FF2               	movwf	_seed& (0+255),b
  3688  001F90  0E00               	movlw	0
  3689  001F92  2002               	addwfc	(?___lmul+1)^0,w,c
  3690  001F94  6FF3               	movwf	(_seed+1)& (0+255),b
  3691  001F96  0E00               	movlw	0
  3692  001F98  2003               	addwfc	(?___lmul+2)^0,w,c
  3693  001F9A  6FF4               	movwf	(_seed+2)& (0+255),b
  3694  001F9C  0E00               	movlw	0
  3695  001F9E  2004               	addwfc	(?___lmul+3)^0,w,c
  3696  001FA0  6FF5               	movwf	(_seed+3)& (0+255),b
  3697  001FA2                     
  3698                           ; BSR set to: 0
  3699  001FA2  C0F2  F00F         	movff	_seed,??_rand
  3700  001FA6  C0F3  F010         	movff	_seed+1,??_rand+1
  3701  001FAA  C0F4  F011         	movff	_seed+2,??_rand+2
  3702  001FAE  C0F5  F012         	movff	_seed+3,??_rand+3
  3703  001FB2  0E12               	movlw	18
  3704  001FB4  EFE1  F00F         	goto	u3050
  3705  001FB8                     u3055:
  3706  001FB8  90D8               	bcf	status,0,c
  3707  001FBA  3212               	rrcf	(??_rand+3)^0,f,c
  3708  001FBC  3211               	rrcf	(??_rand+2)^0,f,c
  3709  001FBE  3210               	rrcf	(??_rand+1)^0,f,c
  3710  001FC0  320F               	rrcf	??_rand^0,f,c
  3711  001FC2                     u3050:
  3712  001FC2  2EE8               	decfsz	wreg,f,c
  3713  001FC4  EFDC  F00F         	goto	u3055
  3714  001FC8  C00F  F00D         	movff	??_rand,?_rand
  3715  001FCC  C010  F00E         	movff	??_rand+1,?_rand+1
  3716  001FD0                     
  3717                           ; BSR set to: 0
  3718  001FD0  0012               	return		;funcret
  3719  001FD2                     __end_of_rand:
  3720                           	callstack 0
  3721                           
  3722 ;; *************** function ___lmul *****************
  3723 ;; Defined at:
  3724 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul32.c"
  3725 ;; Parameters:    Size  Location     Type
  3726 ;;  multiplier      4    0[COMRAM] unsigned long 
  3727 ;;  multiplicand    4    4[COMRAM] unsigned long 
  3728 ;; Auto vars:     Size  Location     Type
  3729 ;;  product         4    8[COMRAM] unsigned long 
  3730 ;; Return value:  Size  Location     Type
  3731 ;;                  4    0[COMRAM] unsigned long 
  3732 ;; Registers used:
  3733 ;;		wreg, status,2, status,0
  3734 ;; Tracked objects:
  3735 ;;		On entry : 0/0
  3736 ;;		On exit  : 0/0
  3737 ;;		Unchanged: 0/0
  3738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3739 ;;      Params:         8       0       0       0       0       0       0
  3740 ;;      Locals:         4       0       0       0       0       0       0
  3741 ;;      Temps:          0       0       0       0       0       0       0
  3742 ;;      Totals:        12       0       0       0       0       0       0
  3743 ;;Total ram usage:       12 bytes
  3744 ;; Hardware stack levels used: 1
  3745 ;; This function calls:
  3746 ;;		Nothing
  3747 ;; This function is called by:
  3748 ;;		_rand
  3749 ;; This function uses a non-reentrant model
  3750 ;;
  3751                           
  3752                           	psect	text20
  3753  001FD2                     __ptext20:
  3754                           	callstack 0
  3755  001FD2                     ___lmul:
  3756                           	callstack 27
  3757  001FD2  0E00               	movlw	0
  3758  001FD4  6E09               	movwf	___lmul@product^0,c
  3759  001FD6  0E00               	movlw	0
  3760  001FD8  6E0A               	movwf	(___lmul@product+1)^0,c
  3761  001FDA  0E00               	movlw	0
  3762  001FDC  6E0B               	movwf	(___lmul@product+2)^0,c
  3763  001FDE  0E00               	movlw	0
  3764  001FE0  6E0C               	movwf	(___lmul@product+3)^0,c
  3765  001FE2                     l2890:
  3766  001FE2  A001               	btfss	___lmul@multiplier^0,0,c
  3767  001FE4  EFF6  F00F         	goto	u2901
  3768  001FE8  EFF8  F00F         	goto	u2900
  3769  001FEC                     u2901:
  3770  001FEC  EF00  F010         	goto	l2894
  3771  001FF0                     u2900:
  3772  001FF0  5005               	movf	___lmul@multiplicand^0,w,c
  3773  001FF2  2609               	addwf	___lmul@product^0,f,c
  3774  001FF4  5006               	movf	(___lmul@multiplicand+1)^0,w,c
  3775  001FF6  220A               	addwfc	(___lmul@product+1)^0,f,c
  3776  001FF8  5007               	movf	(___lmul@multiplicand+2)^0,w,c
  3777  001FFA  220B               	addwfc	(___lmul@product+2)^0,f,c
  3778  001FFC  5008               	movf	(___lmul@multiplicand+3)^0,w,c
  3779  001FFE  220C               	addwfc	(___lmul@product+3)^0,f,c
  3780  002000                     l2894:
  3781  002000  90D8               	bcf	status,0,c
  3782  002002  3605               	rlcf	___lmul@multiplicand^0,f,c
  3783  002004  3606               	rlcf	(___lmul@multiplicand+1)^0,f,c
  3784  002006  3607               	rlcf	(___lmul@multiplicand+2)^0,f,c
  3785  002008  3608               	rlcf	(___lmul@multiplicand+3)^0,f,c
  3786  00200A  90D8               	bcf	status,0,c
  3787  00200C  3204               	rrcf	(___lmul@multiplier+3)^0,f,c
  3788  00200E  3203               	rrcf	(___lmul@multiplier+2)^0,f,c
  3789  002010  3202               	rrcf	(___lmul@multiplier+1)^0,f,c
  3790  002012  3201               	rrcf	___lmul@multiplier^0,f,c
  3791  002014  5001               	movf	___lmul@multiplier^0,w,c
  3792  002016  1002               	iorwf	(___lmul@multiplier+1)^0,w,c
  3793  002018  1003               	iorwf	(___lmul@multiplier+2)^0,w,c
  3794  00201A  1004               	iorwf	(___lmul@multiplier+3)^0,w,c
  3795  00201C  A4D8               	btfss	status,2,c
  3796  00201E  EF13  F010         	goto	u2911
  3797  002022  EF15  F010         	goto	u2910
  3798  002026                     u2911:
  3799  002026  EFF1  F00F         	goto	l2890
  3800  00202A                     u2910:
  3801  00202A  C009  F001         	movff	___lmul@product,?___lmul
  3802  00202E  C00A  F002         	movff	___lmul@product+1,?___lmul+1
  3803  002032  C00B  F003         	movff	___lmul@product+2,?___lmul+2
  3804  002036  C00C  F004         	movff	___lmul@product+3,?___lmul+3
  3805  00203A  0012               	return		;funcret
  3806  00203C                     __end_of___lmul:
  3807                           	callstack 0
  3808                           
  3809 ;; *************** function _dsReadData *****************
  3810 ;; Defined at:
  3811 ;;		line 29 in file "ds1307.c"
  3812 ;; Parameters:    Size  Location     Type
  3813 ;;  address         2   13[COMRAM] int 
  3814 ;; Auto vars:     Size  Location     Type
  3815 ;;  result          2   16[COMRAM] int 
  3816 ;; Return value:  Size  Location     Type
  3817 ;;                  2   13[COMRAM] int 
  3818 ;; Registers used:
  3819 ;;		wreg, status,2, status,0, cstack
  3820 ;; Tracked objects:
  3821 ;;		On entry : 0/0
  3822 ;;		On exit  : 0/0
  3823 ;;		Unchanged: 0/0
  3824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3825 ;;      Params:         2       0       0       0       0       0       0
  3826 ;;      Locals:         2       0       0       0       0       0       0
  3827 ;;      Temps:          1       0       0       0       0       0       0
  3828 ;;      Totals:         5       0       0       0       0       0       0
  3829 ;;Total ram usage:        5 bytes
  3830 ;; Hardware stack levels used: 1
  3831 ;; Hardware stack levels required when called: 4
  3832 ;; This function calls:
  3833 ;;		_i2cReadByte
  3834 ;;		_i2cWriteByte
  3835 ;; This function is called by:
  3836 ;;		_Apostando
  3837 ;;		_dsStartClock
  3838 ;; This function uses a non-reentrant model
  3839 ;;
  3840                           
  3841                           	psect	text21
  3842  002646                     __ptext21:
  3843                           	callstack 0
  3844  002646                     _dsReadData:
  3845                           	callstack 24
  3846  002646                     
  3847                           ;ds1307.c: 30:  int result;;ds1307.c: 31:  i2cWriteByte(1,0,(0x68<<1) | 0);
  3848  002646  0E00               	movlw	0
  3849  002648  6E08               	movwf	i2cWriteByte@send_stop^0,c
  3850  00264A  0ED0               	movlw	208
  3851  00264C  6E09               	movwf	i2cWriteByte@byte^0,c
  3852  00264E  0E01               	movlw	1
  3853  002650  EC1D  F011         	call	_i2cWriteByte
  3854                           
  3855                           ;ds1307.c: 32:  i2cWriteByte(0,0,address);
  3856  002654  0E00               	movlw	0
  3857  002656  6E08               	movwf	i2cWriteByte@send_stop^0,c
  3858  002658  C00E  F009         	movff	dsReadData@address,i2cWriteByte@byte
  3859  00265C  0E00               	movlw	0
  3860  00265E  EC1D  F011         	call	_i2cWriteByte
  3861                           
  3862                           ;ds1307.c: 33:  i2cWriteByte(1,0, (0x68<<1) | 1);
  3863  002662  0E00               	movlw	0
  3864  002664  6E08               	movwf	i2cWriteByte@send_stop^0,c
  3865  002666  0ED1               	movlw	209
  3866  002668  6E09               	movwf	i2cWriteByte@byte^0,c
  3867  00266A  0E01               	movlw	1
  3868  00266C  EC1D  F011         	call	_i2cWriteByte
  3869                           
  3870                           ;ds1307.c: 34:  result = i2cReadByte(1,1 );
  3871  002670  0E01               	movlw	1
  3872  002672  6E08               	movwf	i2cReadByte@send_stop^0,c
  3873  002674  0E01               	movlw	1
  3874  002676  EC87  F012         	call	_i2cReadByte
  3875  00267A  6E10               	movwf	??_dsReadData^0,c
  3876  00267C  5010               	movf	??_dsReadData^0,w,c
  3877  00267E  6E11               	movwf	dsReadData@result^0,c
  3878  002680  6A12               	clrf	(dsReadData@result+1)^0,c
  3879  002682                     
  3880                           ;ds1307.c: 35:  return result;
  3881  002682  C011  F00E         	movff	dsReadData@result,?_dsReadData
  3882  002686  C012  F00F         	movff	dsReadData@result+1,?_dsReadData+1
  3883  00268A  0012               	return		;funcret
  3884  00268C                     __end_of_dsReadData:
  3885                           	callstack 0
  3886                           
  3887 ;; *************** function _i2cWriteByte *****************
  3888 ;; Defined at:
  3889 ;;		line 113 in file "i2c.c"
  3890 ;; Parameters:    Size  Location     Type
  3891 ;;  send_start      1    wreg     unsigned char 
  3892 ;;  send_stop       1    7[COMRAM] unsigned char 
  3893 ;;  byte            1    8[COMRAM] unsigned char 
  3894 ;; Auto vars:     Size  Location     Type
  3895 ;;  send_start      1    9[COMRAM] unsigned char 
  3896 ;;  bit             1   10[COMRAM] unsigned char 
  3897 ;;  nack            1    0        unsigned char 
  3898 ;; Return value:  Size  Location     Type
  3899 ;;                  1    wreg      unsigned char 
  3900 ;; Registers used:
  3901 ;;		wreg, status,2, status,0, cstack
  3902 ;; Tracked objects:
  3903 ;;		On entry : 0/0
  3904 ;;		On exit  : 0/0
  3905 ;;		Unchanged: 0/0
  3906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3907 ;;      Params:         2       0       0       0       0       0       0
  3908 ;;      Locals:         2       0       0       0       0       0       0
  3909 ;;      Temps:          0       0       0       0       0       0       0
  3910 ;;      Totals:         4       0       0       0       0       0       0
  3911 ;;Total ram usage:        4 bytes
  3912 ;; Hardware stack levels used: 1
  3913 ;; Hardware stack levels required when called: 3
  3914 ;; This function calls:
  3915 ;;		_i2c_read_bit
  3916 ;;		_i2c_start
  3917 ;;		_i2c_stop
  3918 ;;		_i2c_write_bit
  3919 ;; This function is called by:
  3920 ;;		_dsReadData
  3921 ;;		_dsWriteData
  3922 ;; This function uses a non-reentrant model
  3923 ;;
  3924                           
  3925                           	psect	text22
  3926  00223A                     __ptext22:
  3927                           	callstack 0
  3928  00223A                     _i2cWriteByte:
  3929                           	callstack 24
  3930                           
  3931                           ;incstack = 0
  3932                           ;i2cWriteByte@send_start stored from wreg
  3933  00223A  6E0A               	movwf	i2cWriteByte@send_start^0,c
  3934  00223C                     
  3935                           ;i2c.c: 114:  unsigned char bit;;i2c.c: 115:  unsigned char nack;;i2c.c: 116:  if (send_
      +                          start) {
  3936  00223C  500A               	movf	i2cWriteByte@send_start^0,w,c
  3937  00223E  B4D8               	btfsc	status,2,c
  3938  002240  EF24  F011         	goto	u2831
  3939  002244  EF26  F011         	goto	u2830
  3940  002248                     u2831:
  3941  002248  EF28  F011         	goto	l2844
  3942  00224C                     u2830:
  3943  00224C                     
  3944                           ;i2c.c: 117:   i2c_start();
  3945  00224C  ECFE  F012         	call	_i2c_start	;wreg free
  3946  002250                     l2844:
  3947                           
  3948                           ;i2c.c: 119:  for (bit = 0; bit < 8; bit++) {
  3949  002250  0E00               	movlw	0
  3950  002252  6E0B               	movwf	i2cWriteByte@bit^0,c
  3951  002254                     l2850:
  3952                           
  3953                           ;i2c.c: 120:   i2c_write_bit((byte & 0x80) != 0);
  3954  002254  BE09               	btfsc	i2cWriteByte@byte^0,7,c
  3955  002256  EF2F  F011         	goto	u2841
  3956  00225A  EF32  F011         	goto	u2840
  3957  00225E                     u2841:
  3958  00225E  0E01               	movlw	1
  3959  002260  EF33  F011         	goto	u2850
  3960  002264                     u2840:
  3961  002264  0E00               	movlw	0
  3962  002266                     u2850:
  3963  002266  EC30  F012         	call	_i2c_write_bit
  3964  00226A                     
  3965                           ;i2c.c: 121:   byte <<= 1;
  3966  00226A  90D8               	bcf	status,0,c
  3967  00226C  3609               	rlcf	i2cWriteByte@byte^0,f,c
  3968  00226E                     
  3969                           ;i2c.c: 122:  }
  3970  00226E  2A0B               	incf	i2cWriteByte@bit^0,f,c
  3971  002270  0E07               	movlw	7
  3972  002272  640B               	cpfsgt	i2cWriteByte@bit^0,c
  3973  002274  EF3E  F011         	goto	u2861
  3974  002278  EF40  F011         	goto	u2860
  3975  00227C                     u2861:
  3976  00227C  EF2A  F011         	goto	l2850
  3977  002280                     u2860:
  3978  002280  EC51  F014         	call	_i2c_read_bit	;wreg free
  3979  002284                     
  3980                           ;i2c.c: 124:  if (send_stop) {
  3981  002284  5008               	movf	i2cWriteByte@send_stop^0,w,c
  3982  002286  B4D8               	btfsc	status,2,c
  3983  002288  EF48  F011         	goto	u2871
  3984  00228C  EF4A  F011         	goto	u2870
  3985  002290                     u2871:
  3986  002290  EF4C  F011         	goto	l482
  3987  002294                     u2870:
  3988  002294                     
  3989                           ;i2c.c: 125:   i2c_stop();
  3990  002294  EC6A  F014         	call	_i2c_stop	;wreg free
  3991  002298                     l482:
  3992  002298  0012               	return		;funcret
  3993  00229A                     __end_of_i2cWriteByte:
  3994                           	callstack 0
  3995                           
  3996 ;; *************** function _i2c_start *****************
  3997 ;; Defined at:
  3998 ;;		line 52 in file "i2c.c"
  3999 ;; Parameters:    Size  Location     Type
  4000 ;;		None
  4001 ;; Auto vars:     Size  Location     Type
  4002 ;;		None
  4003 ;; Return value:  Size  Location     Type
  4004 ;;                  1    wreg      void 
  4005 ;; Registers used:
  4006 ;;		wreg, status,2, status,0, cstack
  4007 ;; Tracked objects:
  4008 ;;		On entry : 0/0
  4009 ;;		On exit  : 0/0
  4010 ;;		Unchanged: 0/0
  4011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4012 ;;      Params:         0       0       0       0       0       0       0
  4013 ;;      Locals:         0       0       0       0       0       0       0
  4014 ;;      Temps:          0       0       0       0       0       0       0
  4015 ;;      Totals:         0       0       0       0       0       0       0
  4016 ;;Total ram usage:        0 bytes
  4017 ;; Hardware stack levels used: 1
  4018 ;; Hardware stack levels required when called: 2
  4019 ;; This function calls:
  4020 ;;		_I2C_delay
  4021 ;;		_clear_SCL
  4022 ;;		_clear_SDA
  4023 ;;		_read_SCL
  4024 ;;		_read_SDA
  4025 ;; This function is called by:
  4026 ;;		_i2cWriteByte
  4027 ;; This function uses a non-reentrant model
  4028 ;;
  4029                           
  4030                           	psect	text23
  4031  0025FC                     __ptext23:
  4032                           	callstack 0
  4033  0025FC                     _i2c_start:
  4034                           	callstack 24
  4035  0025FC                     
  4036                           ;i2c.c: 54:  if (started) {
  4037  0025FC  0100               	movlb	0	; () banked
  4038  0025FE  51EB               	movf	_started& (0+255),w,b
  4039  002600  B4D8               	btfsc	status,2,c
  4040  002602  EF05  F013         	goto	u2741
  4041  002606  EF07  F013         	goto	u2740
  4042  00260A                     u2741:
  4043  00260A  EF17  F013         	goto	l2756
  4044  00260E                     u2740:
  4045  00260E                     
  4046                           ; BSR set to: 0
  4047                           ;i2c.c: 55:   read_SDA();
  4048  00260E  ECE6  F013         	call	_read_SDA	;wreg free
  4049  002612                     
  4050                           ;i2c.c: 56:   I2C_delay();
  4051  002612  EC79  F015         	call	_I2C_delay	;wreg free
  4052  002616                     l2752:
  4053  002616  EC02  F014         	call	_read_SCL	;wreg free
  4054  00261A  0900               	iorlw	0
  4055  00261C  B4D8               	btfsc	status,2,c
  4056  00261E  EF13  F013         	goto	u2751
  4057  002622  EF15  F013         	goto	u2750
  4058  002626                     u2751:
  4059  002626  EF0B  F013         	goto	l2752
  4060  00262A                     u2750:
  4061  00262A                     
  4062                           ;i2c.c: 59:   I2C_delay();
  4063  00262A  EC79  F015         	call	_I2C_delay	;wreg free
  4064  00262E                     l2756:
  4065                           
  4066                           ;i2c.c: 61:  if (read_SDA() == 0) {
  4067  00262E  ECE6  F013         	call	_read_SDA	;wreg free
  4068  002632                     
  4069                           ;i2c.c: 65:  clear_SDA();
  4070  002632  ECC8  F014         	call	_clear_SDA	;wreg free
  4071  002636                     
  4072                           ;i2c.c: 66:  I2C_delay();
  4073  002636  EC79  F015         	call	_I2C_delay	;wreg free
  4074  00263A                     
  4075                           ;i2c.c: 67:  clear_SCL();
  4076  00263A  ECDD  F014         	call	_clear_SCL	;wreg free
  4077  00263E                     
  4078                           ;i2c.c: 68:  started = 1;
  4079  00263E  0E01               	movlw	1
  4080  002640  0100               	movlb	0	; () banked
  4081  002642  6FEB               	movwf	_started& (0+255),b
  4082  002644                     
  4083                           ; BSR set to: 0
  4084  002644  0012               	return		;funcret
  4085  002646                     __end_of_i2c_start:
  4086                           	callstack 0
  4087                           
  4088 ;; *************** function _i2cReadByte *****************
  4089 ;; Defined at:
  4090 ;;		line 131 in file "i2c.c"
  4091 ;; Parameters:    Size  Location     Type
  4092 ;;  nack            1    wreg     unsigned char 
  4093 ;;  send_stop       1    7[COMRAM] unsigned char 
  4094 ;; Auto vars:     Size  Location     Type
  4095 ;;  nack            1    9[COMRAM] unsigned char 
  4096 ;;  bit             2   10[COMRAM] unsigned int 
  4097 ;;  byte            1   12[COMRAM] unsigned char 
  4098 ;; Return value:  Size  Location     Type
  4099 ;;                  1    wreg      unsigned char 
  4100 ;; Registers used:
  4101 ;;		wreg, status,2, status,0, cstack
  4102 ;; Tracked objects:
  4103 ;;		On entry : 0/0
  4104 ;;		On exit  : 0/0
  4105 ;;		Unchanged: 0/0
  4106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4107 ;;      Params:         1       0       0       0       0       0       0
  4108 ;;      Locals:         4       0       0       0       0       0       0
  4109 ;;      Temps:          1       0       0       0       0       0       0
  4110 ;;      Totals:         6       0       0       0       0       0       0
  4111 ;;Total ram usage:        6 bytes
  4112 ;; Hardware stack levels used: 1
  4113 ;; Hardware stack levels required when called: 3
  4114 ;; This function calls:
  4115 ;;		_i2c_read_bit
  4116 ;;		_i2c_stop
  4117 ;;		_i2c_write_bit
  4118 ;; This function is called by:
  4119 ;;		_dsReadData
  4120 ;; This function uses a non-reentrant model
  4121 ;;
  4122                           
  4123                           	psect	text24
  4124  00250E                     __ptext24:
  4125                           	callstack 0
  4126  00250E                     _i2cReadByte:
  4127                           	callstack 24
  4128                           
  4129                           ; BSR set to: 0
  4130                           ;incstack = 0
  4131                           ;i2cReadByte@nack stored from wreg
  4132  00250E  6E0A               	movwf	i2cReadByte@nack^0,c
  4133  002510                     
  4134                           ;i2c.c: 132:  unsigned char byte = 0;
  4135  002510  0E00               	movlw	0
  4136  002512  6E0D               	movwf	i2cReadByte@byte^0,c
  4137                           
  4138                           ;i2c.c: 133:  unsigned bit;;i2c.c: 134:  for (bit = 0; bit < 8; bit++) {
  4139  002514  0E00               	movlw	0
  4140  002516  6E0C               	movwf	(i2cReadByte@bit+1)^0,c
  4141  002518  0E00               	movlw	0
  4142  00251A  6E0B               	movwf	i2cReadByte@bit^0,c
  4143  00251C                     l2872:
  4144                           
  4145                           ;i2c.c: 135:   byte = (byte << 1) | i2c_read_bit();
  4146  00251C  EC51  F014         	call	_i2c_read_bit	;wreg free
  4147  002520  6E09               	movwf	??_i2cReadByte^0,c
  4148  002522  500D               	movf	i2cReadByte@byte^0,w,c
  4149  002524  240D               	addwf	i2cReadByte@byte^0,w,c
  4150  002526  1009               	iorwf	??_i2cReadByte^0,w,c
  4151  002528  6E0D               	movwf	i2cReadByte@byte^0,c
  4152  00252A                     
  4153                           ;i2c.c: 136:  }
  4154  00252A  4A0B               	infsnz	i2cReadByte@bit^0,f,c
  4155  00252C  2A0C               	incf	(i2cReadByte@bit+1)^0,f,c
  4156  00252E  500C               	movf	(i2cReadByte@bit+1)^0,w,c
  4157  002530  E109               	bnz	u2880
  4158  002532  0E08               	movlw	8
  4159  002534  5C0B               	subwf	i2cReadByte@bit^0,w,c
  4160  002536  A0D8               	btfss	status,0,c
  4161  002538  EFA0  F012         	goto	u2881
  4162  00253C  EFA2  F012         	goto	u2880
  4163  002540                     u2881:
  4164  002540  EF8E  F012         	goto	l2872
  4165  002544                     u2880:
  4166  002544                     
  4167                           ;i2c.c: 137:  i2c_write_bit(nack);
  4168  002544  500A               	movf	i2cReadByte@nack^0,w,c
  4169  002546  EC30  F012         	call	_i2c_write_bit
  4170  00254A                     
  4171                           ;i2c.c: 138:  if (send_stop) {
  4172  00254A  5008               	movf	i2cReadByte@send_stop^0,w,c
  4173  00254C  B4D8               	btfsc	status,2,c
  4174  00254E  EFAB  F012         	goto	u2891
  4175  002552  EFAD  F012         	goto	u2890
  4176  002556                     u2891:
  4177  002556  EFAF  F012         	goto	l2884
  4178  00255A                     u2890:
  4179  00255A                     
  4180                           ;i2c.c: 139:   i2c_stop();
  4181  00255A  EC6A  F014         	call	_i2c_stop	;wreg free
  4182  00255E                     l2884:
  4183                           
  4184                           ;i2c.c: 141:  return byte;
  4185  00255E  500D               	movf	i2cReadByte@byte^0,w,c
  4186  002560  0012               	return		;funcret
  4187  002562                     __end_of_i2cReadByte:
  4188                           	callstack 0
  4189                           
  4190 ;; *************** function _i2c_write_bit *****************
  4191 ;; Defined at:
  4192 ;;		line 84 in file "i2c.c"
  4193 ;; Parameters:    Size  Location     Type
  4194 ;;  bit             1    wreg     unsigned char 
  4195 ;; Auto vars:     Size  Location     Type
  4196 ;;  bit             1    6[COMRAM] unsigned char 
  4197 ;; Return value:  Size  Location     Type
  4198 ;;                  1    wreg      void 
  4199 ;; Registers used:
  4200 ;;		wreg, status,2, status,0, cstack
  4201 ;; Tracked objects:
  4202 ;;		On entry : 0/0
  4203 ;;		On exit  : 0/0
  4204 ;;		Unchanged: 0/0
  4205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4206 ;;      Params:         0       0       0       0       0       0       0
  4207 ;;      Locals:         1       0       0       0       0       0       0
  4208 ;;      Temps:          0       0       0       0       0       0       0
  4209 ;;      Totals:         1       0       0       0       0       0       0
  4210 ;;Total ram usage:        1 bytes
  4211 ;; Hardware stack levels used: 1
  4212 ;; Hardware stack levels required when called: 2
  4213 ;; This function calls:
  4214 ;;		_I2C_delay
  4215 ;;		_clear_SCL
  4216 ;;		_clear_SDA
  4217 ;;		_read_SCL
  4218 ;;		_read_SDA
  4219 ;; This function is called by:
  4220 ;;		_i2cWriteByte
  4221 ;;		_i2cReadByte
  4222 ;; This function uses a non-reentrant model
  4223 ;;
  4224                           
  4225                           	psect	text25
  4226  002460                     __ptext25:
  4227                           	callstack 0
  4228  002460                     _i2c_write_bit:
  4229                           	callstack 24
  4230                           
  4231                           ;incstack = 0
  4232                           ;i2c_write_bit@bit stored from wreg
  4233  002460  6E07               	movwf	i2c_write_bit@bit^0,c
  4234  002462                     
  4235                           ;i2c.c: 85:  if (bit) {
  4236  002462  5007               	movf	i2c_write_bit@bit^0,w,c
  4237  002464  B4D8               	btfsc	status,2,c
  4238  002466  EF37  F012         	goto	u2771
  4239  00246A  EF39  F012         	goto	u2770
  4240  00246E                     u2771:
  4241  00246E  EF3D  F012         	goto	l2784
  4242  002472                     u2770:
  4243  002472                     
  4244                           ;i2c.c: 86:   read_SDA();
  4245  002472  ECE6  F013         	call	_read_SDA	;wreg free
  4246                           
  4247                           ;i2c.c: 87:  } else {
  4248  002476  EF3F  F012         	goto	l2786
  4249  00247A                     l2784:
  4250                           
  4251                           ;i2c.c: 88:   clear_SDA();
  4252  00247A  ECC8  F014         	call	_clear_SDA	;wreg free
  4253  00247E                     l2786:
  4254                           
  4255                           ;i2c.c: 90:  I2C_delay();
  4256  00247E  EC79  F015         	call	_I2C_delay	;wreg free
  4257  002482                     l2788:
  4258  002482  EC02  F014         	call	_read_SCL	;wreg free
  4259  002486  0900               	iorlw	0
  4260  002488  B4D8               	btfsc	status,2,c
  4261  00248A  EF49  F012         	goto	u2781
  4262  00248E  EF4B  F012         	goto	u2780
  4263  002492                     u2781:
  4264  002492  EF41  F012         	goto	l2788
  4265  002496                     u2780:
  4266  002496                     
  4267                           ;i2c.c: 92:  if (bit && read_SDA() == 0) {
  4268  002496  5007               	movf	i2c_write_bit@bit^0,w,c
  4269  002498  B4D8               	btfsc	status,2,c
  4270  00249A  EF51  F012         	goto	u2791
  4271  00249E  EF53  F012         	goto	u2790
  4272  0024A2                     u2791:
  4273  0024A2  EF55  F012         	goto	l2794
  4274  0024A6                     u2790:
  4275  0024A6  ECE6  F013         	call	_read_SDA	;wreg free
  4276  0024AA                     l2794:
  4277                           
  4278                           ;i2c.c: 95:  I2C_delay();
  4279  0024AA  EC79  F015         	call	_I2C_delay	;wreg free
  4280  0024AE                     
  4281                           ;i2c.c: 96:  clear_SCL();
  4282  0024AE  ECDD  F014         	call	_clear_SCL	;wreg free
  4283  0024B2                     
  4284                           ;i2c.c: 97:  I2C_delay();
  4285  0024B2  EC79  F015         	call	_I2C_delay	;wreg free
  4286  0024B6  0012               	return		;funcret
  4287  0024B8                     __end_of_i2c_write_bit:
  4288                           	callstack 0
  4289                           
  4290 ;; *************** function _i2c_stop *****************
  4291 ;; Defined at:
  4292 ;;		line 71 in file "i2c.c"
  4293 ;; Parameters:    Size  Location     Type
  4294 ;;		None
  4295 ;; Auto vars:     Size  Location     Type
  4296 ;;		None
  4297 ;; Return value:  Size  Location     Type
  4298 ;;                  1    wreg      void 
  4299 ;; Registers used:
  4300 ;;		wreg, status,2, status,0, cstack
  4301 ;; Tracked objects:
  4302 ;;		On entry : 0/0
  4303 ;;		On exit  : 0/0
  4304 ;;		Unchanged: 0/0
  4305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4306 ;;      Params:         0       0       0       0       0       0       0
  4307 ;;      Locals:         0       0       0       0       0       0       0
  4308 ;;      Temps:          0       0       0       0       0       0       0
  4309 ;;      Totals:         0       0       0       0       0       0       0
  4310 ;;Total ram usage:        0 bytes
  4311 ;; Hardware stack levels used: 1
  4312 ;; Hardware stack levels required when called: 2
  4313 ;; This function calls:
  4314 ;;		_I2C_delay
  4315 ;;		_clear_SDA
  4316 ;;		_read_SCL
  4317 ;;		_read_SDA
  4318 ;; This function is called by:
  4319 ;;		_i2cWriteByte
  4320 ;;		_i2cReadByte
  4321 ;; This function uses a non-reentrant model
  4322 ;;
  4323                           
  4324                           	psect	text26
  4325  0028D4                     __ptext26:
  4326                           	callstack 0
  4327  0028D4                     _i2c_stop:
  4328                           	callstack 24
  4329  0028D4                     
  4330                           ;i2c.c: 73:  clear_SDA();
  4331  0028D4  ECC8  F014         	call	_clear_SDA	;wreg free
  4332  0028D8                     
  4333                           ;i2c.c: 74:  I2C_delay();
  4334  0028D8  EC79  F015         	call	_I2C_delay	;wreg free
  4335  0028DC                     l2770:
  4336  0028DC  EC02  F014         	call	_read_SCL	;wreg free
  4337  0028E0  0900               	iorlw	0
  4338  0028E2  B4D8               	btfsc	status,2,c
  4339  0028E4  EF76  F014         	goto	u2761
  4340  0028E8  EF78  F014         	goto	u2760
  4341  0028EC                     u2761:
  4342  0028EC  EF6E  F014         	goto	l2770
  4343  0028F0                     u2760:
  4344  0028F0                     
  4345                           ;i2c.c: 76:  I2C_delay();
  4346  0028F0  EC79  F015         	call	_I2C_delay	;wreg free
  4347  0028F4                     
  4348                           ;i2c.c: 77:  if (read_SDA() == 0) {
  4349  0028F4  ECE6  F013         	call	_read_SDA	;wreg free
  4350  0028F8                     
  4351                           ;i2c.c: 80:  I2C_delay();
  4352  0028F8  EC79  F015         	call	_I2C_delay	;wreg free
  4353  0028FC                     
  4354                           ;i2c.c: 81:  started = 0;
  4355  0028FC  0E00               	movlw	0
  4356  0028FE  0100               	movlb	0	; () banked
  4357  002900  6FEB               	movwf	_started& (0+255),b
  4358  002902                     
  4359                           ; BSR set to: 0
  4360  002902  0012               	return		;funcret
  4361  002904                     __end_of_i2c_stop:
  4362                           	callstack 0
  4363                           
  4364 ;; *************** function _clear_SDA *****************
  4365 ;; Defined at:
  4366 ;;		line 45 in file "i2c.c"
  4367 ;; Parameters:    Size  Location     Type
  4368 ;;		None
  4369 ;; Auto vars:     Size  Location     Type
  4370 ;;		None
  4371 ;; Return value:  Size  Location     Type
  4372 ;;                  1    wreg      void 
  4373 ;; Registers used:
  4374 ;;		wreg, status,2, status,0, cstack
  4375 ;; Tracked objects:
  4376 ;;		On entry : 0/0
  4377 ;;		On exit  : 0/0
  4378 ;;		Unchanged: 0/0
  4379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4380 ;;      Params:         0       0       0       0       0       0       0
  4381 ;;      Locals:         0       0       0       0       0       0       0
  4382 ;;      Temps:          0       0       0       0       0       0       0
  4383 ;;      Totals:         0       0       0       0       0       0       0
  4384 ;;Total ram usage:        0 bytes
  4385 ;; Hardware stack levels used: 1
  4386 ;; Hardware stack levels required when called: 1
  4387 ;; This function calls:
  4388 ;;		_digitalWrite
  4389 ;;		_pinMode
  4390 ;; This function is called by:
  4391 ;;		_i2c_start
  4392 ;;		_i2c_stop
  4393 ;;		_i2c_write_bit
  4394 ;; This function uses a non-reentrant model
  4395 ;;
  4396                           
  4397                           	psect	text27
  4398  002990                     __ptext27:
  4399                           	callstack 0
  4400  002990                     _clear_SDA:
  4401                           	callstack 24
  4402  002990                     
  4403                           ;i2c.c: 47:  pinMode(PIN_B4,0);
  4404  002990  0E00               	movlw	0
  4405  002992  6E02               	movwf	(pinMode@pin+1)^0,c
  4406  002994  0E0C               	movlw	12
  4407  002996  6E01               	movwf	pinMode@pin^0,c
  4408  002998  0E00               	movlw	0
  4409  00299A  6E04               	movwf	(pinMode@type+1)^0,c
  4410  00299C  0E00               	movlw	0
  4411  00299E  6E03               	movwf	pinMode@type^0,c
  4412  0029A0  EC9C  F007         	call	_pinMode	;wreg free
  4413                           
  4414                           ;i2c.c: 48:  digitalWrite(PIN_B4,0);
  4415  0029A4  0E00               	movlw	0
  4416  0029A6  6E02               	movwf	(digitalWrite@pin+1)^0,c
  4417  0029A8  0E0C               	movlw	12
  4418  0029AA  6E01               	movwf	digitalWrite@pin^0,c
  4419  0029AC  0E00               	movlw	0
  4420  0029AE  6E04               	movwf	(digitalWrite@value+1)^0,c
  4421  0029B0  0E00               	movlw	0
  4422  0029B2  6E03               	movwf	digitalWrite@value^0,c
  4423  0029B4  ECC3  F008         	call	_digitalWrite	;wreg free
  4424  0029B8  0012               	return		;funcret
  4425  0029BA                     __end_of_clear_SDA:
  4426                           	callstack 0
  4427                           
  4428 ;; *************** function _i2c_read_bit *****************
  4429 ;; Defined at:
  4430 ;;		line 100 in file "i2c.c"
  4431 ;; Parameters:    Size  Location     Type
  4432 ;;		None
  4433 ;; Auto vars:     Size  Location     Type
  4434 ;;  bit             1    6[COMRAM] unsigned char 
  4435 ;; Return value:  Size  Location     Type
  4436 ;;                  1    wreg      unsigned char 
  4437 ;; Registers used:
  4438 ;;		wreg, status,2, status,0, cstack
  4439 ;; Tracked objects:
  4440 ;;		On entry : 0/0
  4441 ;;		On exit  : 0/0
  4442 ;;		Unchanged: 0/0
  4443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4444 ;;      Params:         0       0       0       0       0       0       0
  4445 ;;      Locals:         1       0       0       0       0       0       0
  4446 ;;      Temps:          0       0       0       0       0       0       0
  4447 ;;      Totals:         1       0       0       0       0       0       0
  4448 ;;Total ram usage:        1 bytes
  4449 ;; Hardware stack levels used: 1
  4450 ;; Hardware stack levels required when called: 2
  4451 ;; This function calls:
  4452 ;;		_I2C_delay
  4453 ;;		_clear_SCL
  4454 ;;		_read_SCL
  4455 ;;		_read_SDA
  4456 ;; This function is called by:
  4457 ;;		_i2cWriteByte
  4458 ;;		_i2cReadByte
  4459 ;; This function uses a non-reentrant model
  4460 ;;
  4461                           
  4462                           	psect	text28
  4463  0028A2                     __ptext28:
  4464                           	callstack 0
  4465  0028A2                     _i2c_read_bit:
  4466                           	callstack 24
  4467  0028A2                     
  4468                           ;i2c.c: 101:  unsigned char bit;;i2c.c: 102:  read_SDA();
  4469  0028A2  ECE6  F013         	call	_read_SDA	;wreg free
  4470  0028A6                     
  4471                           ;i2c.c: 103:  I2C_delay();
  4472  0028A6  EC79  F015         	call	_I2C_delay	;wreg free
  4473  0028AA                     l2804:
  4474  0028AA  EC02  F014         	call	_read_SCL	;wreg free
  4475  0028AE  0900               	iorlw	0
  4476  0028B0  B4D8               	btfsc	status,2,c
  4477  0028B2  EF5D  F014         	goto	u2801
  4478  0028B6  EF5F  F014         	goto	u2800
  4479  0028BA                     u2801:
  4480  0028BA  EF55  F014         	goto	l2804
  4481  0028BE                     u2800:
  4482  0028BE                     
  4483                           ;i2c.c: 105:  bit = read_SDA();
  4484  0028BE  ECE6  F013         	call	_read_SDA	;wreg free
  4485  0028C2  6E07               	movwf	i2c_read_bit@bit^0,c
  4486  0028C4                     
  4487                           ;i2c.c: 106:  I2C_delay();
  4488  0028C4  EC79  F015         	call	_I2C_delay	;wreg free
  4489  0028C8                     
  4490                           ;i2c.c: 107:  clear_SCL();
  4491  0028C8  ECDD  F014         	call	_clear_SCL	;wreg free
  4492                           
  4493                           ;i2c.c: 108:  I2C_delay();
  4494  0028CC  EC79  F015         	call	_I2C_delay	;wreg free
  4495  0028D0                     
  4496                           ;i2c.c: 109:  return bit;
  4497  0028D0  5007               	movf	i2c_read_bit@bit^0,w,c
  4498  0028D2  0012               	return		;funcret
  4499  0028D4                     __end_of_i2c_read_bit:
  4500                           	callstack 0
  4501                           
  4502 ;; *************** function _read_SDA *****************
  4503 ;; Defined at:
  4504 ;;		line 34 in file "i2c.c"
  4505 ;; Parameters:    Size  Location     Type
  4506 ;;		None
  4507 ;; Auto vars:     Size  Location     Type
  4508 ;;		None
  4509 ;; Return value:  Size  Location     Type
  4510 ;;                  1    wreg      unsigned char 
  4511 ;; Registers used:
  4512 ;;		wreg, status,2, status,0, cstack
  4513 ;; Tracked objects:
  4514 ;;		On entry : 0/0
  4515 ;;		On exit  : 0/0
  4516 ;;		Unchanged: 0/0
  4517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4518 ;;      Params:         0       0       0       0       0       0       0
  4519 ;;      Locals:         0       0       0       0       0       0       0
  4520 ;;      Temps:          0       0       0       0       0       0       0
  4521 ;;      Totals:         0       0       0       0       0       0       0
  4522 ;;Total ram usage:        0 bytes
  4523 ;; Hardware stack levels used: 1
  4524 ;; Hardware stack levels required when called: 1
  4525 ;; This function calls:
  4526 ;;		_digitalRead
  4527 ;;		_pinMode
  4528 ;; This function is called by:
  4529 ;;		_i2c_start
  4530 ;;		_i2c_stop
  4531 ;;		_i2c_write_bit
  4532 ;;		_i2c_read_bit
  4533 ;; This function uses a non-reentrant model
  4534 ;;
  4535                           
  4536                           	psect	text29
  4537  0027CC                     __ptext29:
  4538                           	callstack 0
  4539  0027CC                     _read_SDA:
  4540                           	callstack 24
  4541  0027CC                     
  4542                           ;i2c.c: 36:  pinMode(PIN_B4,1);
  4543  0027CC  0E00               	movlw	0
  4544  0027CE  6E02               	movwf	(pinMode@pin+1)^0,c
  4545  0027D0  0E0C               	movlw	12
  4546  0027D2  6E01               	movwf	pinMode@pin^0,c
  4547  0027D4  0E00               	movlw	0
  4548  0027D6  6E04               	movwf	(pinMode@type+1)^0,c
  4549  0027D8  0E01               	movlw	1
  4550  0027DA  6E03               	movwf	pinMode@type^0,c
  4551  0027DC  EC9C  F007         	call	_pinMode	;wreg free
  4552                           
  4553                           ;i2c.c: 37:  return !!digitalRead(PIN_B4);
  4554  0027E0  0E00               	movlw	0
  4555  0027E2  6E02               	movwf	(digitalRead@pin+1)^0,c
  4556  0027E4  0E0C               	movlw	12
  4557  0027E6  6E01               	movwf	digitalRead@pin^0,c
  4558  0027E8  ECA5  F00A         	call	_digitalRead	;wreg free
  4559  0027EC  5001               	movf	?_digitalRead^0,w,c
  4560  0027EE  1002               	iorwf	(?_digitalRead+1)^0,w,c
  4561  0027F0  A4D8               	btfss	status,2,c
  4562  0027F2  EFFD  F013         	goto	u2571
  4563  0027F6  EF00  F014         	goto	u2570
  4564  0027FA                     u2571:
  4565  0027FA  0E01               	movlw	1
  4566  0027FC  EF01  F014         	goto	u2580
  4567  002800                     u2570:
  4568  002800  0E00               	movlw	0
  4569  002802                     u2580:
  4570  002802  0012               	return		;funcret
  4571  002804                     __end_of_read_SDA:
  4572                           	callstack 0
  4573                           
  4574 ;; *************** function _read_SCL *****************
  4575 ;; Defined at:
  4576 ;;		line 29 in file "i2c.c"
  4577 ;; Parameters:    Size  Location     Type
  4578 ;;		None
  4579 ;; Auto vars:     Size  Location     Type
  4580 ;;		None
  4581 ;; Return value:  Size  Location     Type
  4582 ;;                  1    wreg      unsigned char 
  4583 ;; Registers used:
  4584 ;;		wreg, status,2, status,0, cstack
  4585 ;; Tracked objects:
  4586 ;;		On entry : 0/0
  4587 ;;		On exit  : 0/0
  4588 ;;		Unchanged: 0/0
  4589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4590 ;;      Params:         0       0       0       0       0       0       0
  4591 ;;      Locals:         0       0       0       0       0       0       0
  4592 ;;      Temps:          0       0       0       0       0       0       0
  4593 ;;      Totals:         0       0       0       0       0       0       0
  4594 ;;Total ram usage:        0 bytes
  4595 ;; Hardware stack levels used: 1
  4596 ;; Hardware stack levels required when called: 1
  4597 ;; This function calls:
  4598 ;;		_digitalRead
  4599 ;;		_pinMode
  4600 ;; This function is called by:
  4601 ;;		_i2c_start
  4602 ;;		_i2c_stop
  4603 ;;		_i2c_write_bit
  4604 ;;		_i2c_read_bit
  4605 ;; This function uses a non-reentrant model
  4606 ;;
  4607                           
  4608                           	psect	text30
  4609  002804                     __ptext30:
  4610                           	callstack 0
  4611  002804                     _read_SCL:
  4612                           	callstack 24
  4613  002804                     
  4614                           ;i2c.c: 31:  pinMode(PIN_B3,1);
  4615  002804  0E00               	movlw	0
  4616  002806  6E02               	movwf	(pinMode@pin+1)^0,c
  4617  002808  0E0B               	movlw	11
  4618  00280A  6E01               	movwf	pinMode@pin^0,c
  4619  00280C  0E00               	movlw	0
  4620  00280E  6E04               	movwf	(pinMode@type+1)^0,c
  4621  002810  0E01               	movlw	1
  4622  002812  6E03               	movwf	pinMode@type^0,c
  4623  002814  EC9C  F007         	call	_pinMode	;wreg free
  4624                           
  4625                           ;i2c.c: 32:  return !!digitalRead(PIN_B3);
  4626  002818  0E00               	movlw	0
  4627  00281A  6E02               	movwf	(digitalRead@pin+1)^0,c
  4628  00281C  0E0B               	movlw	11
  4629  00281E  6E01               	movwf	digitalRead@pin^0,c
  4630  002820  ECA5  F00A         	call	_digitalRead	;wreg free
  4631  002824  5001               	movf	?_digitalRead^0,w,c
  4632  002826  1002               	iorwf	(?_digitalRead+1)^0,w,c
  4633  002828  A4D8               	btfss	status,2,c
  4634  00282A  EF19  F014         	goto	u2551
  4635  00282E  EF1C  F014         	goto	u2550
  4636  002832                     u2551:
  4637  002832  0E01               	movlw	1
  4638  002834  EF1D  F014         	goto	u2560
  4639  002838                     u2550:
  4640  002838  0E00               	movlw	0
  4641  00283A                     u2560:
  4642  00283A  0012               	return		;funcret
  4643  00283C                     __end_of_read_SCL:
  4644                           	callstack 0
  4645                           
  4646 ;; *************** function _digitalRead *****************
  4647 ;; Defined at:
  4648 ;;		line 39 in file "io.c"
  4649 ;; Parameters:    Size  Location     Type
  4650 ;;  pin             2    0[COMRAM] int 
  4651 ;; Auto vars:     Size  Location     Type
  4652 ;;		None
  4653 ;; Return value:  Size  Location     Type
  4654 ;;                  2    0[COMRAM] int 
  4655 ;; Registers used:
  4656 ;;		wreg, status,2, status,0
  4657 ;; Tracked objects:
  4658 ;;		On entry : 0/0
  4659 ;;		On exit  : 0/0
  4660 ;;		Unchanged: 0/0
  4661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4662 ;;      Params:         2       0       0       0       0       0       0
  4663 ;;      Locals:         0       0       0       0       0       0       0
  4664 ;;      Temps:          3       0       0       0       0       0       0
  4665 ;;      Totals:         5       0       0       0       0       0       0
  4666 ;;Total ram usage:        5 bytes
  4667 ;; Hardware stack levels used: 1
  4668 ;; This function calls:
  4669 ;;		Nothing
  4670 ;; This function is called by:
  4671 ;;		_kpDebounce
  4672 ;;		_read_SCL
  4673 ;;		_read_SDA
  4674 ;; This function uses a non-reentrant model
  4675 ;;
  4676                           
  4677                           	psect	text31
  4678  00154A                     __ptext31:
  4679                           	callstack 0
  4680  00154A                     _digitalRead:
  4681                           	callstack 29
  4682  00154A                     
  4683                           ;io.c: 40:     if(pin <8){
  4684  00154A  BE02               	btfsc	(digitalRead@pin+1)^0,7,c
  4685  00154C  EFB3  F00A         	goto	u2240
  4686  001550  5002               	movf	(digitalRead@pin+1)^0,w,c
  4687  001552  E107               	bnz	u2241
  4688  001554  0E08               	movlw	8
  4689  001556  5C01               	subwf	digitalRead@pin^0,w,c
  4690  001558  B0D8               	btfsc	status,0,c
  4691  00155A  EFB1  F00A         	goto	u2241
  4692  00155E  EFB3  F00A         	goto	u2240
  4693  001562                     u2241:
  4694  001562  EFC7  F00A         	goto	l2522
  4695  001566                     u2240:
  4696  001566                     
  4697                           ;io.c: 41:         return ((PORTA) & (1<<(pin)));
  4698  001566  C001  F003         	movff	digitalRead@pin,??_digitalRead
  4699  00156A  0E01               	movlw	1
  4700  00156C  6E04               	movwf	(??_digitalRead+1)^0,c
  4701  00156E  2A03               	incf	??_digitalRead^0,f,c
  4702  001570  EFBC  F00A         	goto	u2254
  4703  001574                     u2255:
  4704  001574  90D8               	bcf	status,0,c
  4705  001576  3604               	rlcf	(??_digitalRead+1)^0,f,c
  4706  001578                     u2254:
  4707  001578  2E03               	decfsz	??_digitalRead^0,f,c
  4708  00157A  EFBA  F00A         	goto	u2255
  4709  00157E  5004               	movf	(??_digitalRead+1)^0,w,c
  4710  001580  1480               	andwf	128,w,c	;volatile
  4711  001582  6E05               	movwf	(??_digitalRead+2)^0,c
  4712  001584  5005               	movf	(??_digitalRead+2)^0,w,c
  4713  001586  6E01               	movwf	?_digitalRead^0,c
  4714  001588  6A02               	clrf	(?_digitalRead+1)^0,c
  4715  00158A  EF59  F00B         	goto	l81
  4716  00158E                     l2522:
  4717  00158E  BE02               	btfsc	(digitalRead@pin+1)^0,7,c
  4718  001590  EFD5  F00A         	goto	u2260
  4719  001594  5002               	movf	(digitalRead@pin+1)^0,w,c
  4720  001596  E107               	bnz	u2261
  4721  001598  0E10               	movlw	16
  4722  00159A  5C01               	subwf	digitalRead@pin^0,w,c
  4723  00159C  B0D8               	btfsc	status,0,c
  4724  00159E  EFD3  F00A         	goto	u2261
  4725  0015A2  EFD5  F00A         	goto	u2260
  4726  0015A6                     u2261:
  4727  0015A6  EFEB  F00A         	goto	l2530
  4728  0015AA                     u2260:
  4729  0015AA                     
  4730                           ;io.c: 43:         return ((PORTB) & (1<<(pin-8)));
  4731  0015AA  C001  F003         	movff	digitalRead@pin,??_digitalRead
  4732  0015AE  0EF8               	movlw	-8
  4733  0015B0  2603               	addwf	??_digitalRead^0,f,c
  4734  0015B2  0E01               	movlw	1
  4735  0015B4  6E04               	movwf	(??_digitalRead+1)^0,c
  4736  0015B6  2A03               	incf	??_digitalRead^0,f,c
  4737  0015B8  EFE0  F00A         	goto	u2274
  4738  0015BC                     u2275:
  4739  0015BC  90D8               	bcf	status,0,c
  4740  0015BE  3604               	rlcf	(??_digitalRead+1)^0,f,c
  4741  0015C0                     u2274:
  4742  0015C0  2E03               	decfsz	??_digitalRead^0,f,c
  4743  0015C2  EFDE  F00A         	goto	u2275
  4744  0015C6  5004               	movf	(??_digitalRead+1)^0,w,c
  4745  0015C8  1481               	andwf	129,w,c	;volatile
  4746  0015CA  6E05               	movwf	(??_digitalRead+2)^0,c
  4747  0015CC  5005               	movf	(??_digitalRead+2)^0,w,c
  4748  0015CE  6E01               	movwf	?_digitalRead^0,c
  4749  0015D0  6A02               	clrf	(?_digitalRead+1)^0,c
  4750  0015D2  EF59  F00B         	goto	l81
  4751  0015D6                     l2530:
  4752  0015D6  BE02               	btfsc	(digitalRead@pin+1)^0,7,c
  4753  0015D8  EFF9  F00A         	goto	u2280
  4754  0015DC  5002               	movf	(digitalRead@pin+1)^0,w,c
  4755  0015DE  E107               	bnz	u2281
  4756  0015E0  0E18               	movlw	24
  4757  0015E2  5C01               	subwf	digitalRead@pin^0,w,c
  4758  0015E4  B0D8               	btfsc	status,0,c
  4759  0015E6  EFF7  F00A         	goto	u2281
  4760  0015EA  EFF9  F00A         	goto	u2280
  4761  0015EE                     u2281:
  4762  0015EE  EF0F  F00B         	goto	l2538
  4763  0015F2                     u2280:
  4764  0015F2                     
  4765                           ;io.c: 45:         return ((PORTC) & (1<<(pin-16)));
  4766  0015F2  C001  F003         	movff	digitalRead@pin,??_digitalRead
  4767  0015F6  0EF0               	movlw	-16
  4768  0015F8  2603               	addwf	??_digitalRead^0,f,c
  4769  0015FA  0E01               	movlw	1
  4770  0015FC  6E04               	movwf	(??_digitalRead+1)^0,c
  4771  0015FE  2A03               	incf	??_digitalRead^0,f,c
  4772  001600  EF04  F00B         	goto	u2294
  4773  001604                     u2295:
  4774  001604  90D8               	bcf	status,0,c
  4775  001606  3604               	rlcf	(??_digitalRead+1)^0,f,c
  4776  001608                     u2294:
  4777  001608  2E03               	decfsz	??_digitalRead^0,f,c
  4778  00160A  EF02  F00B         	goto	u2295
  4779  00160E  5004               	movf	(??_digitalRead+1)^0,w,c
  4780  001610  1482               	andwf	130,w,c	;volatile
  4781  001612  6E05               	movwf	(??_digitalRead+2)^0,c
  4782  001614  5005               	movf	(??_digitalRead+2)^0,w,c
  4783  001616  6E01               	movwf	?_digitalRead^0,c
  4784  001618  6A02               	clrf	(?_digitalRead+1)^0,c
  4785  00161A  EF59  F00B         	goto	l81
  4786  00161E                     l2538:
  4787  00161E  BE02               	btfsc	(digitalRead@pin+1)^0,7,c
  4788  001620  EF1D  F00B         	goto	u2300
  4789  001624  5002               	movf	(digitalRead@pin+1)^0,w,c
  4790  001626  E107               	bnz	u2301
  4791  001628  0E20               	movlw	32
  4792  00162A  5C01               	subwf	digitalRead@pin^0,w,c
  4793  00162C  B0D8               	btfsc	status,0,c
  4794  00162E  EF1B  F00B         	goto	u2301
  4795  001632  EF1D  F00B         	goto	u2300
  4796  001636                     u2301:
  4797  001636  EF33  F00B         	goto	l2546
  4798  00163A                     u2300:
  4799  00163A                     
  4800                           ;io.c: 47:         return ((PORTD) & (1<<(pin-24)));
  4801  00163A  C001  F003         	movff	digitalRead@pin,??_digitalRead
  4802  00163E  0EE8               	movlw	-24
  4803  001640  2603               	addwf	??_digitalRead^0,f,c
  4804  001642  0E01               	movlw	1
  4805  001644  6E04               	movwf	(??_digitalRead+1)^0,c
  4806  001646  2A03               	incf	??_digitalRead^0,f,c
  4807  001648  EF28  F00B         	goto	u2314
  4808  00164C                     u2315:
  4809  00164C  90D8               	bcf	status,0,c
  4810  00164E  3604               	rlcf	(??_digitalRead+1)^0,f,c
  4811  001650                     u2314:
  4812  001650  2E03               	decfsz	??_digitalRead^0,f,c
  4813  001652  EF26  F00B         	goto	u2315
  4814  001656  5004               	movf	(??_digitalRead+1)^0,w,c
  4815  001658  1483               	andwf	131,w,c	;volatile
  4816  00165A  6E05               	movwf	(??_digitalRead+2)^0,c
  4817  00165C  5005               	movf	(??_digitalRead+2)^0,w,c
  4818  00165E  6E01               	movwf	?_digitalRead^0,c
  4819  001660  6A02               	clrf	(?_digitalRead+1)^0,c
  4820  001662  EF59  F00B         	goto	l81
  4821  001666                     l2546:
  4822  001666  BE02               	btfsc	(digitalRead@pin+1)^0,7,c
  4823  001668  EF41  F00B         	goto	u2320
  4824  00166C  5002               	movf	(digitalRead@pin+1)^0,w,c
  4825  00166E  E107               	bnz	u2321
  4826  001670  0E28               	movlw	40
  4827  001672  5C01               	subwf	digitalRead@pin^0,w,c
  4828  001674  B0D8               	btfsc	status,0,c
  4829  001676  EF3F  F00B         	goto	u2321
  4830  00167A  EF41  F00B         	goto	u2320
  4831  00167E                     u2321:
  4832  00167E  EF57  F00B         	goto	l86
  4833  001682                     u2320:
  4834  001682                     
  4835                           ;io.c: 49:         return ((PORTE) & (1<<(pin-32)));
  4836  001682  C001  F003         	movff	digitalRead@pin,??_digitalRead
  4837  001686  0EE0               	movlw	-32
  4838  001688  2603               	addwf	??_digitalRead^0,f,c
  4839  00168A  0E01               	movlw	1
  4840  00168C  6E04               	movwf	(??_digitalRead+1)^0,c
  4841  00168E  2A03               	incf	??_digitalRead^0,f,c
  4842  001690  EF4C  F00B         	goto	u2334
  4843  001694                     u2335:
  4844  001694  90D8               	bcf	status,0,c
  4845  001696  3604               	rlcf	(??_digitalRead+1)^0,f,c
  4846  001698                     u2334:
  4847  001698  2E03               	decfsz	??_digitalRead^0,f,c
  4848  00169A  EF4A  F00B         	goto	u2335
  4849  00169E  5004               	movf	(??_digitalRead+1)^0,w,c
  4850  0016A0  1484               	andwf	132,w,c	;volatile
  4851  0016A2  6E05               	movwf	(??_digitalRead+2)^0,c
  4852  0016A4  5005               	movf	(??_digitalRead+2)^0,w,c
  4853  0016A6  6E01               	movwf	?_digitalRead^0,c
  4854  0016A8  6A02               	clrf	(?_digitalRead+1)^0,c
  4855  0016AA  EF59  F00B         	goto	l81
  4856  0016AE                     l86:
  4857  0016AE                     
  4858                           ;io.c: 51:     return -1;
  4859  0016AE  6801               	setf	?_digitalRead^0,c
  4860  0016B0  6802               	setf	(?_digitalRead+1)^0,c
  4861  0016B2                     l81:
  4862  0016B2  0012               	return		;funcret
  4863  0016B4                     __end_of_digitalRead:
  4864                           	callstack 0
  4865                           
  4866 ;; *************** function _clear_SCL *****************
  4867 ;; Defined at:
  4868 ;;		line 39 in file "i2c.c"
  4869 ;; Parameters:    Size  Location     Type
  4870 ;;		None
  4871 ;; Auto vars:     Size  Location     Type
  4872 ;;		None
  4873 ;; Return value:  Size  Location     Type
  4874 ;;                  1    wreg      void 
  4875 ;; Registers used:
  4876 ;;		wreg, status,2, status,0, cstack
  4877 ;; Tracked objects:
  4878 ;;		On entry : 0/0
  4879 ;;		On exit  : 0/0
  4880 ;;		Unchanged: 0/0
  4881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4882 ;;      Params:         0       0       0       0       0       0       0
  4883 ;;      Locals:         0       0       0       0       0       0       0
  4884 ;;      Temps:          0       0       0       0       0       0       0
  4885 ;;      Totals:         0       0       0       0       0       0       0
  4886 ;;Total ram usage:        0 bytes
  4887 ;; Hardware stack levels used: 1
  4888 ;; Hardware stack levels required when called: 1
  4889 ;; This function calls:
  4890 ;;		_digitalWrite
  4891 ;;		_pinMode
  4892 ;; This function is called by:
  4893 ;;		_i2c_start
  4894 ;;		_i2c_write_bit
  4895 ;;		_i2c_read_bit
  4896 ;; This function uses a non-reentrant model
  4897 ;;
  4898                           
  4899                           	psect	text32
  4900  0029BA                     __ptext32:
  4901                           	callstack 0
  4902  0029BA                     _clear_SCL:
  4903                           	callstack 24
  4904  0029BA                     
  4905                           ;i2c.c: 41:  pinMode(PIN_B3,0);
  4906  0029BA  0E00               	movlw	0
  4907  0029BC  6E02               	movwf	(pinMode@pin+1)^0,c
  4908  0029BE  0E0B               	movlw	11
  4909  0029C0  6E01               	movwf	pinMode@pin^0,c
  4910  0029C2  0E00               	movlw	0
  4911  0029C4  6E04               	movwf	(pinMode@type+1)^0,c
  4912  0029C6  0E00               	movlw	0
  4913  0029C8  6E03               	movwf	pinMode@type^0,c
  4914  0029CA  EC9C  F007         	call	_pinMode	;wreg free
  4915                           
  4916                           ;i2c.c: 42:  digitalWrite(PIN_B3,0);
  4917  0029CE  0E00               	movlw	0
  4918  0029D0  6E02               	movwf	(digitalWrite@pin+1)^0,c
  4919  0029D2  0E0B               	movlw	11
  4920  0029D4  6E01               	movwf	digitalWrite@pin^0,c
  4921  0029D6  0E00               	movlw	0
  4922  0029D8  6E04               	movwf	(digitalWrite@value+1)^0,c
  4923  0029DA  0E00               	movlw	0
  4924  0029DC  6E03               	movwf	digitalWrite@value^0,c
  4925  0029DE  ECC3  F008         	call	_digitalWrite	;wreg free
  4926  0029E2  0012               	return		;funcret
  4927  0029E4                     __end_of_clear_SCL:
  4928                           	callstack 0
  4929                           
  4930 ;; *************** function _pinMode *****************
  4931 ;; Defined at:
  4932 ;;		line 54 in file "io.c"
  4933 ;; Parameters:    Size  Location     Type
  4934 ;;  pin             2    0[COMRAM] int 
  4935 ;;  type            2    2[COMRAM] int 
  4936 ;; Auto vars:     Size  Location     Type
  4937 ;;		None
  4938 ;; Return value:  Size  Location     Type
  4939 ;;                  1    wreg      void 
  4940 ;; Registers used:
  4941 ;;		wreg, status,2, status,0
  4942 ;; Tracked objects:
  4943 ;;		On entry : 0/0
  4944 ;;		On exit  : 0/0
  4945 ;;		Unchanged: 0/0
  4946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4947 ;;      Params:         4       0       0       0       0       0       0
  4948 ;;      Locals:         0       0       0       0       0       0       0
  4949 ;;      Temps:          2       0       0       0       0       0       0
  4950 ;;      Totals:         6       0       0       0       0       0       0
  4951 ;;Total ram usage:        6 bytes
  4952 ;; Hardware stack levels used: 1
  4953 ;; This function calls:
  4954 ;;		Nothing
  4955 ;; This function is called by:
  4956 ;;		_kpInit
  4957 ;;		_lcdInit
  4958 ;;		_soInit
  4959 ;;		_ssdInit
  4960 ;;		_read_SCL
  4961 ;;		_read_SDA
  4962 ;;		_clear_SCL
  4963 ;;		_clear_SDA
  4964 ;;		_i2cInit
  4965 ;; This function uses a non-reentrant model
  4966 ;;
  4967                           
  4968                           	psect	text33
  4969  000F38                     __ptext33:
  4970                           	callstack 0
  4971  000F38                     _pinMode:
  4972                           	callstack 28
  4973  000F38                     
  4974                           ;io.c: 56:     if(pin <8){
  4975  000F38  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  4976  000F3A  EFAA  F007         	goto	u2340
  4977  000F3E  5002               	movf	(pinMode@pin+1)^0,w,c
  4978  000F40  E107               	bnz	u2341
  4979  000F42  0E08               	movlw	8
  4980  000F44  5C01               	subwf	pinMode@pin^0,w,c
  4981  000F46  B0D8               	btfsc	status,0,c
  4982  000F48  EFA8  F007         	goto	u2341
  4983  000F4C  EFAA  F007         	goto	u2340
  4984  000F50                     u2341:
  4985  000F50  EFD4  F007         	goto	l2560
  4986  000F54                     u2340:
  4987  000F54                     
  4988                           ;io.c: 57:         if (type){ ((TRISA) |= (1<<(pin)));}
  4989  000F54  5003               	movf	pinMode@type^0,w,c
  4990  000F56  1004               	iorwf	(pinMode@type+1)^0,w,c
  4991  000F58  B4D8               	btfsc	status,2,c
  4992  000F5A  EFB1  F007         	goto	u2351
  4993  000F5E  EFB3  F007         	goto	u2350
  4994  000F62                     u2351:
  4995  000F62  EFC3  F007         	goto	l2558
  4996  000F66                     u2350:
  4997  000F66  C001  F005         	movff	pinMode@pin,??_pinMode
  4998  000F6A  0E01               	movlw	1
  4999  000F6C  6E06               	movwf	(??_pinMode+1)^0,c
  5000  000F6E  2A05               	incf	??_pinMode^0,f,c
  5001  000F70  EFBC  F007         	goto	u2364
  5002  000F74                     u2365:
  5003  000F74  90D8               	bcf	status,0,c
  5004  000F76  3606               	rlcf	(??_pinMode+1)^0,f,c
  5005  000F78                     u2364:
  5006  000F78  2E05               	decfsz	??_pinMode^0,f,c
  5007  000F7A  EFBA  F007         	goto	u2365
  5008  000F7E  5006               	movf	(??_pinMode+1)^0,w,c
  5009  000F80  1292               	iorwf	146,f,c	;volatile
  5010  000F82  EFC2  F008         	goto	l111
  5011  000F86                     l2558:
  5012  000F86  C001  F005         	movff	pinMode@pin,??_pinMode
  5013  000F8A  0E01               	movlw	1
  5014  000F8C  6E06               	movwf	(??_pinMode+1)^0,c
  5015  000F8E  2A05               	incf	??_pinMode^0,f,c
  5016  000F90  EFCC  F007         	goto	u2374
  5017  000F94                     u2375:
  5018  000F94  90D8               	bcf	status,0,c
  5019  000F96  3606               	rlcf	(??_pinMode+1)^0,f,c
  5020  000F98                     u2374:
  5021  000F98  2E05               	decfsz	??_pinMode^0,f,c
  5022  000F9A  EFCA  F007         	goto	u2375
  5023  000F9E  5006               	movf	(??_pinMode+1)^0,w,c
  5024  000FA0  0AFF               	xorlw	255
  5025  000FA2  1692               	andwf	146,f,c	;volatile
  5026  000FA4  EFC2  F008         	goto	l111
  5027  000FA8                     l2560:
  5028  000FA8  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  5029  000FAA  EFE2  F007         	goto	u2380
  5030  000FAE  5002               	movf	(pinMode@pin+1)^0,w,c
  5031  000FB0  E107               	bnz	u2381
  5032  000FB2  0E10               	movlw	16
  5033  000FB4  5C01               	subwf	pinMode@pin^0,w,c
  5034  000FB6  B0D8               	btfsc	status,0,c
  5035  000FB8  EFE0  F007         	goto	u2381
  5036  000FBC  EFE2  F007         	goto	u2380
  5037  000FC0                     u2381:
  5038  000FC0  EF10  F008         	goto	l2568
  5039  000FC4                     u2380:
  5040  000FC4                     
  5041                           ;io.c: 60:         if (type){ ((TRISB) |= (1<<(pin-8)));}
  5042  000FC4  5003               	movf	pinMode@type^0,w,c
  5043  000FC6  1004               	iorwf	(pinMode@type+1)^0,w,c
  5044  000FC8  B4D8               	btfsc	status,2,c
  5045  000FCA  EFE9  F007         	goto	u2391
  5046  000FCE  EFEB  F007         	goto	u2390
  5047  000FD2                     u2391:
  5048  000FD2  EFFD  F007         	goto	l2566
  5049  000FD6                     u2390:
  5050  000FD6  C001  F005         	movff	pinMode@pin,??_pinMode
  5051  000FDA  0EF8               	movlw	-8
  5052  000FDC  2605               	addwf	??_pinMode^0,f,c
  5053  000FDE  0E01               	movlw	1
  5054  000FE0  6E06               	movwf	(??_pinMode+1)^0,c
  5055  000FE2  2A05               	incf	??_pinMode^0,f,c
  5056  000FE4  EFF6  F007         	goto	u2404
  5057  000FE8                     u2405:
  5058  000FE8  90D8               	bcf	status,0,c
  5059  000FEA  3606               	rlcf	(??_pinMode+1)^0,f,c
  5060  000FEC                     u2404:
  5061  000FEC  2E05               	decfsz	??_pinMode^0,f,c
  5062  000FEE  EFF4  F007         	goto	u2405
  5063  000FF2  5006               	movf	(??_pinMode+1)^0,w,c
  5064  000FF4  1293               	iorwf	147,f,c	;volatile
  5065  000FF6  EFC2  F008         	goto	l111
  5066  000FFA                     l2566:
  5067  000FFA  C001  F005         	movff	pinMode@pin,??_pinMode
  5068  000FFE  0EF8               	movlw	-8
  5069  001000  2605               	addwf	??_pinMode^0,f,c
  5070  001002  0E01               	movlw	1
  5071  001004  6E06               	movwf	(??_pinMode+1)^0,c
  5072  001006  2A05               	incf	??_pinMode^0,f,c
  5073  001008  EF08  F008         	goto	u2414
  5074  00100C                     u2415:
  5075  00100C  90D8               	bcf	status,0,c
  5076  00100E  3606               	rlcf	(??_pinMode+1)^0,f,c
  5077  001010                     u2414:
  5078  001010  2E05               	decfsz	??_pinMode^0,f,c
  5079  001012  EF06  F008         	goto	u2415
  5080  001016  5006               	movf	(??_pinMode+1)^0,w,c
  5081  001018  0AFF               	xorlw	255
  5082  00101A  1693               	andwf	147,f,c	;volatile
  5083  00101C  EFC2  F008         	goto	l111
  5084  001020                     l2568:
  5085  001020  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  5086  001022  EF1E  F008         	goto	u2420
  5087  001026  5002               	movf	(pinMode@pin+1)^0,w,c
  5088  001028  E107               	bnz	u2421
  5089  00102A  0E18               	movlw	24
  5090  00102C  5C01               	subwf	pinMode@pin^0,w,c
  5091  00102E  B0D8               	btfsc	status,0,c
  5092  001030  EF1C  F008         	goto	u2421
  5093  001034  EF1E  F008         	goto	u2420
  5094  001038                     u2421:
  5095  001038  EF4C  F008         	goto	l2576
  5096  00103C                     u2420:
  5097  00103C                     
  5098                           ;io.c: 63:         if (type){ ((TRISC) |= (1<<(pin-16)));}
  5099  00103C  5003               	movf	pinMode@type^0,w,c
  5100  00103E  1004               	iorwf	(pinMode@type+1)^0,w,c
  5101  001040  B4D8               	btfsc	status,2,c
  5102  001042  EF25  F008         	goto	u2431
  5103  001046  EF27  F008         	goto	u2430
  5104  00104A                     u2431:
  5105  00104A  EF39  F008         	goto	l2574
  5106  00104E                     u2430:
  5107  00104E  C001  F005         	movff	pinMode@pin,??_pinMode
  5108  001052  0EF0               	movlw	-16
  5109  001054  2605               	addwf	??_pinMode^0,f,c
  5110  001056  0E01               	movlw	1
  5111  001058  6E06               	movwf	(??_pinMode+1)^0,c
  5112  00105A  2A05               	incf	??_pinMode^0,f,c
  5113  00105C  EF32  F008         	goto	u2444
  5114  001060                     u2445:
  5115  001060  90D8               	bcf	status,0,c
  5116  001062  3606               	rlcf	(??_pinMode+1)^0,f,c
  5117  001064                     u2444:
  5118  001064  2E05               	decfsz	??_pinMode^0,f,c
  5119  001066  EF30  F008         	goto	u2445
  5120  00106A  5006               	movf	(??_pinMode+1)^0,w,c
  5121  00106C  1294               	iorwf	148,f,c	;volatile
  5122  00106E  EFC2  F008         	goto	l111
  5123  001072                     l2574:
  5124  001072  C001  F005         	movff	pinMode@pin,??_pinMode
  5125  001076  0EF0               	movlw	-16
  5126  001078  2605               	addwf	??_pinMode^0,f,c
  5127  00107A  0E01               	movlw	1
  5128  00107C  6E06               	movwf	(??_pinMode+1)^0,c
  5129  00107E  2A05               	incf	??_pinMode^0,f,c
  5130  001080  EF44  F008         	goto	u2454
  5131  001084                     u2455:
  5132  001084  90D8               	bcf	status,0,c
  5133  001086  3606               	rlcf	(??_pinMode+1)^0,f,c
  5134  001088                     u2454:
  5135  001088  2E05               	decfsz	??_pinMode^0,f,c
  5136  00108A  EF42  F008         	goto	u2455
  5137  00108E  5006               	movf	(??_pinMode+1)^0,w,c
  5138  001090  0AFF               	xorlw	255
  5139  001092  1694               	andwf	148,f,c	;volatile
  5140  001094  EFC2  F008         	goto	l111
  5141  001098                     l2576:
  5142  001098  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  5143  00109A  EF5A  F008         	goto	u2460
  5144  00109E  5002               	movf	(pinMode@pin+1)^0,w,c
  5145  0010A0  E107               	bnz	u2461
  5146  0010A2  0E20               	movlw	32
  5147  0010A4  5C01               	subwf	pinMode@pin^0,w,c
  5148  0010A6  B0D8               	btfsc	status,0,c
  5149  0010A8  EF58  F008         	goto	u2461
  5150  0010AC  EF5A  F008         	goto	u2460
  5151  0010B0                     u2461:
  5152  0010B0  EF88  F008         	goto	l2584
  5153  0010B4                     u2460:
  5154  0010B4                     
  5155                           ;io.c: 66:         if (type){ ((TRISD) |= (1<<(pin-24)));}
  5156  0010B4  5003               	movf	pinMode@type^0,w,c
  5157  0010B6  1004               	iorwf	(pinMode@type+1)^0,w,c
  5158  0010B8  B4D8               	btfsc	status,2,c
  5159  0010BA  EF61  F008         	goto	u2471
  5160  0010BE  EF63  F008         	goto	u2470
  5161  0010C2                     u2471:
  5162  0010C2  EF75  F008         	goto	l2582
  5163  0010C6                     u2470:
  5164  0010C6  C001  F005         	movff	pinMode@pin,??_pinMode
  5165  0010CA  0EE8               	movlw	-24
  5166  0010CC  2605               	addwf	??_pinMode^0,f,c
  5167  0010CE  0E01               	movlw	1
  5168  0010D0  6E06               	movwf	(??_pinMode+1)^0,c
  5169  0010D2  2A05               	incf	??_pinMode^0,f,c
  5170  0010D4  EF6E  F008         	goto	u2484
  5171  0010D8                     u2485:
  5172  0010D8  90D8               	bcf	status,0,c
  5173  0010DA  3606               	rlcf	(??_pinMode+1)^0,f,c
  5174  0010DC                     u2484:
  5175  0010DC  2E05               	decfsz	??_pinMode^0,f,c
  5176  0010DE  EF6C  F008         	goto	u2485
  5177  0010E2  5006               	movf	(??_pinMode+1)^0,w,c
  5178  0010E4  1295               	iorwf	149,f,c	;volatile
  5179  0010E6  EFC2  F008         	goto	l111
  5180  0010EA                     l2582:
  5181  0010EA  C001  F005         	movff	pinMode@pin,??_pinMode
  5182  0010EE  0EE8               	movlw	-24
  5183  0010F0  2605               	addwf	??_pinMode^0,f,c
  5184  0010F2  0E01               	movlw	1
  5185  0010F4  6E06               	movwf	(??_pinMode+1)^0,c
  5186  0010F6  2A05               	incf	??_pinMode^0,f,c
  5187  0010F8  EF80  F008         	goto	u2494
  5188  0010FC                     u2495:
  5189  0010FC  90D8               	bcf	status,0,c
  5190  0010FE  3606               	rlcf	(??_pinMode+1)^0,f,c
  5191  001100                     u2494:
  5192  001100  2E05               	decfsz	??_pinMode^0,f,c
  5193  001102  EF7E  F008         	goto	u2495
  5194  001106  5006               	movf	(??_pinMode+1)^0,w,c
  5195  001108  0AFF               	xorlw	255
  5196  00110A  1695               	andwf	149,f,c	;volatile
  5197  00110C  EFC2  F008         	goto	l111
  5198  001110                     l2584:
  5199  001110  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  5200  001112  EF96  F008         	goto	u2500
  5201  001116  5002               	movf	(pinMode@pin+1)^0,w,c
  5202  001118  E107               	bnz	u2501
  5203  00111A  0E28               	movlw	40
  5204  00111C  5C01               	subwf	pinMode@pin^0,w,c
  5205  00111E  B0D8               	btfsc	status,0,c
  5206  001120  EF94  F008         	goto	u2501
  5207  001124  EF96  F008         	goto	u2500
  5208  001128                     u2501:
  5209  001128  EFC2  F008         	goto	l111
  5210  00112C                     u2500:
  5211  00112C                     
  5212                           ;io.c: 69:         if (type){ ((TRISE) |= (1<<(pin-32)));}
  5213  00112C  5003               	movf	pinMode@type^0,w,c
  5214  00112E  1004               	iorwf	(pinMode@type+1)^0,w,c
  5215  001130  B4D8               	btfsc	status,2,c
  5216  001132  EF9D  F008         	goto	u2511
  5217  001136  EF9F  F008         	goto	u2510
  5218  00113A                     u2511:
  5219  00113A  EFB1  F008         	goto	l2590
  5220  00113E                     u2510:
  5221  00113E  C001  F005         	movff	pinMode@pin,??_pinMode
  5222  001142  0EE0               	movlw	-32
  5223  001144  2605               	addwf	??_pinMode^0,f,c
  5224  001146  0E01               	movlw	1
  5225  001148  6E06               	movwf	(??_pinMode+1)^0,c
  5226  00114A  2A05               	incf	??_pinMode^0,f,c
  5227  00114C  EFAA  F008         	goto	u2524
  5228  001150                     u2525:
  5229  001150  90D8               	bcf	status,0,c
  5230  001152  3606               	rlcf	(??_pinMode+1)^0,f,c
  5231  001154                     u2524:
  5232  001154  2E05               	decfsz	??_pinMode^0,f,c
  5233  001156  EFA8  F008         	goto	u2525
  5234  00115A  5006               	movf	(??_pinMode+1)^0,w,c
  5235  00115C  1296               	iorwf	150,f,c	;volatile
  5236  00115E  EFC2  F008         	goto	l111
  5237  001162                     l2590:
  5238  001162  C001  F005         	movff	pinMode@pin,??_pinMode
  5239  001166  0EE0               	movlw	-32
  5240  001168  2605               	addwf	??_pinMode^0,f,c
  5241  00116A  0E01               	movlw	1
  5242  00116C  6E06               	movwf	(??_pinMode+1)^0,c
  5243  00116E  2A05               	incf	??_pinMode^0,f,c
  5244  001170  EFBC  F008         	goto	u2534
  5245  001174                     u2535:
  5246  001174  90D8               	bcf	status,0,c
  5247  001176  3606               	rlcf	(??_pinMode+1)^0,f,c
  5248  001178                     u2534:
  5249  001178  2E05               	decfsz	??_pinMode^0,f,c
  5250  00117A  EFBA  F008         	goto	u2535
  5251  00117E  5006               	movf	(??_pinMode+1)^0,w,c
  5252  001180  0AFF               	xorlw	255
  5253  001182  1696               	andwf	150,f,c	;volatile
  5254  001184                     l111:
  5255  001184  0012               	return		;funcret
  5256  001186                     __end_of_pinMode:
  5257                           	callstack 0
  5258                           
  5259 ;; *************** function _I2C_delay *****************
  5260 ;; Defined at:
  5261 ;;		line 22 in file "i2c.c"
  5262 ;; Parameters:    Size  Location     Type
  5263 ;;		None
  5264 ;; Auto vars:     Size  Location     Type
  5265 ;;  i               2    0        int 
  5266 ;;  v               2    0        volatile int 
  5267 ;; Return value:  Size  Location     Type
  5268 ;;                  1    wreg      void 
  5269 ;; Registers used:
  5270 ;;		None
  5271 ;; Tracked objects:
  5272 ;;		On entry : 0/0
  5273 ;;		On exit  : 0/0
  5274 ;;		Unchanged: 0/0
  5275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5276 ;;      Params:         0       0       0       0       0       0       0
  5277 ;;      Locals:         0       0       0       0       0       0       0
  5278 ;;      Temps:          0       0       0       0       0       0       0
  5279 ;;      Totals:         0       0       0       0       0       0       0
  5280 ;;Total ram usage:        0 bytes
  5281 ;; Hardware stack levels used: 1
  5282 ;; This function calls:
  5283 ;;		Nothing
  5284 ;; This function is called by:
  5285 ;;		_i2c_start
  5286 ;;		_i2c_stop
  5287 ;;		_i2c_write_bit
  5288 ;;		_i2c_read_bit
  5289 ;; This function uses a non-reentrant model
  5290 ;;
  5291                           
  5292                           	psect	text34
  5293  002AF2                     __ptext34:
  5294                           	callstack 0
  5295  002AF2                     _I2C_delay:
  5296                           	callstack 25
  5297  002AF2  0012               	return		;funcret
  5298  002AF4                     __end_of_I2C_delay:
  5299                           	callstack 0
  5300                           
  5301 ;; *************** function _bcd2dec *****************
  5302 ;; Defined at:
  5303 ;;		line 12 in file "ds1307.c"
  5304 ;; Parameters:    Size  Location     Type
  5305 ;;  value           2   30[COMRAM] int 
  5306 ;; Auto vars:     Size  Location     Type
  5307 ;;		None
  5308 ;; Return value:  Size  Location     Type
  5309 ;;                  2   30[COMRAM] int 
  5310 ;; Registers used:
  5311 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5312 ;; Tracked objects:
  5313 ;;		On entry : 0/0
  5314 ;;		On exit  : 0/0
  5315 ;;		Unchanged: 0/0
  5316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5317 ;;      Params:         2       0       0       0       0       0       0
  5318 ;;      Locals:         0       0       0       0       0       0       0
  5319 ;;      Temps:          2       0       0       0       0       0       0
  5320 ;;      Totals:         4       0       0       0       0       0       0
  5321 ;;Total ram usage:        4 bytes
  5322 ;; Hardware stack levels used: 1
  5323 ;; Hardware stack levels required when called: 1
  5324 ;; This function calls:
  5325 ;;		___awdiv
  5326 ;;		___wmul
  5327 ;; This function is called by:
  5328 ;;		_Apostando
  5329 ;; This function uses a non-reentrant model
  5330 ;;
  5331                           
  5332                           	psect	text35
  5333  0026D0                     __ptext35:
  5334                           	callstack 0
  5335  0026D0                     _bcd2dec:
  5336                           	callstack 27
  5337  0026D0                     
  5338                           ;ds1307.c: 13:  return ((value / 16 * 10) + (value % 16));
  5339  0026D0  0E0F               	movlw	15
  5340  0026D2  141F               	andwf	bcd2dec@value^0,w,c
  5341  0026D4  6E21               	movwf	??_bcd2dec^0,c
  5342  0026D6  0E00               	movlw	0
  5343  0026D8  1420               	andwf	(bcd2dec@value+1)^0,w,c
  5344  0026DA  6E22               	movwf	(??_bcd2dec+1)^0,c
  5345  0026DC  0E00               	movlw	0
  5346  0026DE  6E04               	movwf	(___awdiv@divisor+1)^0,c
  5347  0026E0  0E10               	movlw	16
  5348  0026E2  6E03               	movwf	___awdiv@divisor^0,c
  5349  0026E4  C01F  F001         	movff	bcd2dec@value,___awdiv@dividend
  5350  0026E8  C020  F002         	movff	bcd2dec@value+1,___awdiv@dividend+1
  5351  0026EC  EC0E  F00E         	call	___awdiv	;wreg free
  5352  0026F0  C001  F019         	movff	?___awdiv,___wmul@multiplier
  5353  0026F4  C002  F01A         	movff	?___awdiv+1,___wmul@multiplier+1
  5354  0026F8  0E00               	movlw	0
  5355  0026FA  6E1C               	movwf	(___wmul@multiplicand+1)^0,c
  5356  0026FC  0E0A               	movlw	10
  5357  0026FE  6E1B               	movwf	___wmul@multiplicand^0,c
  5358  002700  EC43  F015         	call	___wmul	;wreg free
  5359  002704  5021               	movf	??_bcd2dec^0,w,c
  5360  002706  2419               	addwf	?___wmul^0,w,c
  5361  002708  6E1F               	movwf	?_bcd2dec^0,c
  5362  00270A  5022               	movf	(??_bcd2dec+1)^0,w,c
  5363  00270C  201A               	addwfc	(?___wmul+1)^0,w,c
  5364  00270E  6E20               	movwf	(?_bcd2dec+1)^0,c
  5365  002710  0012               	return		;funcret
  5366  002712                     __end_of_bcd2dec:
  5367                           	callstack 0
  5368                           
  5369 ;; *************** function ___flge *****************
  5370 ;; Defined at:
  5371 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flge.c"
  5372 ;; Parameters:    Size  Location     Type
  5373 ;;  ff1             4    0[COMRAM] int 
  5374 ;;  ff2             4    4[COMRAM] int 
  5375 ;; Auto vars:     Size  Location     Type
  5376 ;;		None
  5377 ;; Return value:  Size  Location     Type
  5378 ;;		None               void
  5379 ;; Registers used:
  5380 ;;		wreg, status,2, status,0
  5381 ;; Tracked objects:
  5382 ;;		On entry : 0/0
  5383 ;;		On exit  : 0/0
  5384 ;;		Unchanged: 0/0
  5385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5386 ;;      Params:         8       0       0       0       0       0       0
  5387 ;;      Locals:         0       0       0       0       0       0       0
  5388 ;;      Temps:          4       0       0       0       0       0       0
  5389 ;;      Totals:        12       0       0       0       0       0       0
  5390 ;;Total ram usage:       12 bytes
  5391 ;; Hardware stack levels used: 1
  5392 ;; This function calls:
  5393 ;;		Nothing
  5394 ;; This function is called by:
  5395 ;;		_Apostando
  5396 ;; This function uses a non-reentrant model
  5397 ;;
  5398                           
  5399                           	psect	text36
  5400  001950                     __ptext36:
  5401                           	callstack 0
  5402  001950                     ___flge:
  5403                           	callstack 28
  5404  001950  0E00               	movlw	0
  5405  001952  1401               	andwf	___flge@ff1^0,w,c
  5406  001954  6E09               	movwf	??___flge^0,c
  5407  001956  0E00               	movlw	0
  5408  001958  1402               	andwf	(___flge@ff1+1)^0,w,c
  5409  00195A  6E0A               	movwf	(??___flge+1)^0,c
  5410  00195C  0E80               	movlw	128
  5411  00195E  1403               	andwf	(___flge@ff1+2)^0,w,c
  5412  001960  6E0B               	movwf	(??___flge+2)^0,c
  5413  001962  0E7F               	movlw	127
  5414  001964  1404               	andwf	(___flge@ff1+3)^0,w,c
  5415  001966  6E0C               	movwf	(??___flge+3)^0,c
  5416  001968  5009               	movf	??___flge^0,w,c
  5417  00196A  100A               	iorwf	(??___flge+1)^0,w,c
  5418  00196C  100B               	iorwf	(??___flge+2)^0,w,c
  5419  00196E  100C               	iorwf	(??___flge+3)^0,w,c
  5420  001970  A4D8               	btfss	status,2,c
  5421  001972  EFBD  F00C         	goto	u3511
  5422  001976  EFBF  F00C         	goto	u3510
  5423  00197A                     u3511:
  5424  00197A  EFC7  F00C         	goto	l3304
  5425  00197E                     u3510:
  5426  00197E  0E00               	movlw	0
  5427  001980  6E01               	movwf	___flge@ff1^0,c
  5428  001982  0E00               	movlw	0
  5429  001984  6E02               	movwf	(___flge@ff1+1)^0,c
  5430  001986  0E00               	movlw	0
  5431  001988  6E03               	movwf	(___flge@ff1+2)^0,c
  5432  00198A  0E00               	movlw	0
  5433  00198C  6E04               	movwf	(___flge@ff1+3)^0,c
  5434  00198E                     l3304:
  5435  00198E  0E00               	movlw	0
  5436  001990  1405               	andwf	___flge@ff2^0,w,c
  5437  001992  6E09               	movwf	??___flge^0,c
  5438  001994  0E00               	movlw	0
  5439  001996  1406               	andwf	(___flge@ff2+1)^0,w,c
  5440  001998  6E0A               	movwf	(??___flge+1)^0,c
  5441  00199A  0E80               	movlw	128
  5442  00199C  1407               	andwf	(___flge@ff2+2)^0,w,c
  5443  00199E  6E0B               	movwf	(??___flge+2)^0,c
  5444  0019A0  0E7F               	movlw	127
  5445  0019A2  1408               	andwf	(___flge@ff2+3)^0,w,c
  5446  0019A4  6E0C               	movwf	(??___flge+3)^0,c
  5447  0019A6  5009               	movf	??___flge^0,w,c
  5448  0019A8  100A               	iorwf	(??___flge+1)^0,w,c
  5449  0019AA  100B               	iorwf	(??___flge+2)^0,w,c
  5450  0019AC  100C               	iorwf	(??___flge+3)^0,w,c
  5451  0019AE  A4D8               	btfss	status,2,c
  5452  0019B0  EFDC  F00C         	goto	u3521
  5453  0019B4  EFDE  F00C         	goto	u3520
  5454  0019B8                     u3521:
  5455  0019B8  EFE6  F00C         	goto	l3308
  5456  0019BC                     u3520:
  5457  0019BC  0E00               	movlw	0
  5458  0019BE  6E05               	movwf	___flge@ff2^0,c
  5459  0019C0  0E00               	movlw	0
  5460  0019C2  6E06               	movwf	(___flge@ff2+1)^0,c
  5461  0019C4  0E00               	movlw	0
  5462  0019C6  6E07               	movwf	(___flge@ff2+2)^0,c
  5463  0019C8  0E00               	movlw	0
  5464  0019CA  6E08               	movwf	(___flge@ff2+3)^0,c
  5465  0019CC                     l3308:
  5466  0019CC  AE04               	btfss	(___flge@ff1+3)^0,7,c
  5467  0019CE  EFEB  F00C         	goto	u3531
  5468  0019D2  EFED  F00C         	goto	u3530
  5469  0019D6                     u3531:
  5470  0019D6  EFF6  F00C         	goto	l3312
  5471  0019DA                     u3530:
  5472  0019DA  6C01               	negf	___flge@ff1^0,c
  5473  0019DC  1E02               	comf	(___flge@ff1+1)^0,f,c
  5474  0019DE  B0D8               	btfsc	status,0,c
  5475  0019E0  2A02               	incf	(___flge@ff1+1)^0,f,c
  5476  0019E2  1E03               	comf	(___flge@ff1+2)^0,f,c
  5477  0019E4  B0D8               	btfsc	status,0,c
  5478  0019E6  2A03               	incf	(___flge@ff1+2)^0,f,c
  5479  0019E8  0E80               	movlw	128
  5480  0019EA  5604               	subfwb	(___flge@ff1+3)^0,f,c
  5481  0019EC                     l3312:
  5482  0019EC  AE08               	btfss	(___flge@ff2+3)^0,7,c
  5483  0019EE  EFFB  F00C         	goto	u3541
  5484  0019F2  EFFD  F00C         	goto	u3540
  5485  0019F6                     u3541:
  5486  0019F6  EF06  F00D         	goto	l784
  5487  0019FA                     u3540:
  5488  0019FA  6C05               	negf	___flge@ff2^0,c
  5489  0019FC  1E06               	comf	(___flge@ff2+1)^0,f,c
  5490  0019FE  B0D8               	btfsc	status,0,c
  5491  001A00  2A06               	incf	(___flge@ff2+1)^0,f,c
  5492  001A02  1E07               	comf	(___flge@ff2+2)^0,f,c
  5493  001A04  B0D8               	btfsc	status,0,c
  5494  001A06  2A07               	incf	(___flge@ff2+2)^0,f,c
  5495  001A08  0E80               	movlw	128
  5496  001A0A  5608               	subfwb	(___flge@ff2+3)^0,f,c
  5497  001A0C                     l784:
  5498  001A0C  0E00               	movlw	0
  5499  001A0E  1A01               	xorwf	___flge@ff1^0,f,c
  5500  001A10  0E00               	movlw	0
  5501  001A12  1A02               	xorwf	(___flge@ff1+1)^0,f,c
  5502  001A14  0E00               	movlw	0
  5503  001A16  1A03               	xorwf	(___flge@ff1+2)^0,f,c
  5504  001A18  0E80               	movlw	128
  5505  001A1A  1A04               	xorwf	(___flge@ff1+3)^0,f,c
  5506  001A1C  0E00               	movlw	0
  5507  001A1E  1A05               	xorwf	___flge@ff2^0,f,c
  5508  001A20  0E00               	movlw	0
  5509  001A22  1A06               	xorwf	(___flge@ff2+1)^0,f,c
  5510  001A24  0E00               	movlw	0
  5511  001A26  1A07               	xorwf	(___flge@ff2+2)^0,f,c
  5512  001A28  0E80               	movlw	128
  5513  001A2A  1A08               	xorwf	(___flge@ff2+3)^0,f,c
  5514  001A2C  5005               	movf	___flge@ff2^0,w,c
  5515  001A2E  5C01               	subwf	___flge@ff1^0,w,c
  5516  001A30  5006               	movf	(___flge@ff2+1)^0,w,c
  5517  001A32  5802               	subwfb	(___flge@ff1+1)^0,w,c
  5518  001A34  5007               	movf	(___flge@ff2+2)^0,w,c
  5519  001A36  5803               	subwfb	(___flge@ff1+2)^0,w,c
  5520  001A38  5008               	movf	(___flge@ff2+3)^0,w,c
  5521  001A3A  5804               	subwfb	(___flge@ff1+3)^0,w,c
  5522  001A3C  B0D8               	btfsc	status,0,c
  5523  001A3E  EF23  F00D         	goto	u3551
  5524  001A42  EF25  F00D         	goto	u3550
  5525  001A46                     u3551:
  5526  001A46  EF28  F00D         	goto	l3318
  5527  001A4A                     u3550:
  5528  001A4A  90D8               	bcf	status,0,c
  5529  001A4C  EF29  F00D         	goto	l789
  5530  001A50                     l3318:
  5531  001A50  80D8               	bsf	status,0,c
  5532  001A52                     l789:
  5533  001A52  0012               	return		;funcret
  5534  001A54                     __end_of___flge:
  5535                           	callstack 0
  5536                           
  5537 ;; *************** function ___fladd *****************
  5538 ;; Defined at:
  5539 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  5540 ;; Parameters:    Size  Location     Type
  5541 ;;  b               4    0[COMRAM] int 
  5542 ;;  a               4    4[COMRAM] int 
  5543 ;; Auto vars:     Size  Location     Type
  5544 ;;  grs             1   15[COMRAM] unsigned char 
  5545 ;;  bexp            1   14[COMRAM] unsigned char 
  5546 ;;  aexp            1   13[COMRAM] unsigned char 
  5547 ;;  signs           1   12[COMRAM] unsigned char 
  5548 ;; Return value:  Size  Location     Type
  5549 ;;                  4    0[COMRAM] unsigned char 
  5550 ;; Registers used:
  5551 ;;		wreg, status,2, status,0
  5552 ;; Tracked objects:
  5553 ;;		On entry : 0/0
  5554 ;;		On exit  : 0/0
  5555 ;;		Unchanged: 0/0
  5556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5557 ;;      Params:         8       0       0       0       0       0       0
  5558 ;;      Locals:         4       0       0       0       0       0       0
  5559 ;;      Temps:          4       0       0       0       0       0       0
  5560 ;;      Totals:        16       0       0       0       0       0       0
  5561 ;;Total ram usage:       16 bytes
  5562 ;; Hardware stack levels used: 1
  5563 ;; This function calls:
  5564 ;;		Nothing
  5565 ;; This function is called by:
  5566 ;;		_Apostando
  5567 ;; This function uses a non-reentrant model
  5568 ;;
  5569                           
  5570                           	psect	text37
  5571  000664                     __ptext37:
  5572                           	callstack 0
  5573  000664                     ___fladd:
  5574                           	callstack 28
  5575  000664  5004               	movf	(___fladd@b+3)^0,w,c
  5576  000666  0B80               	andlw	128
  5577  000668  6E0D               	movwf	___fladd@signs^0,c
  5578  00066A  5004               	movf	(___fladd@b+3)^0,w,c
  5579  00066C  2404               	addwf	(___fladd@b+3)^0,w,c
  5580  00066E  6E0F               	movwf	___fladd@bexp^0,c
  5581  000670  AE03               	btfss	(___fladd@b+2)^0,7,c
  5582  000672  EF3D  F003         	goto	u3061
  5583  000676  EF3F  F003         	goto	u3060
  5584  00067A                     u3061:
  5585  00067A  EF40  F003         	goto	l3068
  5586  00067E                     u3060:
  5587  00067E  800F               	bsf	___fladd@bexp^0,0,c
  5588  000680                     l3068:
  5589  000680  500F               	movf	___fladd@bexp^0,w,c
  5590  000682  B4D8               	btfsc	status,2,c
  5591  000684  EF46  F003         	goto	u3071
  5592  000688  EF48  F003         	goto	u3070
  5593  00068C                     u3071:
  5594  00068C  EF5D  F003         	goto	l3078
  5595  000690                     u3070:
  5596  000690  280F               	incf	___fladd@bexp^0,w,c
  5597  000692  A4D8               	btfss	status,2,c
  5598  000694  EF4E  F003         	goto	u3081
  5599  000698  EF50  F003         	goto	u3080
  5600  00069C                     u3081:
  5601  00069C  EF58  F003         	goto	l3074
  5602  0006A0                     u3080:
  5603  0006A0  0E00               	movlw	0
  5604  0006A2  6E01               	movwf	___fladd@b^0,c
  5605  0006A4  0E00               	movlw	0
  5606  0006A6  6E02               	movwf	(___fladd@b+1)^0,c
  5607  0006A8  0E00               	movlw	0
  5608  0006AA  6E03               	movwf	(___fladd@b+2)^0,c
  5609  0006AC  0E00               	movlw	0
  5610  0006AE  6E04               	movwf	(___fladd@b+3)^0,c
  5611  0006B0                     l3074:
  5612  0006B0  8E03               	bsf	(___fladd@b+2)^0,7,c
  5613  0006B2  0E00               	movlw	0
  5614  0006B4  6E04               	movwf	(___fladd@b+3)^0,c
  5615  0006B6  EF65  F003         	goto	l3080
  5616  0006BA                     l3078:
  5617  0006BA  0E00               	movlw	0
  5618  0006BC  6E01               	movwf	___fladd@b^0,c
  5619  0006BE  0E00               	movlw	0
  5620  0006C0  6E02               	movwf	(___fladd@b+1)^0,c
  5621  0006C2  0E00               	movlw	0
  5622  0006C4  6E03               	movwf	(___fladd@b+2)^0,c
  5623  0006C6  0E00               	movlw	0
  5624  0006C8  6E04               	movwf	(___fladd@b+3)^0,c
  5625  0006CA                     l3080:
  5626  0006CA  5008               	movf	(___fladd@a+3)^0,w,c
  5627  0006CC  0B80               	andlw	128
  5628  0006CE  6E0E               	movwf	___fladd@aexp^0,c
  5629  0006D0  500D               	movf	___fladd@signs^0,w,c
  5630  0006D2  180E               	xorwf	___fladd@aexp^0,w,c
  5631  0006D4  B4D8               	btfsc	status,2,c
  5632  0006D6  EF6F  F003         	goto	u3091
  5633  0006DA  EF71  F003         	goto	u3090
  5634  0006DE                     u3091:
  5635  0006DE  EF72  F003         	goto	l3086
  5636  0006E2                     u3090:
  5637  0006E2  8C0D               	bsf	___fladd@signs^0,6,c
  5638  0006E4                     l3086:
  5639  0006E4  5008               	movf	(___fladd@a+3)^0,w,c
  5640  0006E6  2408               	addwf	(___fladd@a+3)^0,w,c
  5641  0006E8  6E0E               	movwf	___fladd@aexp^0,c
  5642  0006EA  AE07               	btfss	(___fladd@a+2)^0,7,c
  5643  0006EC  EF7A  F003         	goto	u3101
  5644  0006F0  EF7C  F003         	goto	u3100
  5645  0006F4                     u3101:
  5646  0006F4  EF7D  F003         	goto	l3092
  5647  0006F8                     u3100:
  5648  0006F8  800E               	bsf	___fladd@aexp^0,0,c
  5649  0006FA                     l3092:
  5650  0006FA  500E               	movf	___fladd@aexp^0,w,c
  5651  0006FC  B4D8               	btfsc	status,2,c
  5652  0006FE  EF83  F003         	goto	u3111
  5653  000702  EF85  F003         	goto	u3110
  5654  000706                     u3111:
  5655  000706  EF9A  F003         	goto	l3102
  5656  00070A                     u3110:
  5657  00070A  280E               	incf	___fladd@aexp^0,w,c
  5658  00070C  A4D8               	btfss	status,2,c
  5659  00070E  EF8B  F003         	goto	u3121
  5660  000712  EF8D  F003         	goto	u3120
  5661  000716                     u3121:
  5662  000716  EF95  F003         	goto	l3098
  5663  00071A                     u3120:
  5664  00071A  0E00               	movlw	0
  5665  00071C  6E05               	movwf	___fladd@a^0,c
  5666  00071E  0E00               	movlw	0
  5667  000720  6E06               	movwf	(___fladd@a+1)^0,c
  5668  000722  0E00               	movlw	0
  5669  000724  6E07               	movwf	(___fladd@a+2)^0,c
  5670  000726  0E00               	movlw	0
  5671  000728  6E08               	movwf	(___fladd@a+3)^0,c
  5672  00072A                     l3098:
  5673  00072A  8E07               	bsf	(___fladd@a+2)^0,7,c
  5674  00072C  0E00               	movlw	0
  5675  00072E  6E08               	movwf	(___fladd@a+3)^0,c
  5676  000730  EFA2  F003         	goto	l3104
  5677  000734                     l3102:
  5678  000734  0E00               	movlw	0
  5679  000736  6E05               	movwf	___fladd@a^0,c
  5680  000738  0E00               	movlw	0
  5681  00073A  6E06               	movwf	(___fladd@a+1)^0,c
  5682  00073C  0E00               	movlw	0
  5683  00073E  6E07               	movwf	(___fladd@a+2)^0,c
  5684  000740  0E00               	movlw	0
  5685  000742  6E08               	movwf	(___fladd@a+3)^0,c
  5686  000744                     l3104:
  5687  000744  500F               	movf	___fladd@bexp^0,w,c
  5688  000746  5C0E               	subwf	___fladd@aexp^0,w,c
  5689  000748  B0D8               	btfsc	status,0,c
  5690  00074A  EFA9  F003         	goto	u3131
  5691  00074E  EFAB  F003         	goto	u3130
  5692  000752                     u3131:
  5693  000752  EFD2  F003         	goto	l3140
  5694  000756                     u3130:
  5695  000756  AC0D               	btfss	___fladd@signs^0,6,c
  5696  000758  EFB0  F003         	goto	u3141
  5697  00075C  EFB2  F003         	goto	u3140
  5698  000760                     u3141:
  5699  000760  EFB4  F003         	goto	l3110
  5700  000764                     u3140:
  5701  000764  0E80               	movlw	128
  5702  000766  1A0D               	xorwf	___fladd@signs^0,f,c
  5703  000768                     l3110:
  5704  000768  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  5705  00076C  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  5706  000770  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  5707  000774  C001  F010         	movff	___fladd@b,___fladd@grs
  5708  000778  C005  F001         	movff	___fladd@a,___fladd@b
  5709  00077C  C010  F005         	movff	___fladd@grs,___fladd@a
  5710  000780  C002  F010         	movff	___fladd@b+1,___fladd@grs
  5711  000784  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  5712  000788  C010  F006         	movff	___fladd@grs,___fladd@a+1
  5713  00078C  C003  F010         	movff	___fladd@b+2,___fladd@grs
  5714  000790  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  5715  000794  C010  F007         	movff	___fladd@grs,___fladd@a+2
  5716  000798  C004  F010         	movff	___fladd@b+3,___fladd@grs
  5717  00079C  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  5718  0007A0  C010  F008         	movff	___fladd@grs,___fladd@a+3
  5719  0007A4                     l3140:
  5720  0007A4  0E00               	movlw	0
  5721  0007A6  6E10               	movwf	___fladd@grs^0,c
  5722  0007A8  500F               	movf	___fladd@bexp^0,w,c
  5723  0007AA  C00E  F009         	movff	___fladd@aexp,??___fladd
  5724  0007AE  6A0A               	clrf	(??___fladd+1)^0,c
  5725  0007B0  5E09               	subwf	??___fladd^0,f,c
  5726  0007B2  0E00               	movlw	0
  5727  0007B4  5A0A               	subwfb	(??___fladd+1)^0,f,c
  5728  0007B6  BE0A               	btfsc	(??___fladd+1)^0,7,c
  5729  0007B8  EFE7  F003         	goto	u3151
  5730  0007BC  500A               	movf	(??___fladd+1)^0,w,c
  5731  0007BE  E109               	bnz	u3150
  5732  0007C0  0E1A               	movlw	26
  5733  0007C2  5C09               	subwf	??___fladd^0,w,c
  5734  0007C4  A0D8               	btfss	status,0,c
  5735  0007C6  EFE7  F003         	goto	u3151
  5736  0007CA  EFE9  F003         	goto	u3150
  5737  0007CE                     u3151:
  5738  0007CE  EF20  F004         	goto	l1048
  5739  0007D2                     u3150:
  5740  0007D2  5001               	movf	___fladd@b^0,w,c
  5741  0007D4  1002               	iorwf	(___fladd@b+1)^0,w,c
  5742  0007D6  1003               	iorwf	(___fladd@b+2)^0,w,c
  5743  0007D8  1004               	iorwf	(___fladd@b+3)^0,w,c
  5744  0007DA  A4D8               	btfss	status,2,c
  5745  0007DC  EFF2  F003         	goto	u3161
  5746  0007E0  EFF5  F003         	goto	u3160
  5747  0007E4                     u3161:
  5748  0007E4  0E01               	movlw	1
  5749  0007E6  EFF6  F003         	goto	u3170
  5750  0007EA                     u3160:
  5751  0007EA  0E00               	movlw	0
  5752  0007EC                     u3170:
  5753  0007EC  6E10               	movwf	___fladd@grs^0,c
  5754  0007EE  0E00               	movlw	0
  5755  0007F0  6E01               	movwf	___fladd@b^0,c
  5756  0007F2  0E00               	movlw	0
  5757  0007F4  6E02               	movwf	(___fladd@b+1)^0,c
  5758  0007F6  0E00               	movlw	0
  5759  0007F8  6E03               	movwf	(___fladd@b+2)^0,c
  5760  0007FA  0E00               	movlw	0
  5761  0007FC  6E04               	movwf	(___fladd@b+3)^0,c
  5762  0007FE  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  5763  000802  EF29  F004         	goto	l1047
  5764  000806                     l1049:
  5765  000806  A010               	btfss	___fladd@grs^0,0,c
  5766  000808  EF08  F004         	goto	u3181
  5767  00080C  EF0A  F004         	goto	u3180
  5768  000810                     u3181:
  5769  000810  EF10  F004         	goto	l3152
  5770  000814                     u3180:
  5771  000814  90D8               	bcf	status,0,c
  5772  000816  3010               	rrcf	___fladd@grs^0,w,c
  5773  000818  0901               	iorlw	1
  5774  00081A  6E10               	movwf	___fladd@grs^0,c
  5775  00081C  EF12  F004         	goto	l3154
  5776  000820                     l3152:
  5777  000820  90D8               	bcf	status,0,c
  5778  000822  3210               	rrcf	___fladd@grs^0,f,c
  5779  000824                     l3154:
  5780  000824  A001               	btfss	___fladd@b^0,0,c
  5781  000826  EF17  F004         	goto	u3191
  5782  00082A  EF19  F004         	goto	u3190
  5783  00082E                     u3191:
  5784  00082E  EF1A  F004         	goto	l3158
  5785  000832                     u3190:
  5786  000832  8E10               	bsf	___fladd@grs^0,7,c
  5787  000834                     l3158:
  5788  000834  3404               	rlcf	(___fladd@b+3)^0,w,c
  5789  000836  3204               	rrcf	(___fladd@b+3)^0,f,c
  5790  000838  3203               	rrcf	(___fladd@b+2)^0,f,c
  5791  00083A  3202               	rrcf	(___fladd@b+1)^0,f,c
  5792  00083C  3201               	rrcf	___fladd@b^0,f,c
  5793  00083E  2A0F               	incf	___fladd@bexp^0,f,c
  5794  000840                     l1048:
  5795  000840  500E               	movf	___fladd@aexp^0,w,c
  5796  000842  5C0F               	subwf	___fladd@bexp^0,w,c
  5797  000844  A0D8               	btfss	status,0,c
  5798  000846  EF27  F004         	goto	u3201
  5799  00084A  EF29  F004         	goto	u3200
  5800  00084E                     u3201:
  5801  00084E  EF03  F004         	goto	l1049
  5802  000852                     u3200:
  5803  000852                     l1047:
  5804  000852  BC0D               	btfsc	___fladd@signs^0,6,c
  5805  000854  EF2E  F004         	goto	u3211
  5806  000858  EF30  F004         	goto	u3210
  5807  00085C                     u3211:
  5808  00085C  EF70  F004         	goto	l3186
  5809  000860                     u3210:
  5810  000860  500F               	movf	___fladd@bexp^0,w,c
  5811  000862  A4D8               	btfss	status,2,c
  5812  000864  EF36  F004         	goto	u3221
  5813  000868  EF38  F004         	goto	u3220
  5814  00086C                     u3221:
  5815  00086C  EF42  F004         	goto	l3168
  5816  000870                     u3220:
  5817  000870  0E00               	movlw	0
  5818  000872  6E01               	movwf	?___fladd^0,c
  5819  000874  0E00               	movlw	0
  5820  000876  6E02               	movwf	(?___fladd+1)^0,c
  5821  000878  0E00               	movlw	0
  5822  00087A  6E03               	movwf	(?___fladd+2)^0,c
  5823  00087C  0E00               	movlw	0
  5824  00087E  6E04               	movwf	(?___fladd+3)^0,c
  5825  000880  EF91  F005         	goto	l1056
  5826  000884                     l3168:
  5827  000884  5005               	movf	___fladd@a^0,w,c
  5828  000886  2601               	addwf	___fladd@b^0,f,c
  5829  000888  5006               	movf	(___fladd@a+1)^0,w,c
  5830  00088A  2202               	addwfc	(___fladd@b+1)^0,f,c
  5831  00088C  5007               	movf	(___fladd@a+2)^0,w,c
  5832  00088E  2203               	addwfc	(___fladd@b+2)^0,f,c
  5833  000890  5008               	movf	(___fladd@a+3)^0,w,c
  5834  000892  2204               	addwfc	(___fladd@b+3)^0,f,c
  5835  000894  A004               	btfss	(___fladd@b+3)^0,0,c
  5836  000896  EF4F  F004         	goto	u3231
  5837  00089A  EF51  F004         	goto	u3230
  5838  00089E                     u3231:
  5839  00089E  EFFD  F004         	goto	l3222
  5840  0008A2                     u3230:
  5841  0008A2  A010               	btfss	___fladd@grs^0,0,c
  5842  0008A4  EF56  F004         	goto	u3241
  5843  0008A8  EF58  F004         	goto	u3240
  5844  0008AC                     u3241:
  5845  0008AC  EF5E  F004         	goto	l3176
  5846  0008B0                     u3240:
  5847  0008B0  90D8               	bcf	status,0,c
  5848  0008B2  3010               	rrcf	___fladd@grs^0,w,c
  5849  0008B4  0901               	iorlw	1
  5850  0008B6  6E10               	movwf	___fladd@grs^0,c
  5851  0008B8  EF60  F004         	goto	l3178
  5852  0008BC                     l3176:
  5853  0008BC  90D8               	bcf	status,0,c
  5854  0008BE  3210               	rrcf	___fladd@grs^0,f,c
  5855  0008C0                     l3178:
  5856  0008C0  A001               	btfss	___fladd@b^0,0,c
  5857  0008C2  EF65  F004         	goto	u3251
  5858  0008C6  EF67  F004         	goto	u3250
  5859  0008CA                     u3251:
  5860  0008CA  EF68  F004         	goto	l3182
  5861  0008CE                     u3250:
  5862  0008CE  8E10               	bsf	___fladd@grs^0,7,c
  5863  0008D0                     l3182:
  5864  0008D0  3404               	rlcf	(___fladd@b+3)^0,w,c
  5865  0008D2  3204               	rrcf	(___fladd@b+3)^0,f,c
  5866  0008D4  3203               	rrcf	(___fladd@b+2)^0,f,c
  5867  0008D6  3202               	rrcf	(___fladd@b+1)^0,f,c
  5868  0008D8  3201               	rrcf	___fladd@b^0,f,c
  5869  0008DA  2A0F               	incf	___fladd@bexp^0,f,c
  5870  0008DC  EFFD  F004         	goto	l3222
  5871  0008E0                     l3186:
  5872  0008E0  5005               	movf	___fladd@a^0,w,c
  5873  0008E2  5C01               	subwf	___fladd@b^0,w,c
  5874  0008E4  5006               	movf	(___fladd@a+1)^0,w,c
  5875  0008E6  5802               	subwfb	(___fladd@b+1)^0,w,c
  5876  0008E8  5007               	movf	(___fladd@a+2)^0,w,c
  5877  0008EA  5803               	subwfb	(___fladd@b+2)^0,w,c
  5878  0008EC  5004               	movf	(___fladd@b+3)^0,w,c
  5879  0008EE  0A80               	xorlw	128
  5880  0008F0  6E09               	movwf	??___fladd^0,c
  5881  0008F2  5008               	movf	(___fladd@a+3)^0,w,c
  5882  0008F4  0A80               	xorlw	128
  5883  0008F6  5809               	subwfb	??___fladd^0,w,c
  5884  0008F8  B0D8               	btfsc	status,0,c
  5885  0008FA  EF81  F004         	goto	u3261
  5886  0008FE  EF83  F004         	goto	u3260
  5887  000902                     u3261:
  5888  000902  EFAE  F004         	goto	l3196
  5889  000906                     u3260:
  5890  000906  5001               	movf	___fladd@b^0,w,c
  5891  000908  5C05               	subwf	___fladd@a^0,w,c
  5892  00090A  6E09               	movwf	??___fladd^0,c
  5893  00090C  5002               	movf	(___fladd@b+1)^0,w,c
  5894  00090E  5806               	subwfb	(___fladd@a+1)^0,w,c
  5895  000910  6E0A               	movwf	(??___fladd+1)^0,c
  5896  000912  5003               	movf	(___fladd@b+2)^0,w,c
  5897  000914  5807               	subwfb	(___fladd@a+2)^0,w,c
  5898  000916  6E0B               	movwf	(??___fladd+2)^0,c
  5899  000918  5004               	movf	(___fladd@b+3)^0,w,c
  5900  00091A  5808               	subwfb	(___fladd@a+3)^0,w,c
  5901  00091C  6E0C               	movwf	(??___fladd+3)^0,c
  5902  00091E  0EFF               	movlw	255
  5903  000920  2409               	addwf	??___fladd^0,w,c
  5904  000922  6E01               	movwf	___fladd@b^0,c
  5905  000924  0EFF               	movlw	255
  5906  000926  200A               	addwfc	(??___fladd+1)^0,w,c
  5907  000928  6E02               	movwf	(___fladd@b+1)^0,c
  5908  00092A  0EFF               	movlw	255
  5909  00092C  200B               	addwfc	(??___fladd+2)^0,w,c
  5910  00092E  6E03               	movwf	(___fladd@b+2)^0,c
  5911  000930  0EFF               	movlw	255
  5912  000932  200C               	addwfc	(??___fladd+3)^0,w,c
  5913  000934  6E04               	movwf	(___fladd@b+3)^0,c
  5914  000936  0E80               	movlw	128
  5915  000938  1A0D               	xorwf	___fladd@signs^0,f,c
  5916  00093A  6C10               	negf	___fladd@grs^0,c
  5917  00093C  5010               	movf	___fladd@grs^0,w,c
  5918  00093E  A4D8               	btfss	status,2,c
  5919  000940  EFA4  F004         	goto	u3271
  5920  000944  EFA6  F004         	goto	u3270
  5921  000948                     u3271:
  5922  000948  EFB6  F004         	goto	l1064
  5923  00094C                     u3270:
  5924  00094C  0E01               	movlw	1
  5925  00094E  2601               	addwf	___fladd@b^0,f,c
  5926  000950  0E00               	movlw	0
  5927  000952  2202               	addwfc	(___fladd@b+1)^0,f,c
  5928  000954  2203               	addwfc	(___fladd@b+2)^0,f,c
  5929  000956  2204               	addwfc	(___fladd@b+3)^0,f,c
  5930  000958  EFB6  F004         	goto	l1064
  5931  00095C                     l3196:
  5932  00095C  5005               	movf	___fladd@a^0,w,c
  5933  00095E  5E01               	subwf	___fladd@b^0,f,c
  5934  000960  5006               	movf	(___fladd@a+1)^0,w,c
  5935  000962  5A02               	subwfb	(___fladd@b+1)^0,f,c
  5936  000964  5007               	movf	(___fladd@a+2)^0,w,c
  5937  000966  5A03               	subwfb	(___fladd@b+2)^0,f,c
  5938  000968  5008               	movf	(___fladd@a+3)^0,w,c
  5939  00096A  5A04               	subwfb	(___fladd@b+3)^0,f,c
  5940  00096C                     l1064:
  5941  00096C  5001               	movf	___fladd@b^0,w,c
  5942  00096E  1002               	iorwf	(___fladd@b+1)^0,w,c
  5943  000970  1003               	iorwf	(___fladd@b+2)^0,w,c
  5944  000972  1004               	iorwf	(___fladd@b+3)^0,w,c
  5945  000974  A4D8               	btfss	status,2,c
  5946  000976  EFBF  F004         	goto	u3281
  5947  00097A  EFC1  F004         	goto	u3280
  5948  00097E                     u3281:
  5949  00097E  EFF6  F004         	goto	l3220
  5950  000982                     u3280:
  5951  000982  5010               	movf	___fladd@grs^0,w,c
  5952  000984  A4D8               	btfss	status,2,c
  5953  000986  EFC7  F004         	goto	u3291
  5954  00098A  EFC9  F004         	goto	u3290
  5955  00098E                     u3291:
  5956  00098E  EFF6  F004         	goto	l3220
  5957  000992                     u3290:
  5958  000992  0E00               	movlw	0
  5959  000994  6E01               	movwf	?___fladd^0,c
  5960  000996  0E00               	movlw	0
  5961  000998  6E02               	movwf	(?___fladd+1)^0,c
  5962  00099A  0E00               	movlw	0
  5963  00099C  6E03               	movwf	(?___fladd+2)^0,c
  5964  00099E  0E00               	movlw	0
  5965  0009A0  6E04               	movwf	(?___fladd+3)^0,c
  5966  0009A2  EF91  F005         	goto	l1056
  5967  0009A6                     l3204:
  5968  0009A6  90D8               	bcf	status,0,c
  5969  0009A8  3601               	rlcf	___fladd@b^0,f,c
  5970  0009AA  3602               	rlcf	(___fladd@b+1)^0,f,c
  5971  0009AC  3603               	rlcf	(___fladd@b+2)^0,f,c
  5972  0009AE  3604               	rlcf	(___fladd@b+3)^0,f,c
  5973  0009B0  AE10               	btfss	___fladd@grs^0,7,c
  5974  0009B2  EFDD  F004         	goto	u3301
  5975  0009B6  EFDF  F004         	goto	u3300
  5976  0009BA                     u3301:
  5977  0009BA  EFE0  F004         	goto	l3210
  5978  0009BE                     u3300:
  5979  0009BE  8001               	bsf	___fladd@b^0,0,c
  5980  0009C0                     l3210:
  5981  0009C0  A010               	btfss	___fladd@grs^0,0,c
  5982  0009C2  EFE5  F004         	goto	u3311
  5983  0009C6  EFE7  F004         	goto	u3310
  5984  0009CA                     u3311:
  5985  0009CA  EFEB  F004         	goto	l3214
  5986  0009CE                     u3310:
  5987  0009CE  80D8               	bsf	status,0,c
  5988  0009D0  3610               	rlcf	___fladd@grs^0,f,c
  5989  0009D2  EFED  F004         	goto	l3216
  5990  0009D6                     l3214:
  5991  0009D6  90D8               	bcf	status,0,c
  5992  0009D8  3610               	rlcf	___fladd@grs^0,f,c
  5993  0009DA                     l3216:
  5994  0009DA  500F               	movf	___fladd@bexp^0,w,c
  5995  0009DC  B4D8               	btfsc	status,2,c
  5996  0009DE  EFF3  F004         	goto	u3321
  5997  0009E2  EFF5  F004         	goto	u3320
  5998  0009E6                     u3321:
  5999  0009E6  EFF6  F004         	goto	l3220
  6000  0009EA                     u3320:
  6001  0009EA  060F               	decf	___fladd@bexp^0,f,c
  6002  0009EC                     l3220:
  6003  0009EC  AE03               	btfss	(___fladd@b+2)^0,7,c
  6004  0009EE  EFFB  F004         	goto	u3331
  6005  0009F2  EFFD  F004         	goto	u3330
  6006  0009F6                     u3331:
  6007  0009F6  EFD3  F004         	goto	l3204
  6008  0009FA                     u3330:
  6009  0009FA                     l3222:
  6010  0009FA  0E00               	movlw	0
  6011  0009FC  6E0E               	movwf	___fladd@aexp^0,c
  6012  0009FE  AE10               	btfss	___fladd@grs^0,7,c
  6013  000A00  EF04  F005         	goto	u3341
  6014  000A04  EF06  F005         	goto	u3340
  6015  000A08                     u3341:
  6016  000A08  EF1E  F005         	goto	l1073
  6017  000A0C                     u3340:
  6018  000A0C  C010  F009         	movff	___fladd@grs,??___fladd
  6019  000A10  0E7F               	movlw	127
  6020  000A12  1609               	andwf	??___fladd^0,f,c
  6021  000A14  B4D8               	btfsc	status,2,c
  6022  000A16  EF0F  F005         	goto	u3351
  6023  000A1A  EF11  F005         	goto	u3350
  6024  000A1E                     u3351:
  6025  000A1E  EF15  F005         	goto	l1074
  6026  000A22                     u3350:
  6027  000A22                     l3228:
  6028  000A22  0E01               	movlw	1
  6029  000A24  6E0E               	movwf	___fladd@aexp^0,c
  6030  000A26  EF1E  F005         	goto	l1073
  6031  000A2A                     l1074:
  6032  000A2A  A001               	btfss	___fladd@b^0,0,c
  6033  000A2C  EF1A  F005         	goto	u3361
  6034  000A30  EF1C  F005         	goto	u3360
  6035  000A34                     u3361:
  6036  000A34  EF1E  F005         	goto	l1073
  6037  000A38                     u3360:
  6038  000A38  EF11  F005         	goto	l3228
  6039  000A3C                     l1073:
  6040  000A3C  500E               	movf	___fladd@aexp^0,w,c
  6041  000A3E  B4D8               	btfsc	status,2,c
  6042  000A40  EF24  F005         	goto	u3371
  6043  000A44  EF26  F005         	goto	u3370
  6044  000A48                     u3371:
  6045  000A48  EF51  F005         	goto	l3240
  6046  000A4C                     u3370:
  6047  000A4C  0E01               	movlw	1
  6048  000A4E  2601               	addwf	___fladd@b^0,f,c
  6049  000A50  0E00               	movlw	0
  6050  000A52  2202               	addwfc	(___fladd@b+1)^0,f,c
  6051  000A54  2203               	addwfc	(___fladd@b+2)^0,f,c
  6052  000A56  2204               	addwfc	(___fladd@b+3)^0,f,c
  6053  000A58  A004               	btfss	(___fladd@b+3)^0,0,c
  6054  000A5A  EF31  F005         	goto	u3381
  6055  000A5E  EF33  F005         	goto	u3380
  6056  000A62                     u3381:
  6057  000A62  EF51  F005         	goto	l3240
  6058  000A66                     u3380:
  6059  000A66  C001  F009         	movff	___fladd@b,??___fladd
  6060  000A6A  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  6061  000A6E  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  6062  000A72  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  6063  000A76  340C               	rlcf	(??___fladd+3)^0,w,c
  6064  000A78  320C               	rrcf	(??___fladd+3)^0,f,c
  6065  000A7A  320B               	rrcf	(??___fladd+2)^0,f,c
  6066  000A7C  320A               	rrcf	(??___fladd+1)^0,f,c
  6067  000A7E  3209               	rrcf	??___fladd^0,f,c
  6068  000A80  C009  F001         	movff	??___fladd,___fladd@b
  6069  000A84  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  6070  000A88  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  6071  000A8C  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  6072  000A90  280F               	incf	___fladd@bexp^0,w,c
  6073  000A92  B4D8               	btfsc	status,2,c
  6074  000A94  EF4E  F005         	goto	u3391
  6075  000A98  EF50  F005         	goto	u3390
  6076  000A9C                     u3391:
  6077  000A9C  EF51  F005         	goto	l3240
  6078  000AA0                     u3390:
  6079  000AA0  2A0F               	incf	___fladd@bexp^0,f,c
  6080  000AA2                     l3240:
  6081  000AA2  280F               	incf	___fladd@bexp^0,w,c
  6082  000AA4  B4D8               	btfsc	status,2,c
  6083  000AA6  EF57  F005         	goto	u3401
  6084  000AAA  EF59  F005         	goto	u3400
  6085  000AAE                     u3401:
  6086  000AAE  EF61  F005         	goto	l3244
  6087  000AB2                     u3400:
  6088  000AB2  500F               	movf	___fladd@bexp^0,w,c
  6089  000AB4  A4D8               	btfss	status,2,c
  6090  000AB6  EF5F  F005         	goto	u3411
  6091  000ABA  EF61  F005         	goto	u3410
  6092  000ABE                     u3411:
  6093  000ABE  EF73  F005         	goto	l3248
  6094  000AC2                     u3410:
  6095  000AC2                     l3244:
  6096  000AC2  0E00               	movlw	0
  6097  000AC4  6E01               	movwf	___fladd@b^0,c
  6098  000AC6  0E00               	movlw	0
  6099  000AC8  6E02               	movwf	(___fladd@b+1)^0,c
  6100  000ACA  0E00               	movlw	0
  6101  000ACC  6E03               	movwf	(___fladd@b+2)^0,c
  6102  000ACE  0E00               	movlw	0
  6103  000AD0  6E04               	movwf	(___fladd@b+3)^0,c
  6104  000AD2  500F               	movf	___fladd@bexp^0,w,c
  6105  000AD4  A4D8               	btfss	status,2,c
  6106  000AD6  EF6F  F005         	goto	u3421
  6107  000ADA  EF71  F005         	goto	u3420
  6108  000ADE                     u3421:
  6109  000ADE  EF73  F005         	goto	l3248
  6110  000AE2                     u3420:
  6111  000AE2  0E00               	movlw	0
  6112  000AE4  6E0D               	movwf	___fladd@signs^0,c
  6113  000AE6                     l3248:
  6114  000AE6  A00F               	btfss	___fladd@bexp^0,0,c
  6115  000AE8  EF78  F005         	goto	u3431
  6116  000AEC  EF7A  F005         	goto	u3430
  6117  000AF0                     u3431:
  6118  000AF0  EF7D  F005         	goto	l3252
  6119  000AF4                     u3430:
  6120  000AF4  8E03               	bsf	(___fladd@b+2)^0,7,c
  6121  000AF6  EF7E  F005         	goto	l3254
  6122  000AFA                     l3252:
  6123  000AFA  9E03               	bcf	(___fladd@b+2)^0,7,c
  6124  000AFC                     l3254:
  6125  000AFC  90D8               	bcf	status,0,c
  6126  000AFE  300F               	rrcf	___fladd@bexp^0,w,c
  6127  000B00  6E04               	movwf	(___fladd@b+3)^0,c
  6128  000B02  AE0D               	btfss	___fladd@signs^0,7,c
  6129  000B04  EF86  F005         	goto	u3441
  6130  000B08  EF88  F005         	goto	u3440
  6131  000B0C                     u3441:
  6132  000B0C  EF89  F005         	goto	l3260
  6133  000B10                     u3440:
  6134  000B10  8E04               	bsf	(___fladd@b+3)^0,7,c
  6135  000B12                     l3260:
  6136  000B12  C001  F001         	movff	___fladd@b,?___fladd
  6137  000B16  C002  F002         	movff	___fladd@b+1,?___fladd+1
  6138  000B1A  C003  F003         	movff	___fladd@b+2,?___fladd+2
  6139  000B1E  C004  F004         	movff	___fladd@b+3,?___fladd+3
  6140  000B22                     l1056:
  6141  000B22  0012               	return		;funcret
  6142  000B24                     __end_of___fladd:
  6143                           	callstack 0
  6144                           
  6145 ;; *************** function ___awmod *****************
  6146 ;; Defined at:
  6147 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awmod.c"
  6148 ;; Parameters:    Size  Location     Type
  6149 ;;  dividend        2   18[COMRAM] int 
  6150 ;;  divisor         2   20[COMRAM] int 
  6151 ;; Auto vars:     Size  Location     Type
  6152 ;;  sign            1   23[COMRAM] unsigned char 
  6153 ;;  counter         1   22[COMRAM] unsigned char 
  6154 ;; Return value:  Size  Location     Type
  6155 ;;                  2   18[COMRAM] int 
  6156 ;; Registers used:
  6157 ;;		wreg, status,2, status,0
  6158 ;; Tracked objects:
  6159 ;;		On entry : 0/0
  6160 ;;		On exit  : 0/0
  6161 ;;		Unchanged: 0/0
  6162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6163 ;;      Params:         4       0       0       0       0       0       0
  6164 ;;      Locals:         2       0       0       0       0       0       0
  6165 ;;      Temps:          0       0       0       0       0       0       0
  6166 ;;      Totals:         6       0       0       0       0       0       0
  6167 ;;Total ram usage:        6 bytes
  6168 ;; Hardware stack levels used: 1
  6169 ;; This function calls:
  6170 ;;		Nothing
  6171 ;; This function is called by:
  6172 ;;		_Apostando
  6173 ;;		_lcdNumber
  6174 ;;		_dec2bcd
  6175 ;; This function uses a non-reentrant model
  6176 ;;
  6177                           
  6178                           	psect	text38
  6179  001D94                     __ptext38:
  6180                           	callstack 0
  6181  001D94                     ___awmod:
  6182                           	callstack 28
  6183  001D94  0E00               	movlw	0
  6184  001D96  6E18               	movwf	___awmod@sign^0,c
  6185  001D98  BE14               	btfsc	(___awmod@dividend+1)^0,7,c
  6186  001D9A  EFD3  F00E         	goto	u3450
  6187  001D9E  EFD1  F00E         	goto	u3451
  6188  001DA2                     u3451:
  6189  001DA2  EFD9  F00E         	goto	l3272
  6190  001DA6                     u3450:
  6191  001DA6  6C13               	negf	___awmod@dividend^0,c
  6192  001DA8  1E14               	comf	(___awmod@dividend+1)^0,f,c
  6193  001DAA  B0D8               	btfsc	status,0,c
  6194  001DAC  2A14               	incf	(___awmod@dividend+1)^0,f,c
  6195  001DAE  0E01               	movlw	1
  6196  001DB0  6E18               	movwf	___awmod@sign^0,c
  6197  001DB2                     l3272:
  6198  001DB2  BE16               	btfsc	(___awmod@divisor+1)^0,7,c
  6199  001DB4  EFE0  F00E         	goto	u3460
  6200  001DB8  EFDE  F00E         	goto	u3461
  6201  001DBC                     u3461:
  6202  001DBC  EFE4  F00E         	goto	l3276
  6203  001DC0                     u3460:
  6204  001DC0  6C15               	negf	___awmod@divisor^0,c
  6205  001DC2  1E16               	comf	(___awmod@divisor+1)^0,f,c
  6206  001DC4  B0D8               	btfsc	status,0,c
  6207  001DC6  2A16               	incf	(___awmod@divisor+1)^0,f,c
  6208  001DC8                     l3276:
  6209  001DC8  5015               	movf	___awmod@divisor^0,w,c
  6210  001DCA  1016               	iorwf	(___awmod@divisor+1)^0,w,c
  6211  001DCC  B4D8               	btfsc	status,2,c
  6212  001DCE  EFEB  F00E         	goto	u3471
  6213  001DD2  EFED  F00E         	goto	u3470
  6214  001DD6                     u3471:
  6215  001DD6  EF11  F00F         	goto	l3292
  6216  001DDA                     u3470:
  6217  001DDA  0E01               	movlw	1
  6218  001DDC  6E17               	movwf	___awmod@counter^0,c
  6219  001DDE  EFF5  F00E         	goto	l3282
  6220  001DE2                     l3280:
  6221  001DE2  90D8               	bcf	status,0,c
  6222  001DE4  3615               	rlcf	___awmod@divisor^0,f,c
  6223  001DE6  3616               	rlcf	(___awmod@divisor+1)^0,f,c
  6224  001DE8  2A17               	incf	___awmod@counter^0,f,c
  6225  001DEA                     l3282:
  6226  001DEA  AE16               	btfss	(___awmod@divisor+1)^0,7,c
  6227  001DEC  EFFA  F00E         	goto	u3481
  6228  001DF0  EFFC  F00E         	goto	u3480
  6229  001DF4                     u3481:
  6230  001DF4  EFF1  F00E         	goto	l3280
  6231  001DF8                     u3480:
  6232  001DF8                     l3284:
  6233  001DF8  5015               	movf	___awmod@divisor^0,w,c
  6234  001DFA  5C13               	subwf	___awmod@dividend^0,w,c
  6235  001DFC  5016               	movf	(___awmod@divisor+1)^0,w,c
  6236  001DFE  5814               	subwfb	(___awmod@dividend+1)^0,w,c
  6237  001E00  A0D8               	btfss	status,0,c
  6238  001E02  EF05  F00F         	goto	u3491
  6239  001E06  EF07  F00F         	goto	u3490
  6240  001E0A                     u3491:
  6241  001E0A  EF0B  F00F         	goto	l3288
  6242  001E0E                     u3490:
  6243  001E0E  5015               	movf	___awmod@divisor^0,w,c
  6244  001E10  5E13               	subwf	___awmod@dividend^0,f,c
  6245  001E12  5016               	movf	(___awmod@divisor+1)^0,w,c
  6246  001E14  5A14               	subwfb	(___awmod@dividend+1)^0,f,c
  6247  001E16                     l3288:
  6248  001E16  90D8               	bcf	status,0,c
  6249  001E18  3216               	rrcf	(___awmod@divisor+1)^0,f,c
  6250  001E1A  3215               	rrcf	___awmod@divisor^0,f,c
  6251  001E1C  2E17               	decfsz	___awmod@counter^0,f,c
  6252  001E1E  EFFC  F00E         	goto	l3284
  6253  001E22                     l3292:
  6254  001E22  5018               	movf	___awmod@sign^0,w,c
  6255  001E24  B4D8               	btfsc	status,2,c
  6256  001E26  EF17  F00F         	goto	u3501
  6257  001E2A  EF19  F00F         	goto	u3500
  6258  001E2E                     u3501:
  6259  001E2E  EF1D  F00F         	goto	l3296
  6260  001E32                     u3500:
  6261  001E32  6C13               	negf	___awmod@dividend^0,c
  6262  001E34  1E14               	comf	(___awmod@dividend+1)^0,f,c
  6263  001E36  B0D8               	btfsc	status,0,c
  6264  001E38  2A14               	incf	(___awmod@dividend+1)^0,f,c
  6265  001E3A                     l3296:
  6266  001E3A  C013  F013         	movff	___awmod@dividend,?___awmod
  6267  001E3E  C014  F014         	movff	___awmod@dividend+1,?___awmod+1
  6268  001E42  0012               	return		;funcret
  6269  001E44                     __end_of___awmod:
  6270                           	callstack 0
  6271                           
  6272 ;; *************** function _WinAll *****************
  6273 ;; Defined at:
  6274 ;;		line 190 in file "controle.c"
  6275 ;; Parameters:    Size  Location     Type
  6276 ;;		None
  6277 ;; Auto vars:     Size  Location     Type
  6278 ;;  textBaixo      15   77[COMRAM] unsigned char [15]
  6279 ;;  textCima       15   62[COMRAM] unsigned char [15]
  6280 ;; Return value:  Size  Location     Type
  6281 ;;                  1    wreg      void 
  6282 ;; Registers used:
  6283 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6284 ;; Tracked objects:
  6285 ;;		On entry : 0/0
  6286 ;;		On exit  : 0/0
  6287 ;;		Unchanged: 0/0
  6288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6289 ;;      Params:         0       0       0       0       0       0       0
  6290 ;;      Locals:        30       0       0       0       0       0       0
  6291 ;;      Temps:          0       0       0       0       0       0       0
  6292 ;;      Totals:        30       0       0       0       0       0       0
  6293 ;;Total ram usage:       30 bytes
  6294 ;; Hardware stack levels used: 1
  6295 ;; Hardware stack levels required when called: 7
  6296 ;; This function calls:
  6297 ;;		_delay
  6298 ;;		_lcdCommand
  6299 ;;		_printf
  6300 ;;		_saldoTxt
  6301 ;; This function is called by:
  6302 ;;		_Apostando
  6303 ;; This function uses a non-reentrant model
  6304 ;;
  6305                           
  6306                           	psect	text39
  6307  00203C                     __ptext39:
  6308                           	callstack 0
  6309  00203C                     _WinAll:
  6310                           	callstack 21
  6311  00203C                     
  6312                           ;controle.c: 191:     char textCima[15] = "OMG YOU HIT IT";
  6313  00203C  EE21  F094         	lfsr	2,WinAll@F2814
  6314  002040  EE10  F03F         	lfsr	1,WinAll@textCima
  6315  002044  0E0E               	movlw	14
  6316  002046                     u2991:
  6317  002046  CFDB FFE3          	movff	plusw2,plusw1
  6318  00204A  06E8               	decf	wreg,f,c
  6319  00204C  E2FC               	bc	u2991
  6320                           
  6321                           ;controle.c: 192:     char textBaixo[15] = "OMG:+500!!! ";
  6322  00204E  EE21  F085         	lfsr	2,WinAll@F2816
  6323  002052  EE10  F04E         	lfsr	1,WinAll@textBaixo
  6324  002056  0E0E               	movlw	14
  6325  002058                     u3001:
  6326  002058  CFDB FFE3          	movff	plusw2,plusw1
  6327  00205C  06E8               	decf	wreg,f,c
  6328  00205E  E2FC               	bc	u3001
  6329  002060                     
  6330                           ;controle.c: 193:     lcdCommand(0x80 | (0));
  6331  002060  0E80               	movlw	128
  6332  002062  EC65  F015         	call	_lcdCommand
  6333  002066                     
  6334                           ;controle.c: 194:     printf(textCima);
  6335  002066  0E3F               	movlw	low WinAll@textCima
  6336  002068  6E0F               	movwf	printf@text^0,c
  6337  00206A  0E00               	movlw	high WinAll@textCima
  6338  00206C  6E10               	movwf	(printf@text+1)^0,c
  6339  00206E  ECC9  F013         	call	_printf	;wreg free
  6340  002072                     
  6341                           ;controle.c: 195:     lcdCommand(0xC0 | (0));
  6342  002072  0EC0               	movlw	192
  6343  002074  EC65  F015         	call	_lcdCommand
  6344  002078                     
  6345                           ;controle.c: 196:     printf(textBaixo);
  6346  002078  0E4E               	movlw	low WinAll@textBaixo
  6347  00207A  6E0F               	movwf	printf@text^0,c
  6348  00207C  0E00               	movlw	high WinAll@textBaixo
  6349  00207E  6E10               	movwf	(printf@text+1)^0,c
  6350  002080  ECC9  F013         	call	_printf	;wreg free
  6351  002084                     
  6352                           ;controle.c: 198:     delay();
  6353  002084  EC46  F013         	call	_delay	;wreg free
  6354  002088                     
  6355                           ;controle.c: 199:     delay();
  6356  002088  EC46  F013         	call	_delay	;wreg free
  6357  00208C                     
  6358                           ;controle.c: 200:     delay();
  6359  00208C  EC46  F013         	call	_delay	;wreg free
  6360  002090                     
  6361                           ;controle.c: 201:     lcdCommand(0x01);
  6362  002090  0E01               	movlw	1
  6363  002092  EC65  F015         	call	_lcdCommand
  6364  002096                     
  6365                           ;controle.c: 202:     saldo += 500;
  6366  002096  0100               	movlb	0	; () banked
  6367  002098  0EF4               	movlw	244
  6368  00209A  27B1               	addwf	_saldo& (0+255),f,b
  6369  00209C  0E01               	movlw	1
  6370  00209E  23B2               	addwfc	(_saldo+1)& (0+255),f,b
  6371  0020A0                     
  6372                           ; BSR set to: 0
  6373                           ;controle.c: 203:     saldoTxt();
  6374  0020A0  EC76  F00F         	call	_saldoTxt	;wreg free
  6375  0020A4  0012               	return		;funcret
  6376  0020A6                     __end_of_WinAll:
  6377                           	callstack 0
  6378                           
  6379 ;; *************** function _Win2x *****************
  6380 ;; Defined at:
  6381 ;;		line 206 in file "controle.c"
  6382 ;; Parameters:    Size  Location     Type
  6383 ;;		None
  6384 ;; Auto vars:     Size  Location     Type
  6385 ;;  textCima       21   62[COMRAM] unsigned char [21]
  6386 ;;  textBaixo      15   83[COMRAM] unsigned char [15]
  6387 ;; Return value:  Size  Location     Type
  6388 ;;                  1    wreg      void 
  6389 ;; Registers used:
  6390 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6391 ;; Tracked objects:
  6392 ;;		On entry : 0/0
  6393 ;;		On exit  : 0/0
  6394 ;;		Unchanged: 0/0
  6395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6396 ;;      Params:         0       0       0       0       0       0       0
  6397 ;;      Locals:        36       0       0       0       0       0       0
  6398 ;;      Temps:          0       0       0       0       0       0       0
  6399 ;;      Totals:        36       0       0       0       0       0       0
  6400 ;;Total ram usage:       36 bytes
  6401 ;; Hardware stack levels used: 1
  6402 ;; Hardware stack levels required when called: 7
  6403 ;; This function calls:
  6404 ;;		_delay
  6405 ;;		_lcdCommand
  6406 ;;		_printf
  6407 ;;		_saldoTxt
  6408 ;; This function is called by:
  6409 ;;		_Apostando
  6410 ;; This function uses a non-reentrant model
  6411 ;;
  6412                           
  6413                           	psect	text40
  6414  0020A6                     __ptext40:
  6415                           	callstack 0
  6416  0020A6                     _Win2x:
  6417                           	callstack 21
  6418  0020A6                     
  6419                           ;controle.c: 207:     char textCima[21] = "HOLY MOLY YOU WIN 2X";
  6420  0020A6  EE21  F000         	lfsr	2,Win2x@F2819
  6421  0020AA  EE10  F03F         	lfsr	1,Win2x@textCima
  6422  0020AE  0E14               	movlw	20
  6423  0020B0                     u3011:
  6424  0020B0  CFDB FFE3          	movff	plusw2,plusw1
  6425  0020B4  06E8               	decf	wreg,f,c
  6426  0020B6  E2FC               	bc	u3011
  6427                           
  6428                           ;controle.c: 208:     char textBaixo[15] = "recebeu: +200 ";
  6429  0020B8  EE21  F076         	lfsr	2,Win2x@F2821
  6430  0020BC  EE10  F054         	lfsr	1,Win2x@textBaixo
  6431  0020C0  0E0E               	movlw	14
  6432  0020C2                     u3021:
  6433  0020C2  CFDB FFE3          	movff	plusw2,plusw1
  6434  0020C6  06E8               	decf	wreg,f,c
  6435  0020C8  E2FC               	bc	u3021
  6436  0020CA                     
  6437                           ;controle.c: 209:     lcdCommand(0x80 | (0));
  6438  0020CA  0E80               	movlw	128
  6439  0020CC  EC65  F015         	call	_lcdCommand
  6440  0020D0                     
  6441                           ;controle.c: 210:     printf(textCima);
  6442  0020D0  0E3F               	movlw	low Win2x@textCima
  6443  0020D2  6E0F               	movwf	printf@text^0,c
  6444  0020D4  0E00               	movlw	high Win2x@textCima
  6445  0020D6  6E10               	movwf	(printf@text+1)^0,c
  6446  0020D8  ECC9  F013         	call	_printf	;wreg free
  6447  0020DC                     
  6448                           ;controle.c: 211:     lcdCommand(0xC0 | (0));
  6449  0020DC  0EC0               	movlw	192
  6450  0020DE  EC65  F015         	call	_lcdCommand
  6451  0020E2                     
  6452                           ;controle.c: 212:     printf(textBaixo);
  6453  0020E2  0E54               	movlw	low Win2x@textBaixo
  6454  0020E4  6E0F               	movwf	printf@text^0,c
  6455  0020E6  0E00               	movlw	high Win2x@textBaixo
  6456  0020E8  6E10               	movwf	(printf@text+1)^0,c
  6457  0020EA  ECC9  F013         	call	_printf	;wreg free
  6458  0020EE                     
  6459                           ;controle.c: 214:     delay();
  6460  0020EE  EC46  F013         	call	_delay	;wreg free
  6461  0020F2                     
  6462                           ;controle.c: 215:     delay();
  6463  0020F2  EC46  F013         	call	_delay	;wreg free
  6464  0020F6                     
  6465                           ;controle.c: 216:     delay();
  6466  0020F6  EC46  F013         	call	_delay	;wreg free
  6467  0020FA                     
  6468                           ;controle.c: 217:     lcdCommand(0x01);
  6469  0020FA  0E01               	movlw	1
  6470  0020FC  EC65  F015         	call	_lcdCommand
  6471  002100                     
  6472                           ;controle.c: 218:     saldo += 300;
  6473  002100  0100               	movlb	0	; () banked
  6474  002102  0E2C               	movlw	44
  6475  002104  27B1               	addwf	_saldo& (0+255),f,b
  6476  002106  0E01               	movlw	1
  6477  002108  23B2               	addwfc	(_saldo+1)& (0+255),f,b
  6478  00210A                     
  6479                           ; BSR set to: 0
  6480                           ;controle.c: 219:     saldoTxt();
  6481  00210A  EC76  F00F         	call	_saldoTxt	;wreg free
  6482  00210E  0012               	return		;funcret
  6483  002110                     __end_of_Win2x:
  6484                           	callstack 0
  6485                           
  6486 ;; *************** function _Win1x *****************
  6487 ;; Defined at:
  6488 ;;		line 222 in file "controle.c"
  6489 ;; Parameters:    Size  Location     Type
  6490 ;;		None
  6491 ;; Auto vars:     Size  Location     Type
  6492 ;;  textBaixo      15   77[COMRAM] unsigned char [15]
  6493 ;;  textCima       15   62[COMRAM] unsigned char [15]
  6494 ;; Return value:  Size  Location     Type
  6495 ;;                  1    wreg      void 
  6496 ;; Registers used:
  6497 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6498 ;; Tracked objects:
  6499 ;;		On entry : 0/0
  6500 ;;		On exit  : 0/0
  6501 ;;		Unchanged: 0/0
  6502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6503 ;;      Params:         0       0       0       0       0       0       0
  6504 ;;      Locals:        30       0       0       0       0       0       0
  6505 ;;      Temps:          0       0       0       0       0       0       0
  6506 ;;      Totals:        30       0       0       0       0       0       0
  6507 ;;Total ram usage:       30 bytes
  6508 ;; Hardware stack levels used: 1
  6509 ;; Hardware stack levels required when called: 7
  6510 ;; This function calls:
  6511 ;;		_delay
  6512 ;;		_lcdCommand
  6513 ;;		_printf
  6514 ;;		_saldoTxt
  6515 ;; This function is called by:
  6516 ;;		_Apostando
  6517 ;; This function uses a non-reentrant model
  6518 ;;
  6519                           
  6520                           	psect	text41
  6521  002110                     __ptext41:
  6522                           	callstack 0
  6523  002110                     _Win1x:
  6524                           	callstack 21
  6525  002110                     
  6526                           ;controle.c: 223:     char textCima[15] = "OMG YOU WIN 1x";
  6527  002110  EE21  F067         	lfsr	2,Win1x@F2824
  6528  002114  EE10  F03F         	lfsr	1,Win1x@textCima
  6529  002118  0E0E               	movlw	14
  6530  00211A                     u3031:
  6531  00211A  CFDB FFE3          	movff	plusw2,plusw1
  6532  00211E  06E8               	decf	wreg,f,c
  6533  002120  E2FC               	bc	u3031
  6534                           
  6535                           ;controle.c: 224:     char textBaixo[15] = "recebeu: +100 ";
  6536  002122  EE21  F058         	lfsr	2,Win1x@F2826
  6537  002126  EE10  F04E         	lfsr	1,Win1x@textBaixo
  6538  00212A  0E0E               	movlw	14
  6539  00212C                     u3041:
  6540  00212C  CFDB FFE3          	movff	plusw2,plusw1
  6541  002130  06E8               	decf	wreg,f,c
  6542  002132  E2FC               	bc	u3041
  6543  002134                     
  6544                           ;controle.c: 225:     lcdCommand(0x80 | (0));
  6545  002134  0E80               	movlw	128
  6546  002136  EC65  F015         	call	_lcdCommand
  6547  00213A                     
  6548                           ;controle.c: 226:     printf(textCima);
  6549  00213A  0E3F               	movlw	low Win1x@textCima
  6550  00213C  6E0F               	movwf	printf@text^0,c
  6551  00213E  0E00               	movlw	high Win1x@textCima
  6552  002140  6E10               	movwf	(printf@text+1)^0,c
  6553  002142  ECC9  F013         	call	_printf	;wreg free
  6554  002146                     
  6555                           ;controle.c: 227:     lcdCommand(0xC0 | (0));
  6556  002146  0EC0               	movlw	192
  6557  002148  EC65  F015         	call	_lcdCommand
  6558  00214C                     
  6559                           ;controle.c: 228:     printf(textBaixo);
  6560  00214C  0E4E               	movlw	low Win1x@textBaixo
  6561  00214E  6E0F               	movwf	printf@text^0,c
  6562  002150  0E00               	movlw	high Win1x@textBaixo
  6563  002152  6E10               	movwf	(printf@text+1)^0,c
  6564  002154  ECC9  F013         	call	_printf	;wreg free
  6565  002158                     
  6566                           ;controle.c: 230:     delay();
  6567  002158  EC46  F013         	call	_delay	;wreg free
  6568  00215C                     
  6569                           ;controle.c: 231:     delay();
  6570  00215C  EC46  F013         	call	_delay	;wreg free
  6571  002160                     
  6572                           ;controle.c: 232:     delay();
  6573  002160  EC46  F013         	call	_delay	;wreg free
  6574  002164                     
  6575                           ;controle.c: 233:     lcdCommand(0x01);
  6576  002164  0E01               	movlw	1
  6577  002166  EC65  F015         	call	_lcdCommand
  6578  00216A                     
  6579                           ;controle.c: 234:     saldo += 200;
  6580  00216A  0EC8               	movlw	200
  6581  00216C  0100               	movlb	0	; () banked
  6582  00216E  27B1               	addwf	_saldo& (0+255),f,b
  6583  002170  0E00               	movlw	0
  6584  002172  23B2               	addwfc	(_saldo+1)& (0+255),f,b
  6585  002174                     
  6586                           ; BSR set to: 0
  6587                           ;controle.c: 235:     saldoTxt();
  6588  002174  EC76  F00F         	call	_saldoTxt	;wreg free
  6589  002178  0012               	return		;funcret
  6590  00217A                     __end_of_Win1x:
  6591                           	callstack 0
  6592                           
  6593 ;; *************** function _Lose *****************
  6594 ;; Defined at:
  6595 ;;		line 175 in file "controle.c"
  6596 ;; Parameters:    Size  Location     Type
  6597 ;;		None
  6598 ;; Auto vars:     Size  Location     Type
  6599 ;;  textBaixo      15   77[COMRAM] unsigned char [15]
  6600 ;;  textCima       15   62[COMRAM] unsigned char [15]
  6601 ;; Return value:  Size  Location     Type
  6602 ;;                  1    wreg      void 
  6603 ;; Registers used:
  6604 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6605 ;; Tracked objects:
  6606 ;;		On entry : 0/0
  6607 ;;		On exit  : 0/0
  6608 ;;		Unchanged: 0/0
  6609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6610 ;;      Params:         0       0       0       0       0       0       0
  6611 ;;      Locals:        30       0       0       0       0       0       0
  6612 ;;      Temps:          0       0       0       0       0       0       0
  6613 ;;      Totals:        30       0       0       0       0       0       0
  6614 ;;Total ram usage:       30 bytes
  6615 ;; Hardware stack levels used: 1
  6616 ;; Hardware stack levels required when called: 7
  6617 ;; This function calls:
  6618 ;;		_delay
  6619 ;;		_lcdCommand
  6620 ;;		_printf
  6621 ;;		_saldoTxt
  6622 ;; This function is called by:
  6623 ;;		_Apostando
  6624 ;; This function uses a non-reentrant model
  6625 ;;
  6626                           
  6627                           	psect	text42
  6628  00229A                     __ptext42:
  6629                           	callstack 0
  6630  00229A                     _Lose:
  6631                           	callstack 21
  6632  00229A                     
  6633                           ;controle.c: 176:     char textCima[15] = "YOU LOSE";
  6634  00229A  EE21  F0B2         	lfsr	2,Lose@F2809
  6635  00229E  EE10  F03F         	lfsr	1,Lose@textCima
  6636  0022A2  0E0E               	movlw	14
  6637  0022A4                     u2971:
  6638  0022A4  CFDB FFE3          	movff	plusw2,plusw1
  6639  0022A8  06E8               	decf	wreg,f,c
  6640  0022AA  E2FC               	bc	u2971
  6641                           
  6642                           ;controle.c: 177:     char textBaixo[15] = "perdeu: -100";
  6643  0022AC  EE21  F0A3         	lfsr	2,Lose@F2811
  6644  0022B0  EE10  F04E         	lfsr	1,Lose@textBaixo
  6645  0022B4  0E0E               	movlw	14
  6646  0022B6                     u2981:
  6647  0022B6  CFDB FFE3          	movff	plusw2,plusw1
  6648  0022BA  06E8               	decf	wreg,f,c
  6649  0022BC  E2FC               	bc	u2981
  6650  0022BE                     
  6651                           ;controle.c: 178:     lcdCommand(0x80 | (0));
  6652  0022BE  0E80               	movlw	128
  6653  0022C0  EC65  F015         	call	_lcdCommand
  6654  0022C4                     
  6655                           ;controle.c: 179:     printf(textCima);
  6656  0022C4  0E3F               	movlw	low Lose@textCima
  6657  0022C6  6E0F               	movwf	printf@text^0,c
  6658  0022C8  0E00               	movlw	high Lose@textCima
  6659  0022CA  6E10               	movwf	(printf@text+1)^0,c
  6660  0022CC  ECC9  F013         	call	_printf	;wreg free
  6661  0022D0                     
  6662                           ;controle.c: 180:     lcdCommand(0xC0 | (0));
  6663  0022D0  0EC0               	movlw	192
  6664  0022D2  EC65  F015         	call	_lcdCommand
  6665  0022D6                     
  6666                           ;controle.c: 181:     printf(textBaixo);
  6667  0022D6  0E4E               	movlw	low Lose@textBaixo
  6668  0022D8  6E0F               	movwf	printf@text^0,c
  6669  0022DA  0E00               	movlw	high Lose@textBaixo
  6670  0022DC  6E10               	movwf	(printf@text+1)^0,c
  6671  0022DE  ECC9  F013         	call	_printf	;wreg free
  6672  0022E2                     
  6673                           ;controle.c: 183:     delay();
  6674  0022E2  EC46  F013         	call	_delay	;wreg free
  6675  0022E6                     
  6676                           ;controle.c: 184:     delay();
  6677  0022E6  EC46  F013         	call	_delay	;wreg free
  6678  0022EA                     
  6679                           ;controle.c: 185:     delay();
  6680  0022EA  EC46  F013         	call	_delay	;wreg free
  6681  0022EE                     
  6682                           ;controle.c: 186:     lcdCommand(0x01);
  6683  0022EE  0E01               	movlw	1
  6684  0022F0  EC65  F015         	call	_lcdCommand
  6685  0022F4                     
  6686                           ;controle.c: 187:     saldoTxt();
  6687  0022F4  EC76  F00F         	call	_saldoTxt	;wreg free
  6688  0022F8  0012               	return		;funcret
  6689  0022FA                     __end_of_Lose:
  6690                           	callstack 0
  6691                           
  6692 ;; *************** function _saldoTxt *****************
  6693 ;; Defined at:
  6694 ;;		line 127 in file "controle.c"
  6695 ;; Parameters:    Size  Location     Type
  6696 ;;		None
  6697 ;; Auto vars:     Size  Location     Type
  6698 ;;  textBaixo      10   52[COMRAM] unsigned char [10]
  6699 ;;  textCima        7   45[COMRAM] unsigned char [7]
  6700 ;; Return value:  Size  Location     Type
  6701 ;;                  1    wreg      void 
  6702 ;; Registers used:
  6703 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6704 ;; Tracked objects:
  6705 ;;		On entry : 0/0
  6706 ;;		On exit  : 0/0
  6707 ;;		Unchanged: 0/0
  6708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6709 ;;      Params:         0       0       0       0       0       0       0
  6710 ;;      Locals:        17       0       0       0       0       0       0
  6711 ;;      Temps:          0       0       0       0       0       0       0
  6712 ;;      Totals:        17       0       0       0       0       0       0
  6713 ;;Total ram usage:       17 bytes
  6714 ;; Hardware stack levels used: 1
  6715 ;; Hardware stack levels required when called: 6
  6716 ;; This function calls:
  6717 ;;		_delay
  6718 ;;		_itoa
  6719 ;;		_lcdCommand
  6720 ;;		_printf
  6721 ;; This function is called by:
  6722 ;;		_main
  6723 ;;		_GameOver
  6724 ;;		_Lose
  6725 ;;		_WinAll
  6726 ;;		_Win2x
  6727 ;;		_Win1x
  6728 ;; This function uses a non-reentrant model
  6729 ;;
  6730                           
  6731                           	psect	text43
  6732  001EEC                     __ptext43:
  6733                           	callstack 0
  6734  001EEC                     _saldoTxt:
  6735                           	callstack 24
  6736  001EEC                     
  6737                           ;controle.c: 129:     lcdCommand(0x01);
  6738  001EEC  0E01               	movlw	1
  6739  001EEE  EC65  F015         	call	_lcdCommand
  6740  001EF2                     
  6741                           ;controle.c: 130:     char textCima[7] = "Saldo: ";
  6742  001EF2  EE20  F0AA         	lfsr	2,saldoTxt@F2794
  6743  001EF6  EE10  F02E         	lfsr	1,saldoTxt@textCima
  6744  001EFA  0E06               	movlw	6
  6745  001EFC                     u2811:
  6746  001EFC  CFDB FFE3          	movff	plusw2,plusw1
  6747  001F00  06E8               	decf	wreg,f,c
  6748  001F02  E2FC               	bc	u2811
  6749  001F04                     
  6750                           ;controle.c: 131:     char textBaixo[10] = "";
  6751  001F04  EE20  F035         	lfsr	2,saldoTxt@textBaixo
  6752  001F08  0E09               	movlw	9
  6753  001F0A                     u2821:
  6754  001F0A  6ADE               	clrf	postinc2,c
  6755  001F0C  06E8               	decf	wreg,f,c
  6756  001F0E  E2FD               	bc	u2821
  6757  001F10                     
  6758                           ;controle.c: 132:     itoa(saldo, textBaixo, 10);
  6759  001F10  C0B1  F01F         	movff	_saldo,itoa@value
  6760  001F14  C0B2  F020         	movff	_saldo+1,itoa@value+1
  6761  001F18  0E35               	movlw	low saldoTxt@textBaixo
  6762  001F1A  6E21               	movwf	itoa@result^0,c
  6763  001F1C  0E00               	movlw	high saldoTxt@textBaixo
  6764  001F1E  6E22               	movwf	(itoa@result+1)^0,c
  6765  001F20  0E00               	movlw	0
  6766  001F22  6E24               	movwf	(itoa@basea+1)^0,c
  6767  001F24  0E0A               	movlw	10
  6768  001F26  6E23               	movwf	itoa@basea^0,c
  6769  001F28  EC5A  F00B         	call	_itoa	;wreg free
  6770  001F2C                     
  6771                           ;controle.c: 133:     lcdCommand(0x80 | (0));
  6772  001F2C  0E80               	movlw	128
  6773  001F2E  EC65  F015         	call	_lcdCommand
  6774  001F32                     
  6775                           ;controle.c: 134:     printf(textCima);
  6776  001F32  0E2E               	movlw	low saldoTxt@textCima
  6777  001F34  6E0F               	movwf	printf@text^0,c
  6778  001F36  0E00               	movlw	high saldoTxt@textCima
  6779  001F38  6E10               	movwf	(printf@text+1)^0,c
  6780  001F3A  ECC9  F013         	call	_printf	;wreg free
  6781  001F3E                     
  6782                           ;controle.c: 135:     lcdCommand(0xC0 | (0));
  6783  001F3E  0EC0               	movlw	192
  6784  001F40  EC65  F015         	call	_lcdCommand
  6785  001F44                     
  6786                           ;controle.c: 136:     printf(textBaixo);
  6787  001F44  0E35               	movlw	low saldoTxt@textBaixo
  6788  001F46  6E0F               	movwf	printf@text^0,c
  6789  001F48  0E00               	movlw	high saldoTxt@textBaixo
  6790  001F4A  6E10               	movwf	(printf@text+1)^0,c
  6791  001F4C  ECC9  F013         	call	_printf	;wreg free
  6792  001F50                     
  6793                           ;controle.c: 138:     delay();
  6794  001F50  EC46  F013         	call	_delay	;wreg free
  6795  001F54                     
  6796                           ;controle.c: 139:     delay();
  6797  001F54  EC46  F013         	call	_delay	;wreg free
  6798  001F58                     
  6799                           ;controle.c: 140:     delay();
  6800  001F58  EC46  F013         	call	_delay	;wreg free
  6801  001F5C                     
  6802                           ;controle.c: 142:     lcdCommand(0x01);
  6803  001F5C  0E01               	movlw	1
  6804  001F5E  EC65  F015         	call	_lcdCommand
  6805  001F62  0012               	return		;funcret
  6806  001F64                     __end_of_saldoTxt:
  6807                           	callstack 0
  6808                           
  6809 ;; *************** function _printf *****************
  6810 ;; Defined at:
  6811 ;;		line 27 in file "controle.c"
  6812 ;; Parameters:    Size  Location     Type
  6813 ;;  text            2   14[COMRAM] PTR unsigned char 
  6814 ;;		 -> apostandoTxtProgress@text2(15), apostandoTxtProgress@text(15), Win1x@textBaixo(15), Win1x@textCima(15), 
  6815 ;;		 -> Win2x@textBaixo(15), Win2x@textCima(21), WinAll@textBaixo(15), WinAll@textCima(15), 
  6816 ;;		 -> Lose@textBaixo(15), Lose@textCima(15), GameOver@textBaixo(20), GameOver@textCima(15), 
  6817 ;;		 -> waitTxtProgress@textBaixo(15), waitTxtProgress@textCima(15), saldoTxt@textBaixo(10), saldoTxt@textCima(7), 
  6818 ;;		 -> apostaTxt@textBaixo(15), apostaTxt@textCima(15), textInit@textBaixo(17), textInit@textCima(12), 
  6819 ;; Auto vars:     Size  Location     Type
  6820 ;;  i               1   16[COMRAM] unsigned char 
  6821 ;; Return value:  Size  Location     Type
  6822 ;;                  1    wreg      void 
  6823 ;; Registers used:
  6824 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6825 ;; Tracked objects:
  6826 ;;		On entry : 0/0
  6827 ;;		On exit  : 0/0
  6828 ;;		Unchanged: 0/0
  6829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6830 ;;      Params:         2       0       0       0       0       0       0
  6831 ;;      Locals:         1       0       0       0       0       0       0
  6832 ;;      Temps:          0       0       0       0       0       0       0
  6833 ;;      Totals:         3       0       0       0       0       0       0
  6834 ;;Total ram usage:        3 bytes
  6835 ;; Hardware stack levels used: 1
  6836 ;; Hardware stack levels required when called: 5
  6837 ;; This function calls:
  6838 ;;		_lcdChar
  6839 ;; This function is called by:
  6840 ;;		_textInit
  6841 ;;		_saldoTxt
  6842 ;;		_waitTxtProgress
  6843 ;;		_GameOver
  6844 ;;		_Lose
  6845 ;;		_WinAll
  6846 ;;		_Win2x
  6847 ;;		_Win1x
  6848 ;;		_apostandoTxtProgress
  6849 ;;		_apostaTxt
  6850 ;; This function uses a non-reentrant model
  6851 ;;
  6852                           
  6853                           	psect	text44
  6854  002792                     __ptext44:
  6855                           	callstack 0
  6856  002792                     _printf:
  6857                           	callstack 24
  6858  002792                     
  6859                           ;controle.c: 28:     char i = 0;
  6860  002792  0E00               	movlw	0
  6861  002794  6E11               	movwf	printf@i^0,c
  6862                           
  6863                           ;controle.c: 29:     while (text[i] != '\0') {
  6864  002796  EFD7  F013         	goto	l2674
  6865  00279A                     l2670:
  6866                           
  6867                           ;controle.c: 30:         lcdChar(text[i]);
  6868  00279A  5011               	movf	printf@i^0,w,c
  6869  00279C  240F               	addwf	printf@text^0,w,c
  6870  00279E  6ED9               	movwf	fsr2l,c
  6871  0027A0  0E00               	movlw	0
  6872  0027A2  2010               	addwfc	(printf@text+1)^0,w,c
  6873  0027A4  6EDA               	movwf	fsr2h,c
  6874  0027A6  50DF               	movf	indf2,w,c
  6875  0027A8  EC56  F015         	call	_lcdChar
  6876  0027AC                     
  6877                           ;controle.c: 31:         i++;
  6878  0027AC  2A11               	incf	printf@i^0,f,c
  6879  0027AE                     l2674:
  6880                           
  6881                           ;controle.c: 29:     while (text[i] != '\0') {
  6882  0027AE  5011               	movf	printf@i^0,w,c
  6883  0027B0  240F               	addwf	printf@text^0,w,c
  6884  0027B2  6ED9               	movwf	fsr2l,c
  6885  0027B4  0E00               	movlw	0
  6886  0027B6  2010               	addwfc	(printf@text+1)^0,w,c
  6887  0027B8  6EDA               	movwf	fsr2h,c
  6888  0027BA  50DF               	movf	indf2,w,c
  6889  0027BC  A4D8               	btfss	status,2,c
  6890  0027BE  EFE3  F013         	goto	u2651
  6891  0027C2  EFE5  F013         	goto	u2650
  6892  0027C6                     u2651:
  6893  0027C6  EFCD  F013         	goto	l2670
  6894  0027CA                     u2650:
  6895  0027CA  0012               	return		;funcret
  6896  0027CC                     __end_of_printf:
  6897                           	callstack 0
  6898                           
  6899 ;; *************** function _lcdChar *****************
  6900 ;; Defined at:
  6901 ;;		line 52 in file "lcd.c"
  6902 ;; Parameters:    Size  Location     Type
  6903 ;;  value           1    wreg     unsigned char 
  6904 ;; Auto vars:     Size  Location     Type
  6905 ;;  value           1   13[COMRAM] unsigned char 
  6906 ;; Return value:  Size  Location     Type
  6907 ;;                  1    wreg      void 
  6908 ;; Registers used:
  6909 ;;		wreg, status,2, status,0, cstack
  6910 ;; Tracked objects:
  6911 ;;		On entry : 0/0
  6912 ;;		On exit  : 0/0
  6913 ;;		Unchanged: 0/0
  6914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6915 ;;      Params:         0       0       0       0       0       0       0
  6916 ;;      Locals:         1       0       0       0       0       0       0
  6917 ;;      Temps:          0       0       0       0       0       0       0
  6918 ;;      Totals:         1       0       0       0       0       0       0
  6919 ;;Total ram usage:        1 bytes
  6920 ;; Hardware stack levels used: 1
  6921 ;; Hardware stack levels required when called: 4
  6922 ;; This function calls:
  6923 ;;		_delayMicro
  6924 ;;		_pushByte
  6925 ;; This function is called by:
  6926 ;;		_printf
  6927 ;;		_lcdString
  6928 ;;		_lcdNumber
  6929 ;; This function uses a non-reentrant model
  6930 ;;
  6931                           
  6932                           	psect	text45
  6933  002AAC                     __ptext45:
  6934                           	callstack 0
  6935  002AAC                     _lcdChar:
  6936                           	callstack 24
  6937                           
  6938                           ;incstack = 0
  6939                           ;lcdChar@value stored from wreg
  6940  002AAC  6E0E               	movwf	lcdChar@value^0,c
  6941  002AAE                     
  6942                           ;lcd.c: 53:  pushByte(value, 1);
  6943  002AAE  0E00               	movlw	0
  6944  002AB0  6E0B               	movwf	(pushByte@rs+1)^0,c
  6945  002AB2  0E01               	movlw	1
  6946  002AB4  6E0A               	movwf	pushByte@rs^0,c
  6947  002AB6  500E               	movf	lcdChar@value^0,w,c
  6948  002AB8  ECAB  F011         	call	_pushByte
  6949  002ABC                     
  6950                           ;lcd.c: 54:  delayMicro(80);
  6951  002ABC  0E00               	movlw	0
  6952  002ABE  6E02               	movwf	(delayMicro@a+1)^0,c
  6953  002AC0  0E50               	movlw	80
  6954  002AC2  6E01               	movwf	delayMicro@a^0,c
  6955  002AC4  EC7A  F015         	call	_delayMicro	;wreg free
  6956  002AC8  0012               	return		;funcret
  6957  002ACA                     __end_of_lcdChar:
  6958                           	callstack 0
  6959                           
  6960 ;; *************** function _lcdCommand *****************
  6961 ;; Defined at:
  6962 ;;		line 40 in file "lcd.c"
  6963 ;; Parameters:    Size  Location     Type
  6964 ;;  value           1    wreg     unsigned char 
  6965 ;; Auto vars:     Size  Location     Type
  6966 ;;  value           1   13[COMRAM] unsigned char 
  6967 ;; Return value:  Size  Location     Type
  6968 ;;                  1    wreg      void 
  6969 ;; Registers used:
  6970 ;;		wreg, status,2, status,0, cstack
  6971 ;; Tracked objects:
  6972 ;;		On entry : 0/0
  6973 ;;		On exit  : 0/0
  6974 ;;		Unchanged: 0/0
  6975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6976 ;;      Params:         0       0       0       0       0       0       0
  6977 ;;      Locals:         1       0       0       0       0       0       0
  6978 ;;      Temps:          0       0       0       0       0       0       0
  6979 ;;      Totals:         1       0       0       0       0       0       0
  6980 ;;Total ram usage:        1 bytes
  6981 ;; Hardware stack levels used: 1
  6982 ;; Hardware stack levels required when called: 4
  6983 ;; This function calls:
  6984 ;;		_delayMili
  6985 ;;		_pushByte
  6986 ;; This function is called by:
  6987 ;;		_main
  6988 ;;		_lcdInit
  6989 ;;		_textInit
  6990 ;;		_saldoTxt
  6991 ;;		_waitTxtProgress
  6992 ;;		_GameOver
  6993 ;;		_Lose
  6994 ;;		_WinAll
  6995 ;;		_Win2x
  6996 ;;		_Win1x
  6997 ;;		_apostandoTxtProgress
  6998 ;;		_lcdPosition
  6999 ;;		_apostaTxt
  7000 ;; This function uses a non-reentrant model
  7001 ;;
  7002                           
  7003                           	psect	text46
  7004  002ACA                     __ptext46:
  7005                           	callstack 0
  7006  002ACA                     _lcdCommand:
  7007                           	callstack 25
  7008                           
  7009                           ;incstack = 0
  7010                           ;lcdCommand@value stored from wreg
  7011  002ACA  6E0E               	movwf	lcdCommand@value^0,c
  7012  002ACC                     
  7013                           ;lcd.c: 41:  pushByte(value, 0);
  7014  002ACC  0E00               	movlw	0
  7015  002ACE  6E0B               	movwf	(pushByte@rs+1)^0,c
  7016  002AD0  0E00               	movlw	0
  7017  002AD2  6E0A               	movwf	pushByte@rs^0,c
  7018  002AD4  500E               	movf	lcdCommand@value^0,w,c
  7019  002AD6  ECAB  F011         	call	_pushByte
  7020                           
  7021                           ;lcd.c: 42:  delayMili(2);
  7022  002ADA  0E00               	movlw	0
  7023  002ADC  6E02               	movwf	(delayMili@a+1)^0,c
  7024  002ADE  0E02               	movlw	2
  7025  002AE0  6E01               	movwf	delayMili@a^0,c
  7026  002AE2  EC82  F014         	call	_delayMili	;wreg free
  7027  002AE6  0012               	return		;funcret
  7028  002AE8                     __end_of_lcdCommand:
  7029                           	callstack 0
  7030                           
  7031 ;; *************** function _pushByte *****************
  7032 ;; Defined at:
  7033 ;;		line 31 in file "lcd.c"
  7034 ;; Parameters:    Size  Location     Type
  7035 ;;  value           1    wreg     unsigned char 
  7036 ;;  rs              2    9[COMRAM] int 
  7037 ;; Auto vars:     Size  Location     Type
  7038 ;;  value           1   12[COMRAM] unsigned char 
  7039 ;; Return value:  Size  Location     Type
  7040 ;;                  1    wreg      void 
  7041 ;; Registers used:
  7042 ;;		wreg, status,2, status,0, cstack
  7043 ;; Tracked objects:
  7044 ;;		On entry : 0/0
  7045 ;;		On exit  : 0/0
  7046 ;;		Unchanged: 0/0
  7047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7048 ;;      Params:         2       0       0       0       0       0       0
  7049 ;;      Locals:         1       0       0       0       0       0       0
  7050 ;;      Temps:          1       0       0       0       0       0       0
  7051 ;;      Totals:         4       0       0       0       0       0       0
  7052 ;;Total ram usage:        4 bytes
  7053 ;; Hardware stack levels used: 1
  7054 ;; Hardware stack levels required when called: 3
  7055 ;; This function calls:
  7056 ;;		_digitalWrite
  7057 ;;		_pulseEnablePin
  7058 ;;		_soWrite
  7059 ;; This function is called by:
  7060 ;;		_lcdCommand
  7061 ;;		_lcdChar
  7062 ;; This function uses a non-reentrant model
  7063 ;;
  7064                           
  7065                           	psect	text47
  7066  002356                     __ptext47:
  7067                           	callstack 0
  7068  002356                     _pushByte:
  7069                           	callstack 24
  7070                           
  7071                           ;incstack = 0
  7072                           ;pushByte@value stored from wreg
  7073  002356  6E0D               	movwf	pushByte@value^0,c
  7074  002358                     
  7075                           ;lcd.c: 32:  soWrite(value >> 4);
  7076  002358  C00D  F00C         	movff	pushByte@value,??_pushByte
  7077  00235C  3A0C               	swapf	??_pushByte^0,f,c
  7078  00235E  0E0F               	movlw	15
  7079  002360  160C               	andwf	??_pushByte^0,f,c
  7080  002362  500C               	movf	??_pushByte^0,w,c
  7081  002364  6E07               	movwf	soWrite@value^0,c
  7082  002366  6A08               	clrf	(soWrite@value+1)^0,c
  7083  002368  ECB1  F012         	call	_soWrite	;wreg free
  7084                           
  7085                           ;lcd.c: 33:  digitalWrite(PIN_D5, rs);
  7086  00236C  0E00               	movlw	0
  7087  00236E  6E02               	movwf	(digitalWrite@pin+1)^0,c
  7088  002370  0E1D               	movlw	29
  7089  002372  6E01               	movwf	digitalWrite@pin^0,c
  7090  002374  C00A  F003         	movff	pushByte@rs,digitalWrite@value
  7091  002378  C00B  F004         	movff	pushByte@rs+1,digitalWrite@value+1
  7092  00237C  ECC3  F008         	call	_digitalWrite	;wreg free
  7093                           
  7094                           ;lcd.c: 34:  pulseEnablePin();
  7095  002380  EC89  F013         	call	_pulseEnablePin	;wreg free
  7096                           
  7097                           ;lcd.c: 36:  soWrite(value & 0x0F);
  7098  002384  C00D  F00C         	movff	pushByte@value,??_pushByte
  7099  002388  0E0F               	movlw	15
  7100  00238A  160C               	andwf	??_pushByte^0,f,c
  7101  00238C  500C               	movf	??_pushByte^0,w,c
  7102  00238E  6E07               	movwf	soWrite@value^0,c
  7103  002390  6A08               	clrf	(soWrite@value+1)^0,c
  7104  002392  ECB1  F012         	call	_soWrite	;wreg free
  7105                           
  7106                           ;lcd.c: 37:  digitalWrite(PIN_D5, rs);
  7107  002396  0E00               	movlw	0
  7108  002398  6E02               	movwf	(digitalWrite@pin+1)^0,c
  7109  00239A  0E1D               	movlw	29
  7110  00239C  6E01               	movwf	digitalWrite@pin^0,c
  7111  00239E  C00A  F003         	movff	pushByte@rs,digitalWrite@value
  7112  0023A2  C00B  F004         	movff	pushByte@rs+1,digitalWrite@value+1
  7113  0023A6  ECC3  F008         	call	_digitalWrite	;wreg free
  7114                           
  7115                           ;lcd.c: 38:  pulseEnablePin();
  7116  0023AA  EC89  F013         	call	_pulseEnablePin	;wreg free
  7117  0023AE  0012               	return		;funcret
  7118  0023B0                     __end_of_pushByte:
  7119                           	callstack 0
  7120                           
  7121 ;; *************** function _soWrite *****************
  7122 ;; Defined at:
  7123 ;;		line 18 in file "so.c"
  7124 ;; Parameters:    Size  Location     Type
  7125 ;;  value           2    6[COMRAM] int 
  7126 ;; Auto vars:     Size  Location     Type
  7127 ;;  i               1    8[COMRAM] unsigned char 
  7128 ;; Return value:  Size  Location     Type
  7129 ;;                  1    wreg      void 
  7130 ;; Registers used:
  7131 ;;		wreg, status,2, status,0, cstack
  7132 ;; Tracked objects:
  7133 ;;		On entry : 0/0
  7134 ;;		On exit  : 0/0
  7135 ;;		Unchanged: 0/0
  7136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7137 ;;      Params:         2       0       0       0       0       0       0
  7138 ;;      Locals:         1       0       0       0       0       0       0
  7139 ;;      Temps:          0       0       0       0       0       0       0
  7140 ;;      Totals:         3       0       0       0       0       0       0
  7141 ;;Total ram usage:        3 bytes
  7142 ;; Hardware stack levels used: 1
  7143 ;; Hardware stack levels required when called: 2
  7144 ;; This function calls:
  7145 ;;		_PulseClockData
  7146 ;;		_PulseEnClock
  7147 ;;		_digitalWrite
  7148 ;; This function is called by:
  7149 ;;		_kpDebounce
  7150 ;;		_pushNibble
  7151 ;;		_pushByte
  7152 ;;		_ssdUpdate
  7153 ;; This function uses a non-reentrant model
  7154 ;;
  7155                           
  7156                           	psect	text48
  7157  002562                     __ptext48:
  7158                           	callstack 0
  7159  002562                     _soWrite:
  7160                           	callstack 24
  7161  002562                     
  7162                           ;so.c: 19:  char i;;so.c: 20:  digitalWrite(PIN_B0, 0);
  7163  002562  0E00               	movlw	0
  7164  002564  6E02               	movwf	(digitalWrite@pin+1)^0,c
  7165  002566  0E08               	movlw	8
  7166  002568  6E01               	movwf	digitalWrite@pin^0,c
  7167  00256A  0E00               	movlw	0
  7168  00256C  6E04               	movwf	(digitalWrite@value+1)^0,c
  7169  00256E  0E00               	movlw	0
  7170  002570  6E03               	movwf	digitalWrite@value^0,c
  7171  002572  ECC3  F008         	call	_digitalWrite	;wreg free
  7172  002576                     
  7173                           ;so.c: 21:  for (i = 0; i < 8; i++) {
  7174  002576  0E00               	movlw	0
  7175  002578  6E09               	movwf	soWrite@i^0,c
  7176  00257A                     l2498:
  7177                           
  7178                           ;so.c: 22:   digitalWrite(PIN_D6, value & 0x80);
  7179  00257A  0E00               	movlw	0
  7180  00257C  6E02               	movwf	(digitalWrite@pin+1)^0,c
  7181  00257E  0E1E               	movlw	30
  7182  002580  6E01               	movwf	digitalWrite@pin^0,c
  7183  002582  0E80               	movlw	128
  7184  002584  1407               	andwf	soWrite@value^0,w,c
  7185  002586  6E03               	movwf	digitalWrite@value^0,c
  7186  002588  6A04               	clrf	(digitalWrite@value+1)^0,c
  7187  00258A  ECC3  F008         	call	_digitalWrite	;wreg free
  7188                           
  7189                           ;so.c: 23:   PulseClockData();
  7190  00258E  EC07  F015         	call	_PulseClockData	;wreg free
  7191  002592                     
  7192                           ;so.c: 24:   value <<= 1;
  7193  002592  90D8               	bcf	status,0,c
  7194  002594  3607               	rlcf	soWrite@value^0,f,c
  7195  002596  3608               	rlcf	(soWrite@value+1)^0,f,c
  7196  002598                     
  7197                           ;so.c: 25:  }
  7198  002598  2A09               	incf	soWrite@i^0,f,c
  7199  00259A  0E07               	movlw	7
  7200  00259C  6409               	cpfsgt	soWrite@i^0,c
  7201  00259E  EFD3  F012         	goto	u2231
  7202  0025A2  EFD5  F012         	goto	u2230
  7203  0025A6                     u2231:
  7204  0025A6  EFBD  F012         	goto	l2498
  7205  0025AA                     u2230:
  7206  0025AA                     
  7207                           ;so.c: 26:  PulseEnClock();
  7208  0025AA  ECF2  F014         	call	_PulseEnClock	;wreg free
  7209  0025AE  0012               	return		;funcret
  7210  0025B0                     __end_of_soWrite:
  7211                           	callstack 0
  7212                           
  7213 ;; *************** function _PulseEnClock *****************
  7214 ;; Defined at:
  7215 ;;		line 9 in file "so.c"
  7216 ;; Parameters:    Size  Location     Type
  7217 ;;		None
  7218 ;; Auto vars:     Size  Location     Type
  7219 ;;		None
  7220 ;; Return value:  Size  Location     Type
  7221 ;;                  1    wreg      void 
  7222 ;; Registers used:
  7223 ;;		wreg, status,2, status,0, cstack
  7224 ;; Tracked objects:
  7225 ;;		On entry : 0/0
  7226 ;;		On exit  : 0/0
  7227 ;;		Unchanged: 0/0
  7228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7229 ;;      Params:         0       0       0       0       0       0       0
  7230 ;;      Locals:         0       0       0       0       0       0       0
  7231 ;;      Temps:          0       0       0       0       0       0       0
  7232 ;;      Totals:         0       0       0       0       0       0       0
  7233 ;;Total ram usage:        0 bytes
  7234 ;; Hardware stack levels used: 1
  7235 ;; Hardware stack levels required when called: 1
  7236 ;; This function calls:
  7237 ;;		_digitalWrite
  7238 ;; This function is called by:
  7239 ;;		_soWrite
  7240 ;; This function uses a non-reentrant model
  7241 ;;
  7242                           
  7243                           	psect	text49
  7244  0029E4                     __ptext49:
  7245                           	callstack 0
  7246  0029E4                     _PulseEnClock:
  7247                           	callstack 24
  7248  0029E4                     
  7249                           ;so.c: 10:  digitalWrite(PIN_D7, 1);
  7250  0029E4  0E00               	movlw	0
  7251  0029E6  6E02               	movwf	(digitalWrite@pin+1)^0,c
  7252  0029E8  0E1F               	movlw	31
  7253  0029EA  6E01               	movwf	digitalWrite@pin^0,c
  7254  0029EC  0E00               	movlw	0
  7255  0029EE  6E04               	movwf	(digitalWrite@value+1)^0,c
  7256  0029F0  0E01               	movlw	1
  7257  0029F2  6E03               	movwf	digitalWrite@value^0,c
  7258  0029F4  ECC3  F008         	call	_digitalWrite	;wreg free
  7259                           
  7260                           ;so.c: 11:  digitalWrite(PIN_D7, 0);
  7261  0029F8  0E00               	movlw	0
  7262  0029FA  6E02               	movwf	(digitalWrite@pin+1)^0,c
  7263  0029FC  0E1F               	movlw	31
  7264  0029FE  6E01               	movwf	digitalWrite@pin^0,c
  7265  002A00  0E00               	movlw	0
  7266  002A02  6E04               	movwf	(digitalWrite@value+1)^0,c
  7267  002A04  0E00               	movlw	0
  7268  002A06  6E03               	movwf	digitalWrite@value^0,c
  7269  002A08  ECC3  F008         	call	_digitalWrite	;wreg free
  7270  002A0C  0012               	return		;funcret
  7271  002A0E                     __end_of_PulseEnClock:
  7272                           	callstack 0
  7273                           
  7274 ;; *************** function _PulseClockData *****************
  7275 ;; Defined at:
  7276 ;;		line 14 in file "so.c"
  7277 ;; Parameters:    Size  Location     Type
  7278 ;;		None
  7279 ;; Auto vars:     Size  Location     Type
  7280 ;;		None
  7281 ;; Return value:  Size  Location     Type
  7282 ;;                  1    wreg      void 
  7283 ;; Registers used:
  7284 ;;		wreg, status,2, status,0, cstack
  7285 ;; Tracked objects:
  7286 ;;		On entry : 0/0
  7287 ;;		On exit  : 0/0
  7288 ;;		Unchanged: 0/0
  7289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7290 ;;      Params:         0       0       0       0       0       0       0
  7291 ;;      Locals:         0       0       0       0       0       0       0
  7292 ;;      Temps:          0       0       0       0       0       0       0
  7293 ;;      Totals:         0       0       0       0       0       0       0
  7294 ;;Total ram usage:        0 bytes
  7295 ;; Hardware stack levels used: 1
  7296 ;; Hardware stack levels required when called: 1
  7297 ;; This function calls:
  7298 ;;		_digitalWrite
  7299 ;; This function is called by:
  7300 ;;		_soWrite
  7301 ;; This function uses a non-reentrant model
  7302 ;;
  7303                           
  7304                           	psect	text50
  7305  002A0E                     __ptext50:
  7306                           	callstack 0
  7307  002A0E                     _PulseClockData:
  7308                           	callstack 24
  7309  002A0E                     
  7310                           ;so.c: 15:  digitalWrite(PIN_B0, 1);
  7311  002A0E  0E00               	movlw	0
  7312  002A10  6E02               	movwf	(digitalWrite@pin+1)^0,c
  7313  002A12  0E08               	movlw	8
  7314  002A14  6E01               	movwf	digitalWrite@pin^0,c
  7315  002A16  0E00               	movlw	0
  7316  002A18  6E04               	movwf	(digitalWrite@value+1)^0,c
  7317  002A1A  0E01               	movlw	1
  7318  002A1C  6E03               	movwf	digitalWrite@value^0,c
  7319  002A1E  ECC3  F008         	call	_digitalWrite	;wreg free
  7320                           
  7321                           ;so.c: 16:  digitalWrite(PIN_B0, 0);
  7322  002A22  0E00               	movlw	0
  7323  002A24  6E02               	movwf	(digitalWrite@pin+1)^0,c
  7324  002A26  0E08               	movlw	8
  7325  002A28  6E01               	movwf	digitalWrite@pin^0,c
  7326  002A2A  0E00               	movlw	0
  7327  002A2C  6E04               	movwf	(digitalWrite@value+1)^0,c
  7328  002A2E  0E00               	movlw	0
  7329  002A30  6E03               	movwf	digitalWrite@value^0,c
  7330  002A32  ECC3  F008         	call	_digitalWrite	;wreg free
  7331  002A36  0012               	return		;funcret
  7332  002A38                     __end_of_PulseClockData:
  7333                           	callstack 0
  7334                           
  7335 ;; *************** function _pulseEnablePin *****************
  7336 ;; Defined at:
  7337 ;;		line 18 in file "lcd.c"
  7338 ;; Parameters:    Size  Location     Type
  7339 ;;		None
  7340 ;; Auto vars:     Size  Location     Type
  7341 ;;		None
  7342 ;; Return value:  Size  Location     Type
  7343 ;;                  1    wreg      void 
  7344 ;; Registers used:
  7345 ;;		wreg, status,2, status,0, cstack
  7346 ;; Tracked objects:
  7347 ;;		On entry : 0/0
  7348 ;;		On exit  : 0/0
  7349 ;;		Unchanged: 0/0
  7350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7351 ;;      Params:         0       0       0       0       0       0       0
  7352 ;;      Locals:         0       0       0       0       0       0       0
  7353 ;;      Temps:          0       0       0       0       0       0       0
  7354 ;;      Totals:         0       0       0       0       0       0       0
  7355 ;;Total ram usage:        0 bytes
  7356 ;; Hardware stack levels used: 1
  7357 ;; Hardware stack levels required when called: 1
  7358 ;; This function calls:
  7359 ;;		_delayMicro
  7360 ;;		_digitalWrite
  7361 ;; This function is called by:
  7362 ;;		_pushNibble
  7363 ;;		_pushByte
  7364 ;; This function uses a non-reentrant model
  7365 ;;
  7366                           
  7367                           	psect	text51
  7368  002712                     __ptext51:
  7369                           	callstack 0
  7370  002712                     _pulseEnablePin:
  7371                           	callstack 25
  7372  002712                     
  7373                           ;lcd.c: 19:  digitalWrite(PIN_D4, 1);
  7374  002712  0E00               	movlw	0
  7375  002714  6E02               	movwf	(digitalWrite@pin+1)^0,c
  7376  002716  0E1C               	movlw	28
  7377  002718  6E01               	movwf	digitalWrite@pin^0,c
  7378  00271A  0E00               	movlw	0
  7379  00271C  6E04               	movwf	(digitalWrite@value+1)^0,c
  7380  00271E  0E01               	movlw	1
  7381  002720  6E03               	movwf	digitalWrite@value^0,c
  7382  002722  ECC3  F008         	call	_digitalWrite	;wreg free
  7383  002726                     
  7384                           ;lcd.c: 20:  delayMicro(5);
  7385  002726  0E00               	movlw	0
  7386  002728  6E02               	movwf	(delayMicro@a+1)^0,c
  7387  00272A  0E05               	movlw	5
  7388  00272C  6E01               	movwf	delayMicro@a^0,c
  7389  00272E  EC7A  F015         	call	_delayMicro	;wreg free
  7390  002732                     
  7391                           ;lcd.c: 21:  digitalWrite(PIN_D4, 0);
  7392  002732  0E00               	movlw	0
  7393  002734  6E02               	movwf	(digitalWrite@pin+1)^0,c
  7394  002736  0E1C               	movlw	28
  7395  002738  6E01               	movwf	digitalWrite@pin^0,c
  7396  00273A  0E00               	movlw	0
  7397  00273C  6E04               	movwf	(digitalWrite@value+1)^0,c
  7398  00273E  0E00               	movlw	0
  7399  002740  6E03               	movwf	digitalWrite@value^0,c
  7400  002742  ECC3  F008         	call	_digitalWrite	;wreg free
  7401                           
  7402                           ;lcd.c: 22:  delayMicro(5);
  7403  002746  0E00               	movlw	0
  7404  002748  6E02               	movwf	(delayMicro@a+1)^0,c
  7405  00274A  0E05               	movlw	5
  7406  00274C  6E01               	movwf	delayMicro@a^0,c
  7407  00274E  EC7A  F015         	call	_delayMicro	;wreg free
  7408  002752  0012               	return		;funcret
  7409  002754                     __end_of_pulseEnablePin:
  7410                           	callstack 0
  7411                           
  7412 ;; *************** function _digitalWrite *****************
  7413 ;; Defined at:
  7414 ;;		line 14 in file "io.c"
  7415 ;; Parameters:    Size  Location     Type
  7416 ;;  pin             2    0[COMRAM] int 
  7417 ;;  value           2    2[COMRAM] int 
  7418 ;; Auto vars:     Size  Location     Type
  7419 ;;		None
  7420 ;; Return value:  Size  Location     Type
  7421 ;;                  1    wreg      void 
  7422 ;; Registers used:
  7423 ;;		wreg, status,2, status,0
  7424 ;; Tracked objects:
  7425 ;;		On entry : 0/0
  7426 ;;		On exit  : 0/0
  7427 ;;		Unchanged: 0/0
  7428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7429 ;;      Params:         4       0       0       0       0       0       0
  7430 ;;      Locals:         0       0       0       0       0       0       0
  7431 ;;      Temps:          2       0       0       0       0       0       0
  7432 ;;      Totals:         6       0       0       0       0       0       0
  7433 ;;Total ram usage:        6 bytes
  7434 ;; Hardware stack levels used: 1
  7435 ;; This function calls:
  7436 ;;		Nothing
  7437 ;; This function is called by:
  7438 ;;		_pulseEnablePin
  7439 ;;		_pushNibble
  7440 ;;		_pushByte
  7441 ;;		_PulseEnClock
  7442 ;;		_PulseClockData
  7443 ;;		_soWrite
  7444 ;;		_ssdUpdate
  7445 ;;		_Apostando
  7446 ;;		_clear_SCL
  7447 ;;		_clear_SDA
  7448 ;; This function uses a non-reentrant model
  7449 ;;
  7450                           
  7451                           	psect	text52
  7452  001186                     __ptext52:
  7453                           	callstack 0
  7454  001186                     _digitalWrite:
  7455                           	callstack 25
  7456  001186                     
  7457                           ;io.c: 16:     if(pin <8){
  7458  001186  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  7459  001188  EFD1  F008         	goto	u2030
  7460  00118C  5002               	movf	(digitalWrite@pin+1)^0,w,c
  7461  00118E  E107               	bnz	u2031
  7462  001190  0E08               	movlw	8
  7463  001192  5C01               	subwf	digitalWrite@pin^0,w,c
  7464  001194  B0D8               	btfsc	status,0,c
  7465  001196  EFCF  F008         	goto	u2031
  7466  00119A  EFD1  F008         	goto	u2030
  7467  00119E                     u2031:
  7468  00119E  EFFB  F008         	goto	l2454
  7469  0011A2                     u2030:
  7470  0011A2                     
  7471                           ;io.c: 17:         if (value){ ((PORTA) |= (1<<(pin)));}
  7472  0011A2  5003               	movf	digitalWrite@value^0,w,c
  7473  0011A4  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  7474  0011A6  B4D8               	btfsc	status,2,c
  7475  0011A8  EFD8  F008         	goto	u2041
  7476  0011AC  EFDA  F008         	goto	u2040
  7477  0011B0                     u2041:
  7478  0011B0  EFEA  F008         	goto	l2452
  7479  0011B4                     u2040:
  7480  0011B4  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  7481  0011B8  0E01               	movlw	1
  7482  0011BA  6E06               	movwf	(??_digitalWrite+1)^0,c
  7483  0011BC  2A05               	incf	??_digitalWrite^0,f,c
  7484  0011BE  EFE3  F008         	goto	u2054
  7485  0011C2                     u2055:
  7486  0011C2  90D8               	bcf	status,0,c
  7487  0011C4  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  7488  0011C6                     u2054:
  7489  0011C6  2E05               	decfsz	??_digitalWrite^0,f,c
  7490  0011C8  EFE1  F008         	goto	u2055
  7491  0011CC  5006               	movf	(??_digitalWrite+1)^0,w,c
  7492  0011CE  1280               	iorwf	128,f,c	;volatile
  7493  0011D0  EFE9  F009         	goto	l77
  7494  0011D4                     l2452:
  7495  0011D4  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  7496  0011D8  0E01               	movlw	1
  7497  0011DA  6E06               	movwf	(??_digitalWrite+1)^0,c
  7498  0011DC  2A05               	incf	??_digitalWrite^0,f,c
  7499  0011DE  EFF3  F008         	goto	u2064
  7500  0011E2                     u2065:
  7501  0011E2  90D8               	bcf	status,0,c
  7502  0011E4  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  7503  0011E6                     u2064:
  7504  0011E6  2E05               	decfsz	??_digitalWrite^0,f,c
  7505  0011E8  EFF1  F008         	goto	u2065
  7506  0011EC  5006               	movf	(??_digitalWrite+1)^0,w,c
  7507  0011EE  0AFF               	xorlw	255
  7508  0011F0  1680               	andwf	128,f,c	;volatile
  7509  0011F2  EFE9  F009         	goto	l77
  7510  0011F6                     l2454:
  7511  0011F6  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  7512  0011F8  EF09  F009         	goto	u2070
  7513  0011FC  5002               	movf	(digitalWrite@pin+1)^0,w,c
  7514  0011FE  E107               	bnz	u2071
  7515  001200  0E10               	movlw	16
  7516  001202  5C01               	subwf	digitalWrite@pin^0,w,c
  7517  001204  B0D8               	btfsc	status,0,c
  7518  001206  EF07  F009         	goto	u2071
  7519  00120A  EF09  F009         	goto	u2070
  7520  00120E                     u2071:
  7521  00120E  EF37  F009         	goto	l2462
  7522  001212                     u2070:
  7523  001212                     
  7524                           ;io.c: 20:         pin -=8;
  7525  001212  0EF8               	movlw	248
  7526  001214  2601               	addwf	digitalWrite@pin^0,f,c
  7527  001216  0EFF               	movlw	255
  7528  001218  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  7529                           
  7530                           ;io.c: 21:         if (value){ ((PORTB) |= (1<<(pin)));}
  7531  00121A  5003               	movf	digitalWrite@value^0,w,c
  7532  00121C  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  7533  00121E  B4D8               	btfsc	status,2,c
  7534  001220  EF14  F009         	goto	u2081
  7535  001224  EF16  F009         	goto	u2080
  7536  001228                     u2081:
  7537  001228  EF26  F009         	goto	l2460
  7538  00122C                     u2080:
  7539  00122C  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  7540  001230  0E01               	movlw	1
  7541  001232  6E06               	movwf	(??_digitalWrite+1)^0,c
  7542  001234  2A05               	incf	??_digitalWrite^0,f,c
  7543  001236  EF1F  F009         	goto	u2094
  7544  00123A                     u2095:
  7545  00123A  90D8               	bcf	status,0,c
  7546  00123C  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  7547  00123E                     u2094:
  7548  00123E  2E05               	decfsz	??_digitalWrite^0,f,c
  7549  001240  EF1D  F009         	goto	u2095
  7550  001244  5006               	movf	(??_digitalWrite+1)^0,w,c
  7551  001246  1281               	iorwf	129,f,c	;volatile
  7552  001248  EFE9  F009         	goto	l77
  7553  00124C                     l2460:
  7554  00124C  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  7555  001250  0E01               	movlw	1
  7556  001252  6E06               	movwf	(??_digitalWrite+1)^0,c
  7557  001254  2A05               	incf	??_digitalWrite^0,f,c
  7558  001256  EF2F  F009         	goto	u2104
  7559  00125A                     u2105:
  7560  00125A  90D8               	bcf	status,0,c
  7561  00125C  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  7562  00125E                     u2104:
  7563  00125E  2E05               	decfsz	??_digitalWrite^0,f,c
  7564  001260  EF2D  F009         	goto	u2105
  7565  001264  5006               	movf	(??_digitalWrite+1)^0,w,c
  7566  001266  0AFF               	xorlw	255
  7567  001268  1681               	andwf	129,f,c	;volatile
  7568  00126A  EFE9  F009         	goto	l77
  7569  00126E                     l2462:
  7570  00126E  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  7571  001270  EF45  F009         	goto	u2110
  7572  001274  5002               	movf	(digitalWrite@pin+1)^0,w,c
  7573  001276  E107               	bnz	u2111
  7574  001278  0E18               	movlw	24
  7575  00127A  5C01               	subwf	digitalWrite@pin^0,w,c
  7576  00127C  B0D8               	btfsc	status,0,c
  7577  00127E  EF43  F009         	goto	u2111
  7578  001282  EF45  F009         	goto	u2110
  7579  001286                     u2111:
  7580  001286  EF73  F009         	goto	l2470
  7581  00128A                     u2110:
  7582  00128A                     
  7583                           ;io.c: 24:         pin -=16;
  7584  00128A  0EF0               	movlw	240
  7585  00128C  2601               	addwf	digitalWrite@pin^0,f,c
  7586  00128E  0EFF               	movlw	255
  7587  001290  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  7588                           
  7589                           ;io.c: 25:         if (value){ ((PORTC) |= (1<<(pin)));}
  7590  001292  5003               	movf	digitalWrite@value^0,w,c
  7591  001294  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  7592  001296  B4D8               	btfsc	status,2,c
  7593  001298  EF50  F009         	goto	u2121
  7594  00129C  EF52  F009         	goto	u2120
  7595  0012A0                     u2121:
  7596  0012A0  EF62  F009         	goto	l2468
  7597  0012A4                     u2120:
  7598  0012A4  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  7599  0012A8  0E01               	movlw	1
  7600  0012AA  6E06               	movwf	(??_digitalWrite+1)^0,c
  7601  0012AC  2A05               	incf	??_digitalWrite^0,f,c
  7602  0012AE  EF5B  F009         	goto	u2134
  7603  0012B2                     u2135:
  7604  0012B2  90D8               	bcf	status,0,c
  7605  0012B4  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  7606  0012B6                     u2134:
  7607  0012B6  2E05               	decfsz	??_digitalWrite^0,f,c
  7608  0012B8  EF59  F009         	goto	u2135
  7609  0012BC  5006               	movf	(??_digitalWrite+1)^0,w,c
  7610  0012BE  1282               	iorwf	130,f,c	;volatile
  7611  0012C0  EFE9  F009         	goto	l77
  7612  0012C4                     l2468:
  7613  0012C4  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  7614  0012C8  0E01               	movlw	1
  7615  0012CA  6E06               	movwf	(??_digitalWrite+1)^0,c
  7616  0012CC  2A05               	incf	??_digitalWrite^0,f,c
  7617  0012CE  EF6B  F009         	goto	u2144
  7618  0012D2                     u2145:
  7619  0012D2  90D8               	bcf	status,0,c
  7620  0012D4  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  7621  0012D6                     u2144:
  7622  0012D6  2E05               	decfsz	??_digitalWrite^0,f,c
  7623  0012D8  EF69  F009         	goto	u2145
  7624  0012DC  5006               	movf	(??_digitalWrite+1)^0,w,c
  7625  0012DE  0AFF               	xorlw	255
  7626  0012E0  1682               	andwf	130,f,c	;volatile
  7627  0012E2  EFE9  F009         	goto	l77
  7628  0012E6                     l2470:
  7629  0012E6  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  7630  0012E8  EF81  F009         	goto	u2150
  7631  0012EC  5002               	movf	(digitalWrite@pin+1)^0,w,c
  7632  0012EE  E107               	bnz	u2151
  7633  0012F0  0E20               	movlw	32
  7634  0012F2  5C01               	subwf	digitalWrite@pin^0,w,c
  7635  0012F4  B0D8               	btfsc	status,0,c
  7636  0012F6  EF7F  F009         	goto	u2151
  7637  0012FA  EF81  F009         	goto	u2150
  7638  0012FE                     u2151:
  7639  0012FE  EFAF  F009         	goto	l2478
  7640  001302                     u2150:
  7641  001302                     
  7642                           ;io.c: 28:         pin -=24;
  7643  001302  0EE8               	movlw	232
  7644  001304  2601               	addwf	digitalWrite@pin^0,f,c
  7645  001306  0EFF               	movlw	255
  7646  001308  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  7647                           
  7648                           ;io.c: 29:         if (value){ ((PORTD) |= (1<<(pin)));}
  7649  00130A  5003               	movf	digitalWrite@value^0,w,c
  7650  00130C  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  7651  00130E  B4D8               	btfsc	status,2,c
  7652  001310  EF8C  F009         	goto	u2161
  7653  001314  EF8E  F009         	goto	u2160
  7654  001318                     u2161:
  7655  001318  EF9E  F009         	goto	l2476
  7656  00131C                     u2160:
  7657  00131C  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  7658  001320  0E01               	movlw	1
  7659  001322  6E06               	movwf	(??_digitalWrite+1)^0,c
  7660  001324  2A05               	incf	??_digitalWrite^0,f,c
  7661  001326  EF97  F009         	goto	u2174
  7662  00132A                     u2175:
  7663  00132A  90D8               	bcf	status,0,c
  7664  00132C  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  7665  00132E                     u2174:
  7666  00132E  2E05               	decfsz	??_digitalWrite^0,f,c
  7667  001330  EF95  F009         	goto	u2175
  7668  001334  5006               	movf	(??_digitalWrite+1)^0,w,c
  7669  001336  1283               	iorwf	131,f,c	;volatile
  7670  001338  EFE9  F009         	goto	l77
  7671  00133C                     l2476:
  7672  00133C  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  7673  001340  0E01               	movlw	1
  7674  001342  6E06               	movwf	(??_digitalWrite+1)^0,c
  7675  001344  2A05               	incf	??_digitalWrite^0,f,c
  7676  001346  EFA7  F009         	goto	u2184
  7677  00134A                     u2185:
  7678  00134A  90D8               	bcf	status,0,c
  7679  00134C  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  7680  00134E                     u2184:
  7681  00134E  2E05               	decfsz	??_digitalWrite^0,f,c
  7682  001350  EFA5  F009         	goto	u2185
  7683  001354  5006               	movf	(??_digitalWrite+1)^0,w,c
  7684  001356  0AFF               	xorlw	255
  7685  001358  1683               	andwf	131,f,c	;volatile
  7686  00135A  EFE9  F009         	goto	l77
  7687  00135E                     l2478:
  7688  00135E  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  7689  001360  EFBD  F009         	goto	u2190
  7690  001364  5002               	movf	(digitalWrite@pin+1)^0,w,c
  7691  001366  E107               	bnz	u2191
  7692  001368  0E28               	movlw	40
  7693  00136A  5C01               	subwf	digitalWrite@pin^0,w,c
  7694  00136C  B0D8               	btfsc	status,0,c
  7695  00136E  EFBB  F009         	goto	u2191
  7696  001372  EFBD  F009         	goto	u2190
  7697  001376                     u2191:
  7698  001376  EFE9  F009         	goto	l77
  7699  00137A                     u2190:
  7700  00137A                     
  7701                           ;io.c: 32:         pin -=32;
  7702  00137A  0EE0               	movlw	224
  7703  00137C  2601               	addwf	digitalWrite@pin^0,f,c
  7704  00137E  0EFF               	movlw	255
  7705  001380  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  7706                           
  7707                           ;io.c: 33:         if (value){ ((PORTE) |= (1<<(pin)));}
  7708  001382  5003               	movf	digitalWrite@value^0,w,c
  7709  001384  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  7710  001386  B4D8               	btfsc	status,2,c
  7711  001388  EFC8  F009         	goto	u2201
  7712  00138C  EFCA  F009         	goto	u2200
  7713  001390                     u2201:
  7714  001390  EFDA  F009         	goto	l2484
  7715  001394                     u2200:
  7716  001394  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  7717  001398  0E01               	movlw	1
  7718  00139A  6E06               	movwf	(??_digitalWrite+1)^0,c
  7719  00139C  2A05               	incf	??_digitalWrite^0,f,c
  7720  00139E  EFD3  F009         	goto	u2214
  7721  0013A2                     u2215:
  7722  0013A2  90D8               	bcf	status,0,c
  7723  0013A4  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  7724  0013A6                     u2214:
  7725  0013A6  2E05               	decfsz	??_digitalWrite^0,f,c
  7726  0013A8  EFD1  F009         	goto	u2215
  7727  0013AC  5006               	movf	(??_digitalWrite+1)^0,w,c
  7728  0013AE  1284               	iorwf	132,f,c	;volatile
  7729  0013B0  EFE9  F009         	goto	l77
  7730  0013B4                     l2484:
  7731  0013B4  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  7732  0013B8  0E01               	movlw	1
  7733  0013BA  6E06               	movwf	(??_digitalWrite+1)^0,c
  7734  0013BC  2A05               	incf	??_digitalWrite^0,f,c
  7735  0013BE  EFE3  F009         	goto	u2224
  7736  0013C2                     u2225:
  7737  0013C2  90D8               	bcf	status,0,c
  7738  0013C4  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  7739  0013C6                     u2224:
  7740  0013C6  2E05               	decfsz	??_digitalWrite^0,f,c
  7741  0013C8  EFE1  F009         	goto	u2225
  7742  0013CC  5006               	movf	(??_digitalWrite+1)^0,w,c
  7743  0013CE  0AFF               	xorlw	255
  7744  0013D0  1684               	andwf	132,f,c	;volatile
  7745  0013D2                     l77:
  7746  0013D2  0012               	return		;funcret
  7747  0013D4                     __end_of_digitalWrite:
  7748                           	callstack 0
  7749                           
  7750 ;; *************** function _delayMicro *****************
  7751 ;; Defined at:
  7752 ;;		line 5 in file "lcd.c"
  7753 ;; Parameters:    Size  Location     Type
  7754 ;;  a               2    0[COMRAM] int 
  7755 ;; Auto vars:     Size  Location     Type
  7756 ;;  i               2    0        volatile int 
  7757 ;; Return value:  Size  Location     Type
  7758 ;;                  1    wreg      void 
  7759 ;; Registers used:
  7760 ;;		None
  7761 ;; Tracked objects:
  7762 ;;		On entry : 0/0
  7763 ;;		On exit  : 0/0
  7764 ;;		Unchanged: 0/0
  7765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7766 ;;      Params:         2       0       0       0       0       0       0
  7767 ;;      Locals:         0       0       0       0       0       0       0
  7768 ;;      Temps:          0       0       0       0       0       0       0
  7769 ;;      Totals:         2       0       0       0       0       0       0
  7770 ;;Total ram usage:        2 bytes
  7771 ;; Hardware stack levels used: 1
  7772 ;; This function calls:
  7773 ;;		Nothing
  7774 ;; This function is called by:
  7775 ;;		_pulseEnablePin
  7776 ;;		_lcdChar
  7777 ;;		_lcdInit
  7778 ;; This function uses a non-reentrant model
  7779 ;;
  7780                           
  7781                           	psect	text53
  7782  002AF4                     __ptext53:
  7783                           	callstack 0
  7784  002AF4                     _delayMicro:
  7785                           	callstack 25
  7786  002AF4  0012               	return		;funcret
  7787  002AF6                     __end_of_delayMicro:
  7788                           	callstack 0
  7789                           
  7790 ;; *************** function _delayMili *****************
  7791 ;; Defined at:
  7792 ;;		line 10 in file "lcd.c"
  7793 ;; Parameters:    Size  Location     Type
  7794 ;;  a               2    0[COMRAM] int 
  7795 ;; Auto vars:     Size  Location     Type
  7796 ;;  i               2    3[COMRAM] volatile int 
  7797 ;; Return value:  Size  Location     Type
  7798 ;;                  1    wreg      void 
  7799 ;; Registers used:
  7800 ;;		wreg, status,2, status,0
  7801 ;; Tracked objects:
  7802 ;;		On entry : 0/0
  7803 ;;		On exit  : 0/0
  7804 ;;		Unchanged: 0/0
  7805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7806 ;;      Params:         2       0       0       0       0       0       0
  7807 ;;      Locals:         2       0       0       0       0       0       0
  7808 ;;      Temps:          1       0       0       0       0       0       0
  7809 ;;      Totals:         5       0       0       0       0       0       0
  7810 ;;Total ram usage:        5 bytes
  7811 ;; Hardware stack levels used: 1
  7812 ;; This function calls:
  7813 ;;		Nothing
  7814 ;; This function is called by:
  7815 ;;		_lcdCommand
  7816 ;;		_lcdInit
  7817 ;; This function uses a non-reentrant model
  7818 ;;
  7819                           
  7820                           	psect	text54
  7821  002904                     __ptext54:
  7822                           	callstack 0
  7823  002904                     _delayMili:
  7824                           	callstack 28
  7825  002904                     
  7826                           ;lcd.c: 11:  volatile int i;;lcd.c: 12:  for (i = 0; i < a; i++) {
  7827  002904  0E00               	movlw	0
  7828  002906  6E05               	movwf	(delayMili@i+1)^0,c	;volatile
  7829  002908  0E00               	movlw	0
  7830  00290A  6E04               	movwf	delayMili@i^0,c	;volatile
  7831  00290C  EF8A  F014         	goto	l2598
  7832  002910                     l2596:
  7833                           
  7834                           ;lcd.c: 15:  }
  7835  002910  4A04               	infsnz	delayMili@i^0,f,c	;volatile
  7836  002912  2A05               	incf	(delayMili@i+1)^0,f,c	;volatile
  7837  002914                     l2598:
  7838  002914  5001               	movf	delayMili@a^0,w,c
  7839  002916  5C04               	subwf	delayMili@i^0,w,c	;volatile
  7840  002918  5005               	movf	(delayMili@i+1)^0,w,c	;volatile
  7841  00291A  0A80               	xorlw	128
  7842  00291C  6E03               	movwf	??_delayMili^0,c
  7843  00291E  5002               	movf	(delayMili@a+1)^0,w,c
  7844  002920  0A80               	xorlw	128
  7845  002922  5803               	subwfb	??_delayMili^0,w,c
  7846  002924  A0D8               	btfss	status,0,c
  7847  002926  EF97  F014         	goto	u2541
  7848  00292A  EF99  F014         	goto	u2540
  7849  00292E                     u2541:
  7850  00292E  EF88  F014         	goto	l2596
  7851  002932                     u2540:
  7852  002932  0012               	return		;funcret
  7853  002934                     __end_of_delayMili:
  7854                           	callstack 0
  7855                           
  7856 ;; *************** function _itoa *****************
  7857 ;; Defined at:
  7858 ;;		line 82 in file "controle.c"
  7859 ;; Parameters:    Size  Location     Type
  7860 ;;  value           2   30[COMRAM] int 
  7861 ;;  result          2   32[COMRAM] PTR unsigned char 
  7862 ;;		 -> Apostando@randomChar(4), saldoTxt@textBaixo(10), 
  7863 ;;  basea           2   34[COMRAM] int 
  7864 ;; Auto vars:     Size  Location     Type
  7865 ;;  ptr             2   43[COMRAM] PTR unsigned char 
  7866 ;;		 -> Apostando@randomChar(4), saldoTxt@textBaixo(10), 
  7867 ;;  ptr1            2   41[COMRAM] PTR unsigned char 
  7868 ;;		 -> Apostando@randomChar(4), saldoTxt@textBaixo(10), 
  7869 ;;  tmp_value       2   39[COMRAM] int 
  7870 ;;  tmp_char        1   38[COMRAM] unsigned char 
  7871 ;; Return value:  Size  Location     Type
  7872 ;;                  2   30[COMRAM] PTR unsigned char 
  7873 ;; Registers used:
  7874 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7875 ;; Tracked objects:
  7876 ;;		On entry : 0/0
  7877 ;;		On exit  : 0/0
  7878 ;;		Unchanged: 0/0
  7879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7880 ;;      Params:         6       0       0       0       0       0       0
  7881 ;;      Locals:         7       0       0       0       0       0       0
  7882 ;;      Temps:          2       0       0       0       0       0       0
  7883 ;;      Totals:        15       0       0       0       0       0       0
  7884 ;;Total ram usage:       15 bytes
  7885 ;; Hardware stack levels used: 1
  7886 ;; Hardware stack levels required when called: 1
  7887 ;; This function calls:
  7888 ;;		___awdiv
  7889 ;;		___wmul
  7890 ;; This function is called by:
  7891 ;;		_saldoTxt
  7892 ;;		_Apostando
  7893 ;; This function uses a non-reentrant model
  7894 ;;
  7895                           
  7896                           	psect	text55
  7897  0016B4                     __ptext55:
  7898                           	callstack 0
  7899  0016B4                     _itoa:
  7900                           	callstack 28
  7901  0016B4                     
  7902                           ;controle.c: 84:     if (basea < 2 || basea > 36) {
  7903  0016B4  BE24               	btfsc	(itoa@basea+1)^0,7,c
  7904  0016B6  EF66  F00B         	goto	u2691
  7905  0016BA  5024               	movf	(itoa@basea+1)^0,w,c
  7906  0016BC  E109               	bnz	u2690
  7907  0016BE  0E02               	movlw	2
  7908  0016C0  5C23               	subwf	itoa@basea^0,w,c
  7909  0016C2  A0D8               	btfss	status,0,c
  7910  0016C4  EF66  F00B         	goto	u2691
  7911  0016C8  EF68  F00B         	goto	u2690
  7912  0016CC                     u2691:
  7913  0016CC  EF76  F00B         	goto	l2710
  7914  0016D0                     u2690:
  7915  0016D0  BE24               	btfsc	(itoa@basea+1)^0,7,c
  7916  0016D2  EF74  F00B         	goto	u2701
  7917  0016D6  5024               	movf	(itoa@basea+1)^0,w,c
  7918  0016D8  E109               	bnz	u2700
  7919  0016DA  0E25               	movlw	37
  7920  0016DC  5C23               	subwf	itoa@basea^0,w,c
  7921  0016DE  A0D8               	btfss	status,0,c
  7922  0016E0  EF74  F00B         	goto	u2701
  7923  0016E4  EF76  F00B         	goto	u2700
  7924  0016E8                     u2701:
  7925  0016E8  EF7E  F00B         	goto	l2714
  7926  0016EC                     u2700:
  7927  0016EC                     l2710:
  7928                           
  7929                           ;controle.c: 85:         *result = '\0';
  7930  0016EC  C021  FFD9         	movff	itoa@result,fsr2l
  7931  0016F0  C022  FFDA         	movff	itoa@result+1,fsr2h
  7932  0016F4  0E00               	movlw	0
  7933  0016F6  6EDF               	movwf	indf2,c
  7934  0016F8  EF08  F00C         	goto	l331
  7935  0016FC                     l2714:
  7936                           
  7937                           ;controle.c: 89:     char* ptr = result, *ptr1 = result, tmp_char;
  7938  0016FC  C021  F02C         	movff	itoa@result,itoa@ptr
  7939  001700  C022  F02D         	movff	itoa@result+1,itoa@ptr+1
  7940  001704  C021  F02A         	movff	itoa@result,itoa@ptr1
  7941  001708  C022  F02B         	movff	itoa@result+1,itoa@ptr1+1
  7942  00170C                     l2716:
  7943                           
  7944                           ;controle.c: 93:         tmp_value = value;
  7945  00170C  C01F  F028         	movff	itoa@value,itoa@tmp_value
  7946  001710  C020  F029         	movff	itoa@value+1,itoa@tmp_value+1
  7947  001714                     
  7948                           ;controle.c: 94:         value /= basea;
  7949  001714  C01F  F001         	movff	itoa@value,___awdiv@dividend
  7950  001718  C020  F002         	movff	itoa@value+1,___awdiv@dividend+1
  7951  00171C  C023  F003         	movff	itoa@basea,___awdiv@divisor
  7952  001720  C024  F004         	movff	itoa@basea+1,___awdiv@divisor+1
  7953  001724  EC0E  F00E         	call	___awdiv	;wreg free
  7954  001728  C001  F01F         	movff	?___awdiv,itoa@value
  7955  00172C  C002  F020         	movff	?___awdiv+1,itoa@value+1
  7956  001730                     
  7957                           ;controle.c: 95:         *ptr++ = "zyxwvutsrqponmlkjihgfedcba9876543210123456789abcdefgh
      +                          ijklmnopqrstuvwxyz" [35 + (tmp_value - value * basea)];
  7958  001730  C01F  F019         	movff	itoa@value,___wmul@multiplier
  7959  001734  C020  F01A         	movff	itoa@value+1,___wmul@multiplier+1
  7960  001738  C023  F01B         	movff	itoa@basea,___wmul@multiplicand
  7961  00173C  C024  F01C         	movff	itoa@basea+1,___wmul@multiplicand+1
  7962  001740  EC43  F015         	call	___wmul	;wreg free
  7963  001744  0E1B               	movlw	low STR_1
  7964  001746  6E25               	movwf	??_itoa^0,c
  7965  001748  0E06               	movlw	high STR_1
  7966  00174A  6E26               	movwf	(??_itoa+1)^0,c
  7967  00174C  5019               	movf	?___wmul^0,w,c
  7968  00174E  5E25               	subwf	??_itoa^0,f,c
  7969  001750  501A               	movf	(?___wmul+1)^0,w,c
  7970  001752  5A26               	subwfb	(??_itoa+1)^0,f,c
  7971  001754  5028               	movf	itoa@tmp_value^0,w,c
  7972  001756  2625               	addwf	??_itoa^0,f,c
  7973  001758  5029               	movf	(itoa@tmp_value+1)^0,w,c
  7974  00175A  2226               	addwfc	(??_itoa+1)^0,f,c
  7975  00175C  0E23               	movlw	35
  7976  00175E  2625               	addwf	??_itoa^0,f,c
  7977  001760  0E00               	movlw	0
  7978  001762  2226               	addwfc	(??_itoa+1)^0,f,c
  7979  001764  C025  FFF6         	movff	??_itoa,tblptrl
  7980  001768  C026  FFF7         	movff	??_itoa+1,tblptrh
  7981  00176C                     	if	0	;tblptru may be non-zero
  7982  00176C                     	endif
  7983  00176C                     	if	0	;tblptru may be non-zero
  7984  00176C                     	endif
  7985  00176C  C02C  FFD9         	movff	itoa@ptr,fsr2l
  7986  001770  C02D  FFDA         	movff	itoa@ptr+1,fsr2h
  7987  001774  0008               	tblrd		*
  7988  001776  CFF5 FFDF          	movff	tablat,indf2
  7989  00177A  4A2C               	infsnz	itoa@ptr^0,f,c
  7990  00177C  2A2D               	incf	(itoa@ptr+1)^0,f,c
  7991  00177E                     
  7992                           ;controle.c: 96:     } while (value);
  7993  00177E  501F               	movf	itoa@value^0,w,c
  7994  001780  1020               	iorwf	(itoa@value+1)^0,w,c
  7995  001782  A4D8               	btfss	status,2,c
  7996  001784  EFC6  F00B         	goto	u2711
  7997  001788  EFC8  F00B         	goto	u2710
  7998  00178C                     u2711:
  7999  00178C  EF86  F00B         	goto	l2716
  8000  001790                     u2710:
  8001  001790                     
  8002                           ;controle.c: 99:     if (tmp_value < 0) *ptr++ = '-';
  8003  001790  BE29               	btfsc	(itoa@tmp_value+1)^0,7,c
  8004  001792  EFCF  F00B         	goto	u2720
  8005  001796  EFCD  F00B         	goto	u2721
  8006  00179A                     u2721:
  8007  00179A  EFD7  F00B         	goto	l2732
  8008  00179E                     u2720:
  8009  00179E  C02C  FFD9         	movff	itoa@ptr,fsr2l
  8010  0017A2  C02D  FFDA         	movff	itoa@ptr+1,fsr2h
  8011  0017A6  0E2D               	movlw	45
  8012  0017A8  6EDF               	movwf	indf2,c
  8013  0017AA  4A2C               	infsnz	itoa@ptr^0,f,c
  8014  0017AC  2A2D               	incf	(itoa@ptr+1)^0,f,c
  8015  0017AE                     l2732:
  8016                           
  8017                           ;controle.c: 100:     *ptr-- = '\0';
  8018  0017AE  C02C  FFD9         	movff	itoa@ptr,fsr2l
  8019  0017B2  C02D  FFDA         	movff	itoa@ptr+1,fsr2h
  8020  0017B6  0E00               	movlw	0
  8021  0017B8  6EDF               	movwf	indf2,c
  8022  0017BA  062C               	decf	itoa@ptr^0,f,c
  8023  0017BC  A0D8               	btfss	status,0,c
  8024  0017BE  062D               	decf	(itoa@ptr+1)^0,f,c
  8025                           
  8026                           ;controle.c: 101:     while (ptr1 < ptr) {
  8027  0017C0  EFFD  F00B         	goto	l2744
  8028  0017C4                     l2734:
  8029                           
  8030                           ;controle.c: 102:         tmp_char = *ptr;
  8031  0017C4  C02C  FFD9         	movff	itoa@ptr,fsr2l
  8032  0017C8  C02D  FFDA         	movff	itoa@ptr+1,fsr2h
  8033  0017CC  50DF               	movf	indf2,w,c
  8034  0017CE  6E27               	movwf	itoa@tmp_char^0,c
  8035  0017D0                     
  8036                           ;controle.c: 103:         *ptr-- = *ptr1;
  8037  0017D0  C02A  FFD9         	movff	itoa@ptr1,fsr2l
  8038  0017D4  C02B  FFDA         	movff	itoa@ptr1+1,fsr2h
  8039  0017D8  C02C  FFE1         	movff	itoa@ptr,fsr1l
  8040  0017DC  C02D  FFE2         	movff	itoa@ptr+1,fsr1h
  8041  0017E0  CFDF FFE7          	movff	indf2,indf1
  8042  0017E4  062C               	decf	itoa@ptr^0,f,c
  8043  0017E6  A0D8               	btfss	status,0,c
  8044  0017E8  062D               	decf	(itoa@ptr+1)^0,f,c
  8045  0017EA                     
  8046                           ;controle.c: 104:         *ptr1++ = tmp_char;
  8047  0017EA  C02A  FFD9         	movff	itoa@ptr1,fsr2l
  8048  0017EE  C02B  FFDA         	movff	itoa@ptr1+1,fsr2h
  8049  0017F2  C027  FFDF         	movff	itoa@tmp_char,indf2
  8050  0017F6  4A2A               	infsnz	itoa@ptr1^0,f,c
  8051  0017F8  2A2B               	incf	(itoa@ptr1+1)^0,f,c
  8052  0017FA                     l2744:
  8053                           
  8054                           ;controle.c: 101:     while (ptr1 < ptr) {
  8055  0017FA  502C               	movf	itoa@ptr^0,w,c
  8056  0017FC  5C2A               	subwf	itoa@ptr1^0,w,c
  8057  0017FE  502D               	movf	(itoa@ptr+1)^0,w,c
  8058  001800  582B               	subwfb	(itoa@ptr1+1)^0,w,c
  8059  001802  A0D8               	btfss	status,0,c
  8060  001804  EF06  F00C         	goto	u2731
  8061  001808  EF08  F00C         	goto	u2730
  8062  00180C                     u2731:
  8063  00180C  EFE2  F00B         	goto	l2734
  8064  001810                     u2730:
  8065  001810                     l331:
  8066  001810  0012               	return		;funcret
  8067  001812                     __end_of_itoa:
  8068                           	callstack 0
  8069                           
  8070 ;; *************** function ___wmul *****************
  8071 ;; Defined at:
  8072 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
  8073 ;; Parameters:    Size  Location     Type
  8074 ;;  multiplier      2   24[COMRAM] unsigned int 
  8075 ;;  multiplicand    2   26[COMRAM] unsigned int 
  8076 ;; Auto vars:     Size  Location     Type
  8077 ;;  product         2   28[COMRAM] unsigned int 
  8078 ;; Return value:  Size  Location     Type
  8079 ;;                  2   24[COMRAM] unsigned int 
  8080 ;; Registers used:
  8081 ;;		wreg, status,2, status,0, prodl, prodh
  8082 ;; Tracked objects:
  8083 ;;		On entry : 0/0
  8084 ;;		On exit  : 0/0
  8085 ;;		Unchanged: 0/0
  8086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8087 ;;      Params:         4       0       0       0       0       0       0
  8088 ;;      Locals:         2       0       0       0       0       0       0
  8089 ;;      Temps:          0       0       0       0       0       0       0
  8090 ;;      Totals:         6       0       0       0       0       0       0
  8091 ;;Total ram usage:        6 bytes
  8092 ;; Hardware stack levels used: 1
  8093 ;; This function calls:
  8094 ;;		Nothing
  8095 ;; This function is called by:
  8096 ;;		_itoa
  8097 ;;		_Apostando
  8098 ;;		_bcd2dec
  8099 ;; This function uses a non-reentrant model
  8100 ;;
  8101                           
  8102                           	psect	text56
  8103  002A86                     __ptext56:
  8104                           	callstack 0
  8105  002A86                     ___wmul:
  8106                           	callstack 28
  8107  002A86  5019               	movf	___wmul@multiplier^0,w,c
  8108  002A88  021B               	mulwf	___wmul@multiplicand^0,c
  8109  002A8A  CFF3 F01D          	movff	prodl,___wmul@product
  8110  002A8E  CFF4 F01E          	movff	prodh,___wmul@product+1
  8111  002A92  5019               	movf	___wmul@multiplier^0,w,c
  8112  002A94  021C               	mulwf	(___wmul@multiplicand+1)^0,c
  8113  002A96  50F3               	movf	243,w,c
  8114  002A98  261E               	addwf	(___wmul@product+1)^0,f,c
  8115  002A9A  501A               	movf	(___wmul@multiplier+1)^0,w,c
  8116  002A9C  021B               	mulwf	___wmul@multiplicand^0,c
  8117  002A9E  50F3               	movf	243,w,c
  8118  002AA0  261E               	addwf	(___wmul@product+1)^0,f,c
  8119  002AA2  C01D  F019         	movff	___wmul@product,?___wmul
  8120  002AA6  C01E  F01A         	movff	___wmul@product+1,?___wmul+1
  8121  002AAA  0012               	return		;funcret
  8122  002AAC                     __end_of___wmul:
  8123                           	callstack 0
  8124                           
  8125 ;; *************** function ___awdiv *****************
  8126 ;; Defined at:
  8127 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
  8128 ;; Parameters:    Size  Location     Type
  8129 ;;  dividend        2    0[COMRAM] int 
  8130 ;;  divisor         2    2[COMRAM] int 
  8131 ;; Auto vars:     Size  Location     Type
  8132 ;;  quotient        2    6[COMRAM] int 
  8133 ;;  sign            1    5[COMRAM] unsigned char 
  8134 ;;  counter         1    4[COMRAM] unsigned char 
  8135 ;; Return value:  Size  Location     Type
  8136 ;;                  2    0[COMRAM] int 
  8137 ;; Registers used:
  8138 ;;		wreg, status,2, status,0
  8139 ;; Tracked objects:
  8140 ;;		On entry : 0/0
  8141 ;;		On exit  : 0/0
  8142 ;;		Unchanged: 0/0
  8143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8144 ;;      Params:         4       0       0       0       0       0       0
  8145 ;;      Locals:         4       0       0       0       0       0       0
  8146 ;;      Temps:          0       0       0       0       0       0       0
  8147 ;;      Totals:         8       0       0       0       0       0       0
  8148 ;;Total ram usage:        8 bytes
  8149 ;; Hardware stack levels used: 1
  8150 ;; This function calls:
  8151 ;;		Nothing
  8152 ;; This function is called by:
  8153 ;;		_itoa
  8154 ;;		_Apostando
  8155 ;;		_bcd2dec
  8156 ;;		_lcdNumber
  8157 ;;		_dec2bcd
  8158 ;; This function uses a non-reentrant model
  8159 ;;
  8160                           
  8161                           	psect	text57
  8162  001C1C                     __ptext57:
  8163                           	callstack 0
  8164  001C1C                     ___awdiv:
  8165                           	callstack 28
  8166  001C1C  0E00               	movlw	0
  8167  001C1E  6E06               	movwf	___awdiv@sign^0,c
  8168  001C20  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  8169  001C22  EF17  F00E         	goto	u2590
  8170  001C26  EF15  F00E         	goto	u2591
  8171  001C2A                     u2591:
  8172  001C2A  EF1D  F00E         	goto	l2630
  8173  001C2E                     u2590:
  8174  001C2E  6C03               	negf	___awdiv@divisor^0,c
  8175  001C30  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  8176  001C32  B0D8               	btfsc	status,0,c
  8177  001C34  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  8178  001C36  0E01               	movlw	1
  8179  001C38  6E06               	movwf	___awdiv@sign^0,c
  8180  001C3A                     l2630:
  8181  001C3A  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  8182  001C3C  EF24  F00E         	goto	u2600
  8183  001C40  EF22  F00E         	goto	u2601
  8184  001C44                     u2601:
  8185  001C44  EF2A  F00E         	goto	l2636
  8186  001C48                     u2600:
  8187  001C48  6C01               	negf	___awdiv@dividend^0,c
  8188  001C4A  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  8189  001C4C  B0D8               	btfsc	status,0,c
  8190  001C4E  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  8191  001C50  0E01               	movlw	1
  8192  001C52  1A06               	xorwf	___awdiv@sign^0,f,c
  8193  001C54                     l2636:
  8194  001C54  0E00               	movlw	0
  8195  001C56  6E08               	movwf	(___awdiv@quotient+1)^0,c
  8196  001C58  0E00               	movlw	0
  8197  001C5A  6E07               	movwf	___awdiv@quotient^0,c
  8198  001C5C  5003               	movf	___awdiv@divisor^0,w,c
  8199  001C5E  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  8200  001C60  B4D8               	btfsc	status,2,c
  8201  001C62  EF35  F00E         	goto	u2611
  8202  001C66  EF37  F00E         	goto	u2610
  8203  001C6A                     u2611:
  8204  001C6A  EF5F  F00E         	goto	l2658
  8205  001C6E                     u2610:
  8206  001C6E  0E01               	movlw	1
  8207  001C70  6E05               	movwf	___awdiv@counter^0,c
  8208  001C72  EF3F  F00E         	goto	l2644
  8209  001C76                     l2642:
  8210  001C76  90D8               	bcf	status,0,c
  8211  001C78  3603               	rlcf	___awdiv@divisor^0,f,c
  8212  001C7A  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  8213  001C7C  2A05               	incf	___awdiv@counter^0,f,c
  8214  001C7E                     l2644:
  8215  001C7E  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  8216  001C80  EF44  F00E         	goto	u2621
  8217  001C84  EF46  F00E         	goto	u2620
  8218  001C88                     u2621:
  8219  001C88  EF3B  F00E         	goto	l2642
  8220  001C8C                     u2620:
  8221  001C8C                     l2646:
  8222  001C8C  90D8               	bcf	status,0,c
  8223  001C8E  3607               	rlcf	___awdiv@quotient^0,f,c
  8224  001C90  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  8225  001C92  5003               	movf	___awdiv@divisor^0,w,c
  8226  001C94  5C01               	subwf	___awdiv@dividend^0,w,c
  8227  001C96  5004               	movf	(___awdiv@divisor+1)^0,w,c
  8228  001C98  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  8229  001C9A  A0D8               	btfss	status,0,c
  8230  001C9C  EF52  F00E         	goto	u2631
  8231  001CA0  EF54  F00E         	goto	u2630
  8232  001CA4                     u2631:
  8233  001CA4  EF59  F00E         	goto	l2654
  8234  001CA8                     u2630:
  8235  001CA8  5003               	movf	___awdiv@divisor^0,w,c
  8236  001CAA  5E01               	subwf	___awdiv@dividend^0,f,c
  8237  001CAC  5004               	movf	(___awdiv@divisor+1)^0,w,c
  8238  001CAE  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  8239  001CB0  8007               	bsf	___awdiv@quotient^0,0,c
  8240  001CB2                     l2654:
  8241  001CB2  90D8               	bcf	status,0,c
  8242  001CB4  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  8243  001CB6  3203               	rrcf	___awdiv@divisor^0,f,c
  8244  001CB8  2E05               	decfsz	___awdiv@counter^0,f,c
  8245  001CBA  EF46  F00E         	goto	l2646
  8246  001CBE                     l2658:
  8247  001CBE  5006               	movf	___awdiv@sign^0,w,c
  8248  001CC0  B4D8               	btfsc	status,2,c
  8249  001CC2  EF65  F00E         	goto	u2641
  8250  001CC6  EF67  F00E         	goto	u2640
  8251  001CCA                     u2641:
  8252  001CCA  EF6B  F00E         	goto	l2662
  8253  001CCE                     u2640:
  8254  001CCE  6C07               	negf	___awdiv@quotient^0,c
  8255  001CD0  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  8256  001CD2  B0D8               	btfsc	status,0,c
  8257  001CD4  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  8258  001CD6                     l2662:
  8259  001CD6  C007  F001         	movff	___awdiv@quotient,?___awdiv
  8260  001CDA  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  8261  001CDE  0012               	return		;funcret
  8262  001CE0                     __end_of___awdiv:
  8263                           	callstack 0
  8264                           
  8265 ;; *************** function _delay *****************
  8266 ;; Defined at:
  8267 ;;		line 35 in file "controle.c"
  8268 ;; Parameters:    Size  Location     Type
  8269 ;;		None
  8270 ;; Auto vars:     Size  Location     Type
  8271 ;;  j               1    1[COMRAM] unsigned char 
  8272 ;;  i               1    0[COMRAM] unsigned char 
  8273 ;; Return value:  Size  Location     Type
  8274 ;;                  1    wreg      void 
  8275 ;; Registers used:
  8276 ;;		wreg, status,2, status,0
  8277 ;; Tracked objects:
  8278 ;;		On entry : 0/0
  8279 ;;		On exit  : 0/0
  8280 ;;		Unchanged: 0/0
  8281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8282 ;;      Params:         0       0       0       0       0       0       0
  8283 ;;      Locals:         2       0       0       0       0       0       0
  8284 ;;      Temps:          0       0       0       0       0       0       0
  8285 ;;      Totals:         2       0       0       0       0       0       0
  8286 ;;Total ram usage:        2 bytes
  8287 ;; Hardware stack levels used: 1
  8288 ;; This function calls:
  8289 ;;		Nothing
  8290 ;; This function is called by:
  8291 ;;		_verso
  8292 ;;		_inverso
  8293 ;;		_textInit
  8294 ;;		_saldoTxt
  8295 ;;		_waitTxtProgress
  8296 ;;		_GameOver
  8297 ;;		_Lose
  8298 ;;		_WinAll
  8299 ;;		_Win2x
  8300 ;;		_Win1x
  8301 ;;		_apostaTxt
  8302 ;; This function uses a non-reentrant model
  8303 ;;
  8304                           
  8305                           	psect	text58
  8306  00268C                     __ptext58:
  8307                           	callstack 0
  8308  00268C                     _delay:
  8309                           	callstack 29
  8310  00268C                     
  8311                           ;controle.c: 36:     char i, j;;controle.c: 37:     for (i = 0; i < 255; i++) {
  8312  00268C  0E00               	movlw	0
  8313  00268E  6E01               	movwf	delay@i^0,c
  8314  002690                     l2682:
  8315                           
  8316                           ;controle.c: 38:         for (j = 0; j < 255; j++);
  8317  002690  0E00               	movlw	0
  8318  002692  6E02               	movwf	delay@j^0,c
  8319  002694                     l2688:
  8320  002694  2A02               	incf	delay@j^0,f,c
  8321  002696  2802               	incf	delay@j^0,w,c
  8322  002698  A4D8               	btfss	status,2,c
  8323  00269A  EF51  F013         	goto	u2661
  8324  00269E  EF53  F013         	goto	u2660
  8325  0026A2                     u2661:
  8326  0026A2  EF4A  F013         	goto	l2688
  8327  0026A6                     u2660:
  8328  0026A6                     
  8329                           ;controle.c: 39:         for (j = 0; j < 255; j++);
  8330  0026A6  0E00               	movlw	0
  8331  0026A8  6E02               	movwf	delay@j^0,c
  8332  0026AA                     l2698:
  8333  0026AA  2A02               	incf	delay@j^0,f,c
  8334  0026AC  2802               	incf	delay@j^0,w,c
  8335  0026AE  A4D8               	btfss	status,2,c
  8336  0026B0  EF5C  F013         	goto	u2671
  8337  0026B4  EF5E  F013         	goto	u2670
  8338  0026B8                     u2671:
  8339  0026B8  EF55  F013         	goto	l2698
  8340  0026BC                     u2670:
  8341  0026BC                     
  8342                           ;controle.c: 40:     }
  8343  0026BC  2A01               	incf	delay@i^0,f,c
  8344  0026BE  2801               	incf	delay@i^0,w,c
  8345  0026C0  A4D8               	btfss	status,2,c
  8346  0026C2  EF65  F013         	goto	u2681
  8347  0026C6  EF67  F013         	goto	u2680
  8348  0026CA                     u2681:
  8349  0026CA  EF48  F013         	goto	l2682
  8350  0026CE                     u2680:
  8351  0026CE  0012               	return		;funcret
  8352  0026D0                     __end_of_delay:
  8353                           	callstack 0
  8354                           
  8355                           	psect	rparam
  8356  0000                     
  8357                           	psect	idloc
  8358                           
  8359                           ;Config register IDLOC0 @ 0x200000
  8360                           ;	unspecified, using default values
  8361  200000                     	org	2097152
  8362  200000  FF                 	db	255
  8363                           
  8364                           ;Config register IDLOC1 @ 0x200001
  8365                           ;	unspecified, using default values
  8366  200001                     	org	2097153
  8367  200001  FF                 	db	255
  8368                           
  8369                           ;Config register IDLOC2 @ 0x200002
  8370                           ;	unspecified, using default values
  8371  200002                     	org	2097154
  8372  200002  FF                 	db	255
  8373                           
  8374                           ;Config register IDLOC3 @ 0x200003
  8375                           ;	unspecified, using default values
  8376  200003                     	org	2097155
  8377  200003  FF                 	db	255
  8378                           
  8379                           ;Config register IDLOC4 @ 0x200004
  8380                           ;	unspecified, using default values
  8381  200004                     	org	2097156
  8382  200004  FF                 	db	255
  8383                           
  8384                           ;Config register IDLOC5 @ 0x200005
  8385                           ;	unspecified, using default values
  8386  200005                     	org	2097157
  8387  200005  FF                 	db	255
  8388                           
  8389                           ;Config register IDLOC6 @ 0x200006
  8390                           ;	unspecified, using default values
  8391  200006                     	org	2097158
  8392  200006  FF                 	db	255
  8393                           
  8394                           ;Config register IDLOC7 @ 0x200007
  8395                           ;	unspecified, using default values
  8396  200007                     	org	2097159
  8397  200007  FF                 	db	255
  8398                           
  8399                           	psect	config
  8400                           
  8401                           ; Padding undefined space
  8402  300000                     	org	3145728
  8403  300000  FF                 	db	255
  8404                           
  8405                           ;Config register CONFIG1H @ 0x300001
  8406                           ;	Oscillator Selection bits
  8407                           ;	OSC = HS, HS oscillator
  8408                           ;	Fail-Safe Clock Monitor Enable bit
  8409                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  8410                           ;	Internal/External Oscillator Switchover bit
  8411                           ;	IESO = OFF, Oscillator Switchover mode disabled
  8412  300001                     	org	3145729
  8413  300001  02                 	db	2
  8414                           
  8415                           ;Config register CONFIG2L @ 0x300002
  8416                           ;	Power-up Timer Enable bit
  8417                           ;	PWRT = OFF, PWRT disabled
  8418                           ;	Brown-out Reset Enable bits
  8419                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  8420                           ;	Brown Out Reset Voltage bits
  8421                           ;	BORV = 0x2E, user specified literal
  8422  300002                     	org	3145730
  8423  300002  71                 	db	369
  8424                           
  8425                           ;Config register CONFIG2H @ 0x300003
  8426                           ;	Watchdog Timer Enable bit
  8427                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  8428                           ;	Watchdog Timer Postscale Select bits
  8429                           ;	WDTPS = 1, 1:1
  8430  300003                     	org	3145731
  8431  300003  00                 	db	0
  8432                           
  8433                           ; Padding undefined space
  8434  300004                     	org	3145732
  8435  300004  FF                 	db	255
  8436                           
  8437                           ;Config register CONFIG3H @ 0x300005
  8438                           ;	CCP2 MUX bit
  8439                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  8440                           ;	PORTB A/D Enable bit
  8441                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  8442                           ;	Low-Power Timer1 Oscillator Enable bit
  8443                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  8444                           ;	MCLR Pin Enable bit
  8445                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  8446  300005                     	org	3145733
  8447  300005  83                 	db	131
  8448                           
  8449                           ;Config register CONFIG4L @ 0x300006
  8450                           ;	Stack Full/Underflow Reset Enable bit
  8451                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
  8452                           ;	Single-Supply ICSP Enable bit
  8453                           ;	LVP = OFF, Single-Supply ICSP disabled
  8454                           ;	Extended Instruction Set Enable bit
  8455                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  8456                           ;	Background Debugger Enable bit
  8457                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
  8458  300006                     	org	3145734
  8459  300006  80                 	db	128
  8460                           
  8461                           ; Padding undefined space
  8462  300007                     	org	3145735
  8463  300007  FF                 	db	255
  8464                           
  8465                           ;Config register CONFIG5L @ 0x300008
  8466                           ;	Code Protection bit
  8467                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  8468                           ;	Code Protection bit
  8469                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  8470                           ;	Code Protection bit
  8471                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  8472                           ;	Code Protection bit
  8473                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  8474  300008                     	org	3145736
  8475  300008  0F                 	db	15
  8476                           
  8477                           ;Config register CONFIG5H @ 0x300009
  8478                           ;	Boot Block Code Protection bit
  8479                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  8480                           ;	Data EEPROM Code Protection bit
  8481                           ;	CPD = OFF, Data EEPROM not code-protected
  8482  300009                     	org	3145737
  8483  300009  C0                 	db	192
  8484                           
  8485                           ;Config register CONFIG6L @ 0x30000A
  8486                           ;	Write Protection bit
  8487                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  8488                           ;	Write Protection bit
  8489                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  8490                           ;	Write Protection bit
  8491                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  8492                           ;	Write Protection bit
  8493                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  8494  30000A                     	org	3145738
  8495  30000A  0F                 	db	15
  8496                           
  8497                           ;Config register CONFIG6H @ 0x30000B
  8498                           ;	Configuration Register Write Protection bit
  8499                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  8500                           ;	Boot Block Write Protection bit
  8501                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
  8502                           ;	Data EEPROM Write Protection bit
  8503                           ;	WRTD = OFF, Data EEPROM not write-protected
  8504  30000B                     	org	3145739
  8505  30000B  E0                 	db	224
  8506                           
  8507                           ;Config register CONFIG7L @ 0x30000C
  8508                           ;	Table Read Protection bit
  8509                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  8510                           ;	Table Read Protection bit
  8511                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  8512                           ;	Table Read Protection bit
  8513                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  8514                           ;	Table Read Protection bit
  8515                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  8516  30000C                     	org	3145740
  8517  30000C  0F                 	db	15
  8518                           
  8519                           ;Config register CONFIG7H @ 0x30000D
  8520                           ;	Boot Block Table Read Protection bit
  8521                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  8522  30000D                     	org	3145741
  8523  30000D  40                 	db	64
  8524                           tosu	equ	0xFFF
  8525                           tosh	equ	0xFFE
  8526                           tosl	equ	0xFFD
  8527                           stkptr	equ	0xFFC
  8528                           pclatu	equ	0xFFB
  8529                           pclath	equ	0xFFA
  8530                           pcl	equ	0xFF9
  8531                           tblptru	equ	0xFF8
  8532                           tblptrh	equ	0xFF7
  8533                           tblptrl	equ	0xFF6
  8534                           tablat	equ	0xFF5
  8535                           prodh	equ	0xFF4
  8536                           prodl	equ	0xFF3
  8537                           indf0	equ	0xFEF
  8538                           postinc0	equ	0xFEE
  8539                           postdec0	equ	0xFED
  8540                           preinc0	equ	0xFEC
  8541                           plusw0	equ	0xFEB
  8542                           fsr0h	equ	0xFEA
  8543                           fsr0l	equ	0xFE9
  8544                           wreg	equ	0xFE8
  8545                           indf1	equ	0xFE7
  8546                           postinc1	equ	0xFE6
  8547                           postdec1	equ	0xFE5
  8548                           preinc1	equ	0xFE4
  8549                           plusw1	equ	0xFE3
  8550                           fsr1h	equ	0xFE2
  8551                           fsr1l	equ	0xFE1
  8552                           bsr	equ	0xFE0
  8553                           indf2	equ	0xFDF
  8554                           postinc2	equ	0xFDE
  8555                           postdec2	equ	0xFDD
  8556                           preinc2	equ	0xFDC
  8557                           plusw2	equ	0xFDB
  8558                           fsr2h	equ	0xFDA
  8559                           fsr2l	equ	0xFD9
  8560                           status	equ	0xFD8

Data Sizes:
    Strings     72
    Constant    26
    Data        289
    BSS         26
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127    126     127
    BANK0           128     38     118
    BANK1           256      0     238
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    time@t	PTR long long  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    itoa@ptr1	PTR unsigned char  size(2) Largest target is 10
		 -> Apostando@randomChar(COMRAM[4]), saldoTxt@textBaixo(COMRAM[10]), 

    itoa@ptr	PTR unsigned char  size(2) Largest target is 10
		 -> Apostando@randomChar(COMRAM[4]), saldoTxt@textBaixo(COMRAM[10]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 10
		 -> Apostando@randomChar(COMRAM[4]), saldoTxt@textBaixo(COMRAM[10]), 

    itoa@result	PTR unsigned char  size(2) Largest target is 10
		 -> Apostando@randomChar(COMRAM[4]), saldoTxt@textBaixo(COMRAM[10]), 

    printf@text	PTR unsigned char  size(2) Largest target is 21
		 -> apostandoTxtProgress@text2(BANK0[15]), apostandoTxtProgress@text(BANK0[15]), Win1x@textBaixo(COMRAM[15]), Win1x@textCima(COMRAM[15]), 
		 -> Win2x@textBaixo(COMRAM[15]), Win2x@textCima(COMRAM[21]), WinAll@textBaixo(COMRAM[15]), WinAll@textCima(COMRAM[15]), 
		 -> Lose@textBaixo(COMRAM[15]), Lose@textCima(COMRAM[15]), GameOver@textBaixo(COMRAM[20]), GameOver@textCima(COMRAM[15]), 
		 -> waitTxtProgress@textBaixo(COMRAM[15]), waitTxtProgress@textCima(COMRAM[15]), saldoTxt@textBaixo(COMRAM[10]), saldoTxt@textCima(COMRAM[7]), 
		 -> apostaTxt@textBaixo(COMRAM[15]), apostaTxt@textCima(COMRAM[15]), textInit@textBaixo(COMRAM[17]), textInit@textCima(COMRAM[12]), 


Critical Paths under _main in COMRAM

    _main->_apostandoTxtProgress
    _waitTxtProgress->_printf
    _textInit->_printf
    _ssdInit->_pinMode
    _lcdInit->_lcdCommand
    _pushNibble->_soWrite
    _kpInit->_pinMode
    _soInit->_pinMode
    _kpDebounce->_soWrite
    _apostandoTxtProgress->_Apostando
    _verso->_delay
    _inverso->_delay
    _GameOver->_saldoTxt
    _Apostando->_Win2x
    _ssdUpdate->_soWrite
    _ssdDigit->___awmod
    _srand->_time
    _rand->___lmul
    _dsReadData->_i2cReadByte
    _i2cWriteByte->_i2c_read_bit
    _i2cWriteByte->_i2c_write_bit
    _i2cReadByte->_i2c_read_bit
    _i2cReadByte->_i2c_write_bit
    _clear_SDA->_digitalWrite
    _clear_SDA->_pinMode
    _read_SDA->_pinMode
    _read_SCL->_pinMode
    _clear_SCL->_digitalWrite
    _clear_SCL->_pinMode
    _bcd2dec->___wmul
    ___awmod->_rand
    _WinAll->_saldoTxt
    _Win2x->_saldoTxt
    _Win1x->_saldoTxt
    _Lose->_saldoTxt
    _saldoTxt->_itoa
    _printf->_lcdChar
    _lcdChar->_pushByte
    _lcdCommand->_pushByte
    _pushByte->_soWrite
    _soWrite->_digitalWrite
    _PulseEnClock->_digitalWrite
    _PulseClockData->_digitalWrite
    _pulseEnablePin->_digitalWrite
    _itoa->___wmul
    ___wmul->___awmod

Critical Paths under _main in BANK0

    _main->_apostandoTxtProgress

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                10    10      0  950022
                                            124 COMRAM     2     2      0
                                             30 BANK0      8     8      0
               _apostandoTxtProgress
                         _kpDebounce
                             _kpInit
                             _kpRead
                         _lcdCommand
                            _lcdInit
                           _saldoTxt
                              _srand
                            _ssdInit
                           _textInit
                               _time
                    _waitTxtProgress
 ---------------------------------------------------------------------------------
 (1) _waitTxtProgress                                     30    30      0   47758
                                             17 COMRAM    30    30      0
                              _delay
                         _lcdCommand
                             _printf
 ---------------------------------------------------------------------------------
 (1) _textInit                                            29    29      0   47758
                                             17 COMRAM    29    29      0
                              _delay
                         _lcdCommand
                             _printf
 ---------------------------------------------------------------------------------
 (1) _ssdInit                                              0     0      0    6048
                            _pinMode
                             _soInit
 ---------------------------------------------------------------------------------
 (1) _lcdInit                                              0     0      0   52444
                         _delayMicro
                          _delayMili
                         _lcdCommand
                            _pinMode
                         _pushNibble
                             _soInit
 ---------------------------------------------------------------------------------
 (2) _pushNibble                                           3     1      2   22701
                                              9 COMRAM     3     1      2
                       _digitalWrite
                     _pulseEnablePin
                            _soWrite
 ---------------------------------------------------------------------------------
 (1) _kpRead                                               2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _kpInit                                               0     0      0    6048
                            _pinMode
                             _soInit
 ---------------------------------------------------------------------------------
 (2) _soInit                                               0     0      0    3024
                            _pinMode
 ---------------------------------------------------------------------------------
 (1) _kpDebounce                                           5     5      0   14121
                                              9 COMRAM     5     5      0
                        _digitalRead
                            _soWrite
 ---------------------------------------------------------------------------------
 (1) _apostandoTxtProgress                                34    34      0  701511
                                            120 COMRAM     4     4      0
                                              0 BANK0     30    30      0
                          _Apostando
                           _GameOver
                            _inverso
                         _lcdCommand
                             _printf
                              _verso
 ---------------------------------------------------------------------------------
 (2) _verso                                                2     2      0     230
                                              2 COMRAM     2     2      0
                              _delay
 ---------------------------------------------------------------------------------
 (2) _inverso                                              2     2      0     230
                                              2 COMRAM     2     2      0
                              _delay
 ---------------------------------------------------------------------------------
 (2) _GameOver                                            35    35      0   98667
                                             62 COMRAM    35    35      0
                              _delay
                         _lcdCommand
                             _printf
                           _saldoTxt
 ---------------------------------------------------------------------------------
 (2) _Apostando                                           22    22      0  554764
                                             98 COMRAM    22    22      0
                               _Lose
                              _Win1x
                              _Win2x
                             _WinAll
                            ___awdiv
                            ___awmod
                            ___fladd
                             ___flge
                             ___wmul
                            _bcd2dec
                       _digitalWrite
                         _dsReadData
                               _itoa
                               _rand
                              _srand
                           _ssdDigit
                          _ssdUpdate
                               _time
 ---------------------------------------------------------------------------------
 (1) _time                                                 8     0      8     196
                                              0 COMRAM     8     0      8
 ---------------------------------------------------------------------------------
 (3) _ssdUpdate                                            2     2      0   17729
                                              9 COMRAM     2     2      0
                       _digitalWrite
                            _soWrite
 ---------------------------------------------------------------------------------
 (3) _ssdDigit                                             2     1      1     480
                                             24 COMRAM     2     1      1
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _srand                                                6     4      2     174
                                              8 COMRAM     6     4      2
                               _time (ARG)
 ---------------------------------------------------------------------------------
 (3) _rand                                                 6     4      2     370
                                             12 COMRAM     6     4      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (4) ___lmul                                              12     4      8     370
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (3) _dsReadData                                           5     3      2  123927
                                             13 COMRAM     5     3      2
                        _i2cReadByte
                       _i2cWriteByte
 ---------------------------------------------------------------------------------
 (4) _i2cWriteByte                                         5     3      2   73091
                                              7 COMRAM     4     2      2
                       _i2c_read_bit
                          _i2c_start
                           _i2c_stop
                      _i2c_write_bit
 ---------------------------------------------------------------------------------
 (5) _i2c_start                                            0     0      0   21632
                          _I2C_delay
                          _clear_SCL
                          _clear_SDA
                           _read_SCL
                           _read_SDA
 ---------------------------------------------------------------------------------
 (4) _i2cReadByte                                          6     5      1   50639
                                              7 COMRAM     6     5      1
                       _i2c_read_bit
                           _i2c_stop
                      _i2c_write_bit
 ---------------------------------------------------------------------------------
 (5) _i2c_write_bit                                        1     1      0   21676
                                              6 COMRAM     1     1      0
                          _I2C_delay
                          _clear_SCL
                          _clear_SDA
                           _read_SCL
                           _read_SDA
 ---------------------------------------------------------------------------------
 (5) _i2c_stop                                             0     0      0   14364
                          _I2C_delay
                          _clear_SDA
                           _read_SCL
                           _read_SDA
 ---------------------------------------------------------------------------------
 (6) _clear_SDA                                            0     0      0    7268
                       _digitalWrite
                            _pinMode
 ---------------------------------------------------------------------------------
 (5) _i2c_read_bit                                         1     1      0   14387
                                              6 COMRAM     1     1      0
                          _I2C_delay
                          _clear_SCL
                           _read_SCL
                           _read_SDA
 ---------------------------------------------------------------------------------
 (6) _read_SDA                                             0     0      0    3548
                        _digitalRead
                            _pinMode
 ---------------------------------------------------------------------------------
 (6) _read_SCL                                             0     0      0    3548
                        _digitalRead
                            _pinMode
 ---------------------------------------------------------------------------------
 (2) _digitalRead                                          5     3      2     524
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (6) _clear_SCL                                            0     0      0    7268
                       _digitalWrite
                            _pinMode
 ---------------------------------------------------------------------------------
 (3) _pinMode                                              6     2      4    3024
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) _I2C_delay                                            4     4      0       0
 ---------------------------------------------------------------------------------
 (3) _bcd2dec                                              4     2      2    2251
                                             30 COMRAM     4     2      2
                            ___awdiv
                             ___wmul
                         _dsReadData (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8     790
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             16     8      8    2540
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4    1360
                                             18 COMRAM     6     2      4
                            ___awdiv (ARG)
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 (3) _WinAll                                              30    30      0   98667
                                             62 COMRAM    30    30      0
                              _delay
                         _lcdCommand
                             _printf
                           _saldoTxt
 ---------------------------------------------------------------------------------
 (3) _Win2x                                               36    36      0   98667
                                             62 COMRAM    36    36      0
                              _delay
                         _lcdCommand
                             _printf
                           _saldoTxt
 ---------------------------------------------------------------------------------
 (3) _Win1x                                               30    30      0   98667
                                             62 COMRAM    30    30      0
                              _delay
                         _lcdCommand
                             _printf
                           _saldoTxt
 ---------------------------------------------------------------------------------
 (3) _Lose                                                30    30      0   98667
                                             62 COMRAM    30    30      0
                              _delay
                         _lcdCommand
                             _printf
                           _saldoTxt
 ---------------------------------------------------------------------------------
 (1) _saldoTxt                                            17    17      0   50909
                                             45 COMRAM    17    17      0
                              _delay
                               _itoa
                         _lcdCommand
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                               3     1      2   24605
                                             14 COMRAM     3     1      2
                            _lcdChar
 ---------------------------------------------------------------------------------
 (3) _lcdChar                                              1     1      0   22995
                                             13 COMRAM     1     1      0
                         _delayMicro
                           _pushByte
 ---------------------------------------------------------------------------------
 (2) _lcdCommand                                           1     1      0   22965
                                             13 COMRAM     1     1      0
                          _delayMili
                           _pushByte
 ---------------------------------------------------------------------------------
 (4) _pushByte                                             4     2      2   22593
                                              9 COMRAM     4     2      2
                       _digitalWrite
                     _pulseEnablePin
                            _soWrite
 ---------------------------------------------------------------------------------
 (5) _soWrite                                              3     1      2   13485
                                              6 COMRAM     3     1      2
                     _PulseClockData
                       _PulseEnClock
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (6) _PulseEnClock                                         0     0      0    4244
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (6) _PulseClockData                                       0     0      0    4244
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (5) _pulseEnablePin                                       0     0      0    4624
                         _delayMicro
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (6) _digitalWrite                                         6     2      4    4244
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) _delayMicro                                           4     2      2     380
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _delayMili                                            5     3      2     350
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _itoa                                                15     9      6    3115
                                             30 COMRAM    15     9      6
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     615
                                             24 COMRAM     6     2      4
                            ___awdiv (ARG)
                            ___awmod (ARG)
                         _dsReadData (ARG)
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    1516
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _delay                                                2     2      0     138
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _apostandoTxtProgress
     _Apostando
       _Lose
         _delay
         _lcdCommand
           _delayMili
           _pushByte
             _digitalWrite
             _pulseEnablePin
               _delayMicro
               _digitalWrite
             _soWrite
               _PulseClockData
                 _digitalWrite
               _PulseEnClock
                 _digitalWrite
               _digitalWrite
         _printf
           _lcdChar
             _delayMicro
             _pushByte
         _saldoTxt
           _delay
           _itoa
             ___awdiv
             ___wmul
               ___awdiv (ARG)
               ___awmod (ARG)
                 ___awdiv (ARG)
                 _rand (ARG)
                   ___lmul
               _dsReadData (ARG)
                 _i2cReadByte
                   _i2c_read_bit
                     _I2C_delay
                     _clear_SCL
                       _digitalWrite
                       _pinMode
                     _read_SCL
                       _digitalRead
                       _pinMode
                     _read_SDA
                       _digitalRead
                       _pinMode
                   _i2c_stop
                     _I2C_delay
                     _clear_SDA
                       _digitalWrite
                       _pinMode
                     _read_SCL
                     _read_SDA
                   _i2c_write_bit
                     _I2C_delay
                     _clear_SCL
                     _clear_SDA
                     _read_SCL
                     _read_SDA
                 _i2cWriteByte
                   _i2c_read_bit
                   _i2c_start
                     _I2C_delay
                     _clear_SCL
                     _clear_SDA
                     _read_SCL
                     _read_SDA
                   _i2c_stop
                   _i2c_write_bit
               _rand (ARG)
           _lcdCommand
           _printf
       _Win1x
         _delay
         _lcdCommand
         _printf
         _saldoTxt
       _Win2x
         _delay
         _lcdCommand
         _printf
         _saldoTxt
       _WinAll
         _delay
         _lcdCommand
         _printf
         _saldoTxt
       ___awdiv
       ___awmod
       ___fladd
       ___flge
       ___wmul
       _bcd2dec
         ___awdiv
         ___wmul
         _dsReadData (ARG)
       _digitalWrite
       _dsReadData
       _itoa
       _rand
       _srand
         _time (ARG)
       _ssdDigit
         ___awdiv (ARG)
         ___awmod (ARG)
       _ssdUpdate
         _digitalWrite
         _soWrite
       _time
     _GameOver
       _delay
       _lcdCommand
       _printf
       _saldoTxt
     _inverso
       _delay
     _lcdCommand
     _printf
     _verso
       _delay
   _kpDebounce
     _digitalRead
     _soWrite
   _kpInit
     _pinMode
     _soInit
       _pinMode
   _kpRead
   _lcdCommand
   _lcdInit
     _delayMicro
     _delayMili
     _lcdCommand
     _pinMode
     _pushNibble
       _digitalWrite
       _pulseEnablePin
       _soWrite
     _soInit
   _saldoTxt
   _srand
   _ssdInit
     _pinMode
     _soInit
   _textInit
     _delay
     _lcdCommand
     _printf
   _time
   _waitTxtProgress
     _delay
     _lcdCommand
     _printf

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      EE       7       93.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     26      76       5       92.2%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     7E      7F       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1E3      15        0.0%
DATA                 0      0     1E3       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Tue Dec 07 11:53:41 2021

                            _i 00EC                 _pulseEnablePin 2712                             l81 16B2  
                           l82 16AE                             l77 13D2                             l86 16AE  
                 ___awdiv@sign 0006             __size_of_I2C_delay 0002                             _v0 00F0  
                           _v1 00EF                             _v2 00EE                             _v3 00ED  
          ___wmul@multiplicand 001B                  ??_i2cReadByte 0009         __size_of_i2c_write_bit 0058  
        i2cWriteByte@send_stop 0008                 i2cReadByte@bit 000B                            l111 1184  
                          l212 2790                            l205 1D92                            l150 194E  
                          l215 2A0C                            l223 25AE                            l128 2AF0  
                          l313 2960                            l153 28A0                            l170 2932  
                          l218 2A36                            l250 245E                            l410 0F36  
                          l331 1810                            l308 26CE                            l164 2AF4  
                          l260 1548                            l148 1936                            l173 2752  
                          l325 21D8                            l182 2AE6                            l190 2AC8  
                          l318 298E                            l351 1F62                            l431 2AF2  
                          l263 250C                            l504 2710                            l440 29E2  
                          l176 2A84                            l434 283A                            l530 202A  
                          l179 23AE                            l443 29B8                            l531 203A  
                          l419 1EEA                            l372 22F8                            l460 2902  
                          l516 268A                            l437 2802                            l453 2644  
                          l365 2238                            l358 2354                            l519 2AAA  
                          l393 2178                            l386 210E                            l482 2298  
                          l299 27CA                            l379 20A4                            l475 28D2  
                          l469 24B6                            l750 1CDE                            l488 2560  
                          l763 1E42                            l784 1A0C                            l789 1A52  
                 ___awmod@sign 0018                            wreg 000FE8               i2c_write_bit@bit 0007  
                ?_i2cWriteByte 0008               saldoTxt@textCima 002E         i2cWriteByte@send_start 000A  
              i2cReadByte@nack 000A                i2cReadByte@byte 000D                           l1202 25FA  
                         l1047 0852                           l3000 20A0                           l1064 096C  
                         l1056 0B22                           l1048 0840                           l1073 0A3C  
                         l1049 0806                           l3010 20E2                           l3002 20A6  
                         l1074 0A2A                           l3020 2100                           l3012 20EE  
                         l3004 20CA                           l3100 072C                           l3030 2146  
                         l3022 210A                           l3014 20F2                           l3006 20D0  
                         l3110 0768                           l3102 0734                           l3040 2164  
                         l3032 214C                           l3024 2110                           l3016 20F6  
                         l3008 20DC                           l3200 0992                           l3120 077C  
                         l3112 076C                           l3104 0744                           l3042 216A  
                         l3034 2158                           l3026 2134                           l3018 20FA  
                         l3210 09C0                           l3130 0790                           l3122 0780  
                         l3114 0770                           l3106 0756                           l1195 2A5E  
                         l2500 2592                           l3044 2174                           l3036 215C  
                         l3028 213A                           l3212 09CE                           l3204 09A6  
                         l3220 09EC                           l3132 0794                           l3124 0784  
                         l3116 0774                           l3108 0764                           l3140 07A4  
                         l3300 1950                           l3052 2646                           l2510 2726  
                         l2502 2598                           l3038 2160                           l3214 09D6  
                         l3206 09B0                           l3222 09FA                           l3150 0814  
                         l3142 07A8                           l3134 0798                           l3126 0788  
                         l3118 0778                           l3070 0690                           l3062 0664  
                         l3310 19DA                           l3302 197E                           l3054 2682  
                         l1198 1FD0                           l3046 1F64                           l2512 2732  
                         l2504 259A                           l2600 2AAE                           l3232 0A4C  
                         l3240 0AA2                           l3224 09FE                           l3216 09DA  
                         l3208 09BE                           l3160 083E                           l3152 0820  
                         l3144 07D2                           l3136 079C                           l3128 078C  
                         l3080 06CA                           l3072 06A0                           l3064 0670  
                         l3312 19EC                           l3304 198E                           l3048 1FA2  
                         l3400 0C00                           l2450 11B4                           l2506 25AA  
                         l2602 2ABC                           l3250 0AF4                           l3242 0AB2  
                         l3234 0A58                           l3226 0A0C                           l3218 09EA  
                         l3170 0894                           l3162 0860                           l3154 0824  
                         l3146 07EE                           l3138 07A0                           l3090 06F8  
                         l3082 06D0                           l3074 06B0                           l3066 067E  
                         l3314 19FA                           l3306 19BC                           l3058 26D0  
                         l2530 15D6                           l2522 158E                           l2514 154A  
                         l3410 0CEA                           l3330 293C                           l3322 2754  
                         l2700 26AC                           l2460 124C                           l2452 11D4  
                         l2508 2712                           l3260 0B12                           l3252 0AFA  
                         l3244 0AC2                           l3236 0A66                           l3228 0A22  
                         l3180 08CE                           l3172 08A2                           l3164 0870  
                         l3156 0832                           l3148 07FE                           l3092 06FA  
                         l3084 06E2                           l3076 06B2                           l3068 0680  
                         l3316 1A4A                           l3308 19CC                           l2612 29BA  
                         l2540 163A                           l2532 15F2                           l2524 15AA  
                         l2516 1566                           l2604 2804                           l3420 0E3C  
                         l3404 0C36                           l3340 2948                           l3324 2A62  
                         l3500 2312                           l2702 26BC                           l2630 1C3A  
                         l2622 1C1C                           l2710 16EC                           l2470 12E6  
                         l2462 126E                           l2454 11F6                           l2446 1186  
                         l3270 1DAE                           l3254 0AFC                           l3246 0AE2  
                         l3238 0AA0                           l3190 093A                           l3182 08D0  
                         l3174 08B0                           l3158 0834                           l3094 070A  
                         l3086 06E4                           l3078 06BA                           l3318 1A50  
                         l2614 2990                           l3430 0E88                           l3422 0E4E  
                         l3414 0D20                           l3406 0CD6                           l3350 296A  
                         l3342 294E                           l3326 2934                           l3510 2350  
                         l3502 232A                           l2704 26BE                           l2640 1C6E  
                         l2632 1C48                           l2624 1C20                           l2616 2A86  
                         l2720 1730                           l2480 137A                           l2472 1302  
                         l2464 128A                           l2456 1212                           l2448 11A2  
                         l3280 1DE2                           l3272 1DB2                           l3264 1D94  
                         l3256 0B02                           l3248 0AE6                           l3192 093C  
                         l3184 08DA                           l3176 08BC                           l3168 0884  
                         l3096 071A                           l3088 06EA                           l2560 0FA8  
                         l2552 0F38                           l2608 27CC                           l2800 28A2  
                         l3440 0ED4                           l3432 0E9A                           l3424 0E60  
                         l3416 0D86                           l3408 0CDA                           l3360 2976  
                         l3344 2950                           l3336 2940                           l3328 2938  
                         l3520 1890                           l3512 1812                           l3504 2336  
                         l3600 1BE0                           l2650 1CA8                           l2642 1C76  
                         l2634 1C50                           l2626 1C2E                           l2618 2AA2  
                         l2730 17AA                           l2722 177A                           l2714 16FC  
                         l2706 16B4                           l2482 1394                           l2474 131C  
                         l2466 12A4                           l2458 122C                           l2490 2562  
                         l3290 1E1C                           l3282 1DEA                           l3274 1DC0  
                         l3266 1D98                           l3258 0B10                           l3194 094C  
                         l3178 08C0                           l3186 08E0                           l3098 072A  
                         l2570 103C                           l2562 0FC4                           l2554 0F54  
                         l2546 1666                           l2538 161E                           l2810 28C8  
                         l2802 28A6                           l3450 0F20                           l3442 0EE6  
                         l3434 0EAC                           l3426 0E72                           l3418 0DEC  
                         l3370 2204                           l3362 297C                           l3346 2962  
                         l3338 2944                           l3522 18B8                           l3530 190A  
                         l3514 1824                           l3506 2348                           l3610 1C00  
                         l3602 1BE4                           l2660 1CCE                           l2652 1CB0  
                         l2644 1C7E                           l2636 1C54                           l2628 1C36  
                         l2740 17EA                           l2732 17AE                           l2724 177E  
                         l2716 170C                           l2708 16D0                           l2484 13B4  
                         l2476 133C                           l2468 12C4                           l2492 2576  
                         l2820 1F04                           l3284 1DF8                           l3292 1E22  
                         l3276 1DC8                           l3268 1DA6                           l3188 0906  
                         l3196 095C                           l2580 10C6                           l2572 104E  
                         l2564 0FD6                           l2556 0F66                           l2548 1682  
                         l2812 28D0                           l2804 28AA                           l2900 25C2  
                         l3452 0F32                           l3444 0EF8                           l3436 0EBE  
                         l3428 0E76                           l3380 222A                           l3372 2210  
                         l3364 297E                           l3356 296E                           l3348 2966  
                         l3532 1924                           l3524 18D6                           l3540 2AE8  
                         l3460 1D4C                           l3508 234C                           l3612 1C0E  
                         l3604 1BF2                           l2662 1CD6                           l2654 1CB2  
                         l2646 1C8C                           l2638 1C5C                           l2742 17F6  
                         l2734 17C4                           l2726 1790                           l2718 1714  
                         l2478 135E                           l2486 29E4                           l2670 279A  
                         l2830 1F44                           l2822 1F10                           l3294 1E32  
                         l3286 1E0E                           l3278 1DDA                           l3198 0982  
                         l2590 1162                           l2582 10EA                           l2574 1072  
                         l2566 0FFA                           l2558 0F86                           l2806 28BE  
                         l2750 2612                           l2910 241A                           l3702 1522  
                         l2902 25EA                           l3446 0EFC                           l3438 0EC2  
                         l3390 0B7C                           l3382 222E                           l3374 2216  
                         l3366 21DA                           l3358 2972                           l3550 1EA8  
                         l3542 1E44                           l3534 192A                           l3526 1902  
                         l3518 1844                           l3470 1D8C                           l3462 1D66  
                         l3454 24B8                           l3606 1BF8                           l2656 1CB8  
                         l2648 1C92                           l2736 17D0                           l2744 17FA  
                         l2728 179E                           l2488 2A0E                           l2592 2358  
                         l2672 27AC                           l2832 1F50                           l2824 1F2C  
                         l2816 1EEC                           l3296 1E3A                           l3288 1E16  
                         l2584 1110                           l2576 1098                           l2568 1020  
                         l2808 28C4                           l2760 2636                           l2752 2616  
                         l2840 223C                           l2920 2448                           l2912 241E  
                         l3448 0F0E                           l3392 0BB0                           l3384 2234  
                         l3376 2222                           l3368 21FE                           l3560 1ED4  
                         l3552 1EB4                           l3544 1E76                           l3536 192E  
                         l3472 2870                           l3464 1D74                           l3456 1CE0  
                         l3480 21A4                           l3608 1BFC                           l2690 2696  
                         l2682 2690                           l2658 1CBE                           l2738 17E4  
                         l2594 2904                           l2498 257A                           l2666 2ACC  
                         l2674 27AE                           l2834 1F54                           l2826 1F32  
                         l2818 1EF2                           l2586 112C                           l2578 10B4  
                         l2770 28DC                           l2762 263A                           l2754 262A  
                         l2746 25FC                           l2850 2254                           l2842 224C  
                         l2906 2A38                           l2922 245A                           l2914 242E  
                         l2930 1460                           l3394 0BCC                           l3386 0B24  
                         l3378 2226                           l3562 1ED8                           l3554 1EBA  
                         l3546 1E7E                           l3538 1946                           l3474 289C  
                         l3466 1D80                           l3458 1D40                           l3490 21CA  
                         l3482 21B0                           l2692 26A6                           l2676 268C  
                         l2596 2910                           l2668 2792                           l2836 1F58  
                         l2828 1F3E                           l2588 113E                           l2772 28F0  
                         l2780 2462                           l2764 263E                           l2748 260E  
                         l2756 262E                           l2860 2284                           l2852 226A  
                         l2844 2250                           l2916 2432                           l2908 240A  
                         l2940 14B8                           l2932 146A                           l2924 13D4  
                         l3396 0BD4                           l3388 0B5C                           l3564 1EDC  
                         l3556 1EC6                           l3548 1EA2                           l3468 1D86  
                         l3492 21CE                           l3484 21B6                           l3476 217A  
                         l3580 1B8A                           l3572 1B42                           l2598 2914  
                         l2838 1F5C                           l2774 28F4                           l2766 28D4  
                         l2790 2496                           l2782 2472                           l2758 2632  
                         l2862 2294                           l2854 226E                           l2918 2444  
                         l2942 14CC                           l2934 1482                           l2926 1434  
                         l3398 0BF0                           l3566 1EE0                           l3558 1ED0  
                         l3494 21D2                           l3486 21C2                           l3478 219E  
                         l3590 1BA0                           l3582 1B8E                           l3574 1B4A  
                         l2688 2694                           l2960 229A                           l2776 28F8  
                         l2768 28D8                           l2792 24A6                           l2784 247A  
                         l2880 254A                           l2872 251C                           l2856 2270  
                         l2944 14D6                           l2936 1496                           l2928 144C  
                         l3568 1EE4                           l3488 21C6                           l3496 22FA  
                         l3592 1BBC                           l3584 1B94                           l3576 1B82  
                         l2698 26AA                           l2970 22E2                           l2962 22BE  
                         l2778 28FC                           l2794 24AA                           l2786 247E  
                         l2882 255A                           l2874 252A                           l2866 2510  
                         l2858 2280                           l2890 1FE2                           l2946 14EE  
                         l2938 14A0                           l2954 150C                           l3498 2300  
                         l3594 1BC8                           l3586 1B98                           l3578 1B86  
                         l2972 22E6                           l2964 22C4                           l2980 203C  
                         l2796 24AE                           l2788 2482                           l2884 255E  
                         l2876 252E                           l2892 1FF0                           l2948 1502  
                         l3596 1BD6                           l3588 1B9C                           l2974 22EA  
                         l2966 22D0                           l2990 2084                           l2982 2060  
                         l2798 24B2                           l2878 2544                           l2894 2000  
                         l3598 1BDC                           l2976 22EE                           l2968 22D6  
                         l2992 2088                           l2984 2066                           l2896 200A  
                         l2888 1FD2                           l2978 22F4                           l2994 208C  
                         l2986 2072                           l2898 25B0                           l2996 2090  
                         l2988 2078                           l2998 2096                           STR_1 061B  
                         u2110 128A                           u2030 11A2                           u2111 1286  
                         u2031 119E                           u2200 1394                           u2120 12A4  
                         u2104 125E                           u2040 11B4                           u2201 1390  
                         u2121 12A0                           u2105 125A                           u2041 11B0  
                         u3001 2058                           u3011 20B0                           u3100 06F8  
                         u2300 163A                           u3021 20C2                           u3101 06F4  
                         u2301 1636                           u2214 13A6                           u2150 1302  
                         u2134 12B6                           u2070 1212                           u2054 11C6  
                         u2230 25AA                           u3110 070A                           u2215 13A2  
                         u2151 12FE                           u2135 12B2                           u2071 120E  
                         u2055 11C2                           u2231 25A6                           u3031 211A  
                         u3111 0706                           u2224 13C6                           u2160 131C  
                         u2144 12D6                           u2080 122C                           u2064 11E6  
                         u3200 0852                           u3120 071A                           u2320 1682  
                         u2240 1566                           u2225 13C2                           u2161 1318  
                         u2145 12D2                           u2081 1228                           u2065 11E2  
                         u3041 212C                           u3201 084E                           u3121 0716  
                         u2321 167E                           u2241 1562                           u3210 0860  
                         u3130 0756                           u2314 1650                           u3050 1FC2  
                         u3211 085C                           u3131 0752                           u2315 164C  
                         u3300 09BE                           u3220 0870                           u3140 0764  
                         u3060 067E                           u2500 112C                           u2420 103C  
                         u2404 0FEC                           u2340 0F54                           u2260 15AA  
                         u3301 09BA                           u3221 086C                           u3141 0760  
                         u3061 067A                           u2501 1128                           u2421 1038  
                         u2405 0FE8                           u2341 0F50                           u2261 15A6  
                         u2190 137A                           u2174 132E                           u2094 123E  
                         u3310 09CE                           u3230 08A2                           u3150 07D2  
                         u3070 0690                           u2510 113E                           u2430 104E  
                         u2414 1010                           u2350 0F66                           u2334 1698  
                         u2254 1578                           u2191 1376                           u2175 132A  
                         u2095 123A                           u3311 09CA                           u3231 089E  
                         u3151 07CE                           u3071 068C                           u2511 113A  
                         u2431 104A                           u2415 100C                           u2351 0F62  
                         u2335 1694                           u2255 1574                           u3055 1FB8  
                         u2600 1C48                           u2184 134E                           u3400 0AB2  
                         u3320 09EA                           u3240 08B0                           u3160 07EA  
                         u3080 06A0                           u2280 15F2                           u2601 1C44  
                         u2185 134A                           u3401 0AAE                           u3321 09E6  
                         u3241 08AC                           u3161 07E4                           u3081 069C  
                         u2281 15EE                           u2610 1C6E                           u3410 0AC2  
                         u3330 09FA                           u3250 08CE                           u3170 07EC  
                         u3090 06E2                           u2274 15C0                           u2611 1C6A  
                         u3411 0ABE                           u3331 09F6                           u3251 08CA  
                         u3091 06DE                           u2275 15BC                           u2620 1C8C  
                         u2700 16EC                           u2540 2932                           u3500 1E32  
                         u3420 0AE2                           u3340 0A0C                           u3260 0906  
                         u3180 0814                           u2524 1154                           u2460 10B4  
                         u2444 1064                           u2380 0FC4                           u2364 0F78  
                         u2621 1C88                           u2701 16E8                           u2541 292E  
                         u3501 1E2E                           u3421 0ADE                           u3341 0A08  
                         u3261 0902                           u3181 0810                           u2525 1150  
                         u2461 10B0                           u2445 1060                           u2381 0FC0  
                         u2365 0F74                           u2630 1CA8                           u2710 1790  
                         u3430 0AF4                           u3350 0A22                           u3270 094C  
                         u3190 0832                           u3510 197E                           u2534 1178  
                         u2470 10C6                           u2454 1088                           u2390 0FD6  
                         u2374 0F98                           u2294 1608                           u2550 2838  
                         u2631 1CA4                           u2711 178C                           u3431 0AF0  
                         u3351 0A1E                           u3271 0948                           u3191 082E  
                         u3511 197A                           u2535 1174                           u2471 10C2  
                         u2455 1084                           u2391 0FD2                           u2375 0F94  
                         u2295 1604                           u2551 2832                           u2640 1CCE  
                         u2720 179E                           u3440 0B10                           u3360 0A38  
                         u3280 0982                           u3520 19BC                           u2560 283A  
                         u2800 28BE                           u3600 0C32                           u2641 1CCA  
                         u2721 179A                           u3441 0B0C                           u3361 0A34  
                         u3281 097E                           u3521 19B8                           u2801 28BA  
                         u3601 0C2E                           u2730 1810                           u2650 27CA  
                         u3450 1DA6                           u3370 0A4C                           u3290 0992  
                         u3530 19DA                           u2570 2800                           u3610 0D1C  
                         u2731 180C                           u2651 27C6                           u2811 1EFC  
                         u3451 1DA2                           u3371 0A48                           u3291 098E  
                         u3531 19D6                           u2571 27FA                           u3611 0D18  
                         u2660 26A6                           u3460 1DC0                           u3380 0A66  
                         u3540 19FA                           u2484 10DC                           u2580 2802  
                         u2740 260E                           u2900 1FF0                           u3700 0EBE  
                         u3620 0D86                           u2661 26A2                           u2821 1F0A  
                         u3461 1DBC                           u3381 0A62                           u3541 19F6  
                         u2485 10D8                           u2741 260A                           u2901 1FEC  
                         u3701 0EBA                           u3621 0D82                           u2670 26BC  
                         u2590 1C2E                           u3470 1DDA                           u3390 0AA0  
                         u3550 1A4A                           u2494 1100                           u2750 262A  
                         u2830 224C                           u2910 202A                           u3710 0ED4  
                         u3630 0DEC                           u2671 26B8                           u2591 1C2A  
                         u3471 1DD6                           u3391 0A9C                           u3551 1A46  
                         u2495 10FC                           u2751 2626                           u2831 2248  
                         u2911 2026                           u3711 0ED0                           u3631 0DE8  
                         u2680 26CE                           u3480 1DF8                           u2760 28F0  
                         u2840 2264                           u2920 25C2                           u3720 0EE6  
                         u3640 0E4E                           u3560 2960                           u2681 26CA  
                         u3481 1DF4                           u2761 28EC                           u2841 225E  
                         u2921 25BE                           u3721 0EE2                           u3641 0E4A  
                         u3561 295C                           u3801 231C                           u2690 16D0  
                         u3490 1E0E                           u2770 2472                           u2850 2266  
                         u2930 241A                           u3730 0EF8                           u3650 0E60  
                         u3570 298E                           u3810 1840                           u2691 16CC  
                         u3491 1E0A                           u2771 246E                           u2931 2416  
                         u3731 0EF4                           u3651 0E5C                           u3571 298A  
                         u3811 183C                           u2780 2496                           u2860 2280  
                         u2940 242E                           u3740 0F0E                           u3660 0E72  
                         u2781 2492                           u2861 227C                           u2941 242A  
                         u3741 0F0A                           u3661 0E6E                           u3581 21E4  
                         u3901 1E88                           u2790 24A6                           u2870 2294  
                         u2950 2444                           u3750 0F20                           u3670 0E88  
                         u3830 1890                           u2791 24A2                           u2871 2290  
                         u2951 2440                           u3751 0F1C                           u3671 0E84  
                         u3591 21F6                           u3911 1E9A                           u3831 188C  
                         u2880 2544                           u2960 245A                           u3760 0F32  
                         u3680 0E9A                           u3824 1860                           u3920 1BBC  
                         u2881 2540                           u2961 2456                           u3761 0F2E  
                         u3681 0E96                           u3825 185A                           u3921 1BB8  
                         u2890 255A                           u3690 0EAC                           u3850 18D6  
                         u3930 1BD6                           u2971 22A4                           u2891 2556  
                         u3691 0EA8                           u3851 18D2                           u3771 2184  
                         u3931 1BD2                           u3844 18A8                           u3940 1BF2  
                         u2981 22B6                           u3845 18A2                           u3781 2196  
                         u3941 1BEE                           u3870 1924                           u3950 1C0E  
                         u2991 2046                           u3871 1920                           u3791 230A  
                         u3951 1C0A                           u3880 1946                           u3864 18F2  
                         u3881 1942                           u3865 18EC                           u3890 1E76  
                         u3891 1E72                           _Lose 229A                           _main 1B42  
                         _keys 00E9                           _rand 1F64                           _itoa 16B4  
                         _seed 00F2               ??_PulseClockData 0007                           _time 25B0  
                         fsr1h 000FE2                           fsr2h 000FDA                           indf1 000FE7  
                         indf2 000FDF                           fsr1l 000FE1                           fsr2l 000FD9  
                ?_i2c_read_bit 0001                           prodh 000FF4                           prodl 000FF3  
                         start 0000                pushNibble@value 000C                   ___param_bank 000000  
       __end_of_pulseEnablePin 2754                  textInit@F2776 009E                  textInit@F2778 0129  
            saldoTxt@textBaixo 0035           waitTxtProgress@F2801 01D0           waitTxtProgress@F2799 01DF  
                        ?_Lose 0001                __end_of_bcd2dec 2712                __end_of___fladd 0B24  
                        ?_main 0001                          ?_rand 000D                          ?_itoa 001F  
              __end_of___awdiv 1CE0                __end_of___awmod 1E44                          ?_time 0001  
              ___awdiv@divisor 0003                ___awdiv@counter 0005                          _PORTA 000F80  
                        _PORTB 000F81                          _PORTC 000F82                          _PORTD 000F83  
                        _PORTE 000F84                __end_of_charKey 061B                          _TRISA 000F92  
                        _TRISB 000F93                          _TRISC 000F94                          _TRISD 000F95  
                        _TRISE 000F96                __end_of_lcdChar 2ACA            ___lmul@multiplicand 0005  
              __end_of_lcdInit 1D94                 ??_i2cWriteByte 000A                          _Win1x 2110  
                        _Win2x 20A6            __end_of_i2cReadByte 2562                          _delay 268C  
                        _saldo 00B1                __end_of_pinMode 1186                          _valor 0601  
                        _srand 2A38                          _verso 2934                __end_of_inverso 2990  
              __end_of_soWrite 25B0                          tablat 000FF5                __end_of_ssdInit 250E  
            __end_of_I2C_delay 2AF4                          time@t 0001                  _i2c_write_bit 2460  
                        plusw1 000FE3                          plusw2 000FDB                          status 000FD8  
               ??_i2c_read_bit 0007                     Win1x@F2824 0167                     Win1x@F2826 0158  
             __end_of_GameOver 223A                     Win2x@F2821 0176                     Win2x@F2819 0100  
                 pushNibble@rs 000A           __end_of_digitalWrite 13D4                __initialization 23B0  
                 __end_of_Lose 22FA                ?_pulseEnablePin 0001                   __end_of_main 1C1C  
                 __end_of_rand 1FD2                   __end_of_itoa 1812                   __end_of_time 25FC  
              i2cWriteByte@bit 000B               __end_of_i2c_stop 2904                         ??_Lose 003F  
                GameOver@F2804 01C1                  GameOver@F2806 0115                         ??_main 00D1  
                       ??_rand 000F                         ??_itoa 0025                         ??_time 0009  
                __activetblptr 000002           __size_of_digitalRead 016A                         ?_Win1x 0001  
                       ?_Win2x 0001                         ?_delay 0001             __size_of_Apostando 0414  
                       _ADCON1 000FC1               ___awdiv@dividend 0001                         ?_srand 0009  
                       ?_verso 0001                 ?_i2c_write_bit 0001             __size_of_i2c_start 004A  
              _waitTxtProgress 22FA                         _WinAll 203C                  Win1x@textCima 003F  
                    ??_bcd2dec 0021                         ___flge 1950                         ___lmul 1FD2  
                    ??___fladd 0009                         ___wmul 2A86                      ??___awdiv 0005  
                    ??___awmod 0017                         _kpInit 2870                         _kpRead 2AE8  
             __end_of_read_SDA 2804               __end_of_read_SCL 283C                         delay@i 0001  
                       delay@j 0002                         clear_0 23F6                         _soInit 2754  
                       _random 00E3               ___awdiv@quotient 0007                ___awmod@divisor 0015  
                    ??_lcdChar 000E                         isa$std 000001                  Win2x@textCima 003F  
                  _i2cReadByte 250E                      ??_lcdInit 000F                ___awmod@counter 0017  
                       _printf 2792               __end_of_saldoTxt 1F64               __end_of_ssdDigit 2460  
                    ??_pinMode 0005                  saldoTxt@F2794 00AA                  saldoTxt@F2796 00D9  
                    ??_inverso 0003            Apostando@randomChar 0075                   __mediumconst 0000  
             __end_of_textInit 21DA                         tblptrh 000FF7                         tblptrl 000FF6  
                       tblptru 000FF8                      ??_soWrite 0009                      ??_ssdInit 0007  
                       srand@s 0009               __end_of_pushByte 23B0                         verso@k 0003  
                       verso@x 0004  __size_of_apostandoTxtProgress 00A8                     ___flge@ff1 0001  
                   ___flge@ff2 0005                     __accesstop 0080        __end_of__initialization 23FE  
                ___rparam_used 000001                  pushByte@value 000D                    pinMode@type 0003  
         __end_of_i2cWriteByte 229A                 __pcstackCOMRAM 0001                  __end_of_Win1x 217A  
                __end_of_Win2x 2110                   __pidataBANK0 283C                   __pidataBANK1 1A54  
            __end_of_Apostando 0F38                  __end_of_delay 26D0                  __end_of_valor 0611  
                __end_of_srand 2A60                  __end_of_verso 2962               i2cWriteByte@byte 0009  
           __size_of_delayMili 0030             __size_of_clear_SDA 002A             __size_of_clear_SCL 002A  
            __end_of_i2c_start 2646           __end_of_i2c_read_bit 28D4                      ?_GameOver 0001  
                      ??_Win1x 003F                        ??_Win2x 003F                        ??_delay 0001  
              ??_i2c_write_bit 0007                        ??_srand 000B                        ??_verso 0003  
                   __pbssBANK0 00D9        __end_of_waitTxtProgress 2356                      ?_i2c_stop 0001  
        __size_of_digitalWrite 024E                     _dsReadData 2646               dsReadData@result 0011  
                   _delayMicro 2AF4                        ?_WinAll 0001                        ?___flge 0001  
                      ?___lmul 0001                    WinAll@F2814 0194                    WinAll@F2816 0185  
                   _lcdCommand 2ACA                        ?___wmul 0019                        ?_kpInit 0001  
                      ?_kpRead 0001                 ___lmul@product 0009                        ?_soInit 0001  
                   _kpDebounce 1812                        ?_printf 000F             __size_of_ssdUpdate 0176  
                   ??_GameOver 003F           i2cReadByte@send_stop 0008                   _digitalWrite 1186  
            __end_of_delayMili 2934              __end_of_clear_SDA 29BA              __end_of_clear_SCL 29E4  
                    ?_read_SDA 0001                      ?_read_SCL 0001                     ??_i2c_stop 0007  
             ??_pulseEnablePin 0007                      ?_saldoTxt 0001                      _I2C_delay 2AF2  
                      __Hparam 0000                        __Lparam 0000                      ?_ssdDigit 0019  
               Win1x@textBaixo 004E                __size_of_WinAll 006A                kpDebounce@tempo 007F  
                      _bcd2dec 26D0                __size_of___flge 0104                      ?_textInit 0001  
                      ___fladd 0664                        ___awdiv 1C1C                __size_of___lmul 006A  
                      ___awmod 1D94                      ?_pushByte 000A                __size_of___wmul 0026  
                 __psmallconst 0600                __size_of_kpInit 0032                __size_of_kpRead 000A  
                      _charKey 0611                    ssdDigit@val 001A                    ssdDigit@pos 0019  
                      __pcinit 23B0                        _lcdChar 2AAC                        __ramtop 0600  
              __size_of_soInit 003E                        _lcdInit 1CE0                        __ptext0 1B42  
                      __ptext1 22FA                        __ptext2 217A                        __ptext3 24B8  
                      __ptext4 1CE0                        __ptext5 2A60                        __ptext6 2AE8  
                      __ptext7 2870                        __ptext8 2754                        __ptext9 1812  
             GameOver@textCima 0053                __size_of_printf 003A                        _display 00F1  
                      _pinMode 0F38               ___awmod@dividend 0013                        _inverso 2962  
               apostaTxt@F2791 0080                 apostaTxt@F2789 008F                     delayMili@a 0001  
                   delayMili@i 0004                        _soWrite 2562                 Win2x@textBaixo 0054  
                      _ssdInit 24B8      apostandoTxtProgress@F2833 0149      apostandoTxtProgress@F2835 013A  
                      _started 00EB           end_of_initialization 23FE                  ?_PulseEnClock 0001  
                 Lose@textCima 003F               ?_waitTxtProgress 0001                     ??_read_SDA 0007  
                   ??_read_SCL 0007                        itoa@ptr 002C                  __Lmediumconst 0000  
        __size_of_i2cWriteByte 0060                    ?_dsReadData 000E                 digitalRead@pin 0001  
                  ?_delayMicro 0001                     ??_saldoTxt 002E                     ?_I2C_delay 0001  
            __end_of_ssdUpdate 154A      apostandoTxtProgress@text2 00C2                     ??_ssdDigit 001A  
                      printf@i 0011                        postdec1 000FE5                        postdec2 000FDD  
                  ?_lcdCommand 0001                     ??_textInit 0012                        postinc0 000FEE  
                      postinc2 000FDE                     ??_pushByte 000C          __size_of_i2c_read_bit 0032  
      __size_of_PulseClockData 002A                   itoa@tmp_char 0027                  ??_digitalRead 0003  
                  ?_kpDebounce 0001                   ?_i2cReadByte 0008                i2c_read_bit@bit 0007  
                  ___fladd@grs 0010                     _pushNibble 2A60                   _i2cWriteByte 223A  
               ??_PulseEnClock 0007              textInit@textBaixo 0012                   _i2c_read_bit 28A2  
                    Lose@F2811 01A3                      Lose@F2809 01B2                 __end_of_WinAll 20A6  
 __end_of_apostandoTxtProgress 1EEC                 __end_of___flge 1A54                 __end_of___lmul 203C  
               __end_of___wmul 2AAC                 __end_of_kpInit 28A2                 __end_of_kpRead 2AF2  
                    _Apostando 0B24                 __end_of_soInit 2792                 __end_of_printf 27CC  
          __size_of_dsReadData 0046            __size_of_delayMicro 0002            start_initialization 23B0  
          __end_of_digitalRead 16B4                      _i2c_start 25FC       waitTxtProgress@textBaixo 0021  
            __size_of_GameOver 0060            __size_of_lcdCommand 001E            __size_of_kpDebounce 013E  
                  ??_I2C_delay 0001              __size_of_i2c_stop 0030                       ??_WinAll 003F  
            kpDebounce@oldRead 00E5              kpDebounce@newRead 00E7                       ??___flge 0009  
                     ??___lmul 0009                       ??___wmul 001D                       ??_kpInit 0007  
                     ??_kpRead 0003                    __pdataBANK0 0080                    __pdataBANK1 0100  
                     ??_soInit 0007                       ??_printf 0011                     ?_Apostando 0001  
                   itoa@result 0021              dsReadData@address 000E                      ___fladd@a 0005  
                    ___fladd@b 0001                    __pbssCOMRAM 007F                  __pcstackBANK0 00B3  
                  ?_pushNibble 000A                     pinMode@pin 0001                 _Apostando$1320 006B  
                   ?_i2c_start 0001          __end_of_i2c_write_bit 24B8                      __pnvBANK0 00F2  
            __size_of_read_SDA 0038              __size_of_read_SCL 0038                      _delayMili 2904  
                    _clear_SDA 2990                      _clear_SCL 29BA              __size_of_saldoTxt 0078  
                     ?_bcd2dec 001F                       ?___fladd 0001                       ?___awdiv 0001  
                     ?___awmod 0013              __size_of_ssdDigit 0058                 _PulseClockData 2A0E  
         __end_of_PulseEnClock 2A0E              __size_of_textInit 0060                    _digitalRead 154A  
                     ?_lcdChar 0001              __size_of_pushByte 005A                       ?_lcdInit 0001  
                  __smallconst 0600           __size_of_i2cReadByte 0054                       ?_pinMode 0001  
                     ?_inverso 0001                       ?_soWrite 0007                       ?_ssdInit 0001  
               __size_of_Win1x 006A                 __size_of_Win2x 006A                 __size_of_delay 0044  
               __size_of_srand 0028                 __size_of_verso 002E           _apostandoTxtProgress 1E44  
               ___wmul@product 001D                   ??_dsReadData 0010                   ??_delayMicro 0003  
                   ?_delayMili 0001                     ?_clear_SDA 0001                     ?_clear_SCL 0001  
       __end_of_PulseClockData 2A38            __size_of_pushNibble 0026                   ??_lcdCommand 000E  
                    _ssdUpdate 13D4                   ??_kpDebounce 000A                    ??_Apostando 0063  
            ___wmul@multiplier 0019               textInit@textCima 0023                lcdCommand@value 000E  
                   printf@text 000F                      main@tecla 007D             __end_of_dsReadData 268C  
                     _GameOver 21DA             __end_of_delayMicro 2AF6                    ??_i2c_start 0007  
            ___lmul@multiplier 0001                      copy_data0 23C4                      copy_data1 23E4  
        ?_apostandoTxtProgress 0001             __end_of_lcdCommand 2AE8                     pushByte@rs 000A  
                 lcdChar@value 000E                       _i2c_stop 28D4        waitTxtProgress@textCima 0012  
           __end_of_kpDebounce 1950                       __Hrparam 0000                       __Lrparam 0000  
     __size_of_waitTxtProgress 005C                ?_PulseClockData 0001                      itoa@basea 0023  
                   ?_ssdUpdate 0001               __size_of_bcd2dec 0042                      itoa@value 001F  
             __size_of___fladd 04C0               __size_of___awdiv 00C4               __size_of___awmod 00B0  
      __size_of_pulseEnablePin 0042               __size_of_lcdChar 001E               __size_of_lcdInit 00B4  
              WinAll@textBaixo 004E               __size_of_pinMode 024E               __size_of_inverso 002E  
                     __ptext10 1E44                       __ptext11 2934                       __ptext20 1FD2  
                     __ptext12 2962                       __ptext21 2646                       __ptext13 21DA  
                     __ptext30 2804                       __ptext22 223A                       __ptext14 0B24  
                     __ptext31 154A                       __ptext23 25FC                       __ptext15 25B0  
                     __ptext40 20A6                       __ptext32 29BA                       __ptext24 250E  
                     __ptext16 13D4                       __ptext41 2110                       __ptext33 0F38  
                     __ptext25 2460                       __ptext17 2408                       __ptext50 2A0E  
                     __ptext42 229A                       __ptext34 2AF2                       __ptext26 28D4  
                     __ptext18 2A38                       __ptext51 2712                       __ptext43 1EEC  
                     __ptext35 26D0                       __ptext27 2990                       __ptext19 1F64  
                     __ptext52 1186                       __ptext44 2792                       __ptext36 1950  
                     __ptext28 28A2                       __ptext53 2AF4                       __ptext45 2AAC  
                     __ptext37 0664                       __ptext29 27CC                       __ptext54 2904  
                     __ptext46 2ACA                       __ptext38 1D94                       __ptext55 16B4  
                     __ptext47 2356                       __ptext39 203C                       __ptext56 2A86  
                     __ptext48 2562                       __ptext57 1C1C                       __ptext49 29E4  
                     __ptext58 268C               __size_of_soWrite 004E               __size_of_ssdInit 0056  
            GameOver@textBaixo 003F                  __size_of_Lose 0060                       _read_SDA 27CC  
                     _read_SCL 2804                 Apostando@tempo 0071                  __size_of_main 00DA  
                __size_of_rand 006E                  __size_of_itoa 015E                  __size_of_time 004C  
                     _saldoTxt 1EEC                    ??_delayMili 0003                    ??_clear_SDA 0007  
                  ??_clear_SCL 0007          __size_of_PulseEnClock 002A                       _ssdDigit 2408  
                  delayMicro@a 0001                       isa$xinst 000000                   soWrite@value 0007  
                     _textInit 217A                       _pushByte 2356                  Lose@textBaixo 004E  
                 ??_pushNibble 000C                  ?_digitalWrite 0001                       itoa@ptr1 002A  
       ??_apostandoTxtProgress 0079                   _PulseEnClock 29E4                 WinAll@textCima 003F  
                     inverso@k 0003                       inverso@x 0004              digitalWrite@value 0003  
                     soWrite@i 0009       apostandoTxtProgress@text 00B3                   bcd2dec@value 001F  
                  ??_ssdUpdate 000A             __end_of_pushNibble 2A86                   ?_digitalRead 0001  
            ??_waitTxtProgress 0012                    kpDebounce@i 000D                 ??_digitalWrite 0005  
                itoa@tmp_value 0028                  ___fladd@signs 000D                digitalWrite@pin 0001  
                 ___fladd@aexp 000E                   ___fladd@bexp 000F                     Apostando@t 006D  
